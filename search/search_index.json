{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"index.html#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"index.html#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"index.html#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"ADS%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/index.html","text":"ADS \u6768\u6d0b\u8001\u5e08 2019-2020\u5b66\u5e74\u6625\u590f\u5b66\u671f \u6768\u6d0b\u8001\u5e08\u662f\u6211\u6821AI\u6240\u7684\u9752\u5e74\u624d\u4fca\uff0c\u4eba\u5f88\u5e05\uff0c~~\u662f\u4eba\u8d62\uff0c~~\u8bb2\u8bfe\u4e5f\u5f88\u6e05\u695a(\u4ee5\u524d\u662fACM\u91d1\u724c\u9009\u624b\uff0cADS\u7684\u4e1c\u897f\u4e0d\u5728\u8bdd\u4e0b) \u6768\u6d0b\u8001\u5e08\u73ed\u7ed9\u5206\u4e5f\u5f88\u597d\uff0c\u5e76\u4e14\u53d6\u6d88\u4e86\u65e0\u610f\u4e49\u7684\u4e92\u8bc4\uff0c\u5168\u90e8\u7531\u52a9\u6559\u8fdb\u884c\u8bc4\u5206 \u603b\u4e4b\u5c31\u662f\u975e\u5e38\u63a8\u8350\u9009\u8bfe\uff01\uff01\uff01 \u8f6f\u5de5\u4e00\u822c\u4f1a\u9884\u7f6eyds\u8001\u5e08\u7684\u8bfe\uff0c\u867d\u7136\u7ed9\u5206\u9875\u6bd4\u8f83\u597d\uff0c\u4f46\u662f\u542c\u4e0a\u8fc7\u8bfe\u7684\u540c\u5b66\u8bf4\u4f53\u9a8c\u6bd4\u8f83\u4e00\u822c \u5f53\u65f6\u5927\u80c6\u6362\u4e86\u4e00\u6ce2ADS\u8001\u5e08\uff0c\u6ca1\u60f3\u5230\u8840\u8d5a \u4e2a\u4eba\u8ba4\u4e3a\u4e0aADS\u7684\u6768\u6d0b\u8001\u5e08\u548c\u4e0aDS/OOP\u7684\u9648\u7fd4\u8001\u5e08\u662f\u6211\u5927\u4e8c\u9047\u5230\u7684\u8bb2\u8bfe\u6c34\u5e73\u6700\u9ad8\u7684\u8001\u5e08 \u4e2a\u4eba\u8ba4\u4e3a\u8ba1\u9662\u5927\u4e8c\u4e0b\u8003\u8bd5\u96be\u5ea6\u6700\u9ad8\u7684\u4e00\u95e8\u8bfe\uff0c\u4ece\u8fd9\u4e24\u5e74\u770b\u6765\u4e00\u5e74\u6bd4\u4e00\u5e74\u96be\uff0c\u9700\u8981\u7528\u5fc3\u51c6\u5907\uff0c\u4e0d\u7136\u8003\u8bd5\u6210\u7ee9\u4f1a\u975e\u5e38\u96be\u770b \u4f46\u662f\u76f8\u5bf9\u7684\uff0c\u5e73\u65f6\u5206\u662f\u6bd4\u8f83\u5bb9\u6613\u62ff\u9ad8\u5206\u7684\uff0c\u6240\u4ee5\u5e73\u65f6\u5206\u4e00\u5b9a\u8981\u5f80\u9ad8\u53bb\u5237 \u5386\u5e74\u5377\u53ef\u4ee5\u53bb PTA\u6559\u80b2\u8d85\u5e02\u8d2d\u4e70 \uff0c\u867d\u7136\u6709\u70b9\u8d35\uff0c\u4f46\u6211\u611f\u89c9\u8fd8\u662f\u503c\u5f97\u7684 \u8fd9\u95e8\u8bfe\u7684\u5185\u5bb9\u8fd8\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u5b66\u5b8c\u4e4b\u540e\u5bf9\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u4f1a\u6709\u4e00\u4e2a\u65b0\u7684\u8ba4\u8bc6 \u8981\u7279\u522b\u5f53\u5fc3\u540e\u534a\u90e8\u5206\u7684NP\u95ee\u9898\uff0c\u968f\u673a\u7b97\u6cd5\uff0c\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u5c40\u90e8\u641c\u7d22\u7b49\u5185\u5bb9\uff0c\u8003\u8bd5\u6700\u96be\u7684\u5c31\u662f\u8fd9\u4e00\u5757","title":"Index"},{"location":"ADS%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/index.html#ads","text":"\u6768\u6d0b\u8001\u5e08 2019-2020\u5b66\u5e74\u6625\u590f\u5b66\u671f \u6768\u6d0b\u8001\u5e08\u662f\u6211\u6821AI\u6240\u7684\u9752\u5e74\u624d\u4fca\uff0c\u4eba\u5f88\u5e05\uff0c~~\u662f\u4eba\u8d62\uff0c~~\u8bb2\u8bfe\u4e5f\u5f88\u6e05\u695a(\u4ee5\u524d\u662fACM\u91d1\u724c\u9009\u624b\uff0cADS\u7684\u4e1c\u897f\u4e0d\u5728\u8bdd\u4e0b) \u6768\u6d0b\u8001\u5e08\u73ed\u7ed9\u5206\u4e5f\u5f88\u597d\uff0c\u5e76\u4e14\u53d6\u6d88\u4e86\u65e0\u610f\u4e49\u7684\u4e92\u8bc4\uff0c\u5168\u90e8\u7531\u52a9\u6559\u8fdb\u884c\u8bc4\u5206 \u603b\u4e4b\u5c31\u662f\u975e\u5e38\u63a8\u8350\u9009\u8bfe\uff01\uff01\uff01 \u8f6f\u5de5\u4e00\u822c\u4f1a\u9884\u7f6eyds\u8001\u5e08\u7684\u8bfe\uff0c\u867d\u7136\u7ed9\u5206\u9875\u6bd4\u8f83\u597d\uff0c\u4f46\u662f\u542c\u4e0a\u8fc7\u8bfe\u7684\u540c\u5b66\u8bf4\u4f53\u9a8c\u6bd4\u8f83\u4e00\u822c \u5f53\u65f6\u5927\u80c6\u6362\u4e86\u4e00\u6ce2ADS\u8001\u5e08\uff0c\u6ca1\u60f3\u5230\u8840\u8d5a \u4e2a\u4eba\u8ba4\u4e3a\u4e0aADS\u7684\u6768\u6d0b\u8001\u5e08\u548c\u4e0aDS/OOP\u7684\u9648\u7fd4\u8001\u5e08\u662f\u6211\u5927\u4e8c\u9047\u5230\u7684\u8bb2\u8bfe\u6c34\u5e73\u6700\u9ad8\u7684\u8001\u5e08 \u4e2a\u4eba\u8ba4\u4e3a\u8ba1\u9662\u5927\u4e8c\u4e0b\u8003\u8bd5\u96be\u5ea6\u6700\u9ad8\u7684\u4e00\u95e8\u8bfe\uff0c\u4ece\u8fd9\u4e24\u5e74\u770b\u6765\u4e00\u5e74\u6bd4\u4e00\u5e74\u96be\uff0c\u9700\u8981\u7528\u5fc3\u51c6\u5907\uff0c\u4e0d\u7136\u8003\u8bd5\u6210\u7ee9\u4f1a\u975e\u5e38\u96be\u770b \u4f46\u662f\u76f8\u5bf9\u7684\uff0c\u5e73\u65f6\u5206\u662f\u6bd4\u8f83\u5bb9\u6613\u62ff\u9ad8\u5206\u7684\uff0c\u6240\u4ee5\u5e73\u65f6\u5206\u4e00\u5b9a\u8981\u5f80\u9ad8\u53bb\u5237 \u5386\u5e74\u5377\u53ef\u4ee5\u53bb PTA\u6559\u80b2\u8d85\u5e02\u8d2d\u4e70 \uff0c\u867d\u7136\u6709\u70b9\u8d35\uff0c\u4f46\u6211\u611f\u89c9\u8fd8\u662f\u503c\u5f97\u7684 \u8fd9\u95e8\u8bfe\u7684\u5185\u5bb9\u8fd8\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u5b66\u5b8c\u4e4b\u540e\u5bf9\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u4f1a\u6709\u4e00\u4e2a\u65b0\u7684\u8ba4\u8bc6 \u8981\u7279\u522b\u5f53\u5fc3\u540e\u534a\u90e8\u5206\u7684NP\u95ee\u9898\uff0c\u968f\u673a\u7b97\u6cd5\uff0c\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u5c40\u90e8\u641c\u7d22\u7b49\u5185\u5bb9\uff0c\u8003\u8bd5\u6700\u96be\u7684\u5c31\u662f\u8fd9\u4e00\u5757","title":"ADS"},{"location":"CN%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.html","text":"\u8ba1\u7b97\u673a\u7f51\u7edc \u516b\u4e2a\u5b9e\u9a8c\u7684\u8be6\u7ec6\u5185\u5bb9(\u62a5\u544a\u548c\u4ee3\u7801)\u53ef\u4ee5\u53c2\u8003\uff1ahttps://github.com/Zhang-Each/Collection-of-schoolwork-code \u9009\u8bfe \u6211\u662fqjs\u73ed\uff0c\u8be5\u8001\u5e08\u5e73\u65f6\u5206\u7ed9\u5206\u5f88\u4f4e\uff0c\u4e3b\u8981\u662flab\u6263\u5206\u8f83\u591a\uff0c\u8003\u524d\u4e5f\u6ca1\u6709\u4efb\u4f55\u7684\u63d0\u793a \u9694\u58c1lkj\u73ed\u8003\u8bd5\u524d\u53d1\u4e86100\u9053\u9009\u62e9\u9898\u4f5c\u4e3a\u7ec3\u4e60\uff0c\u7b2c\u4e8c\u5929\u8003\u8bd5\u4e2d\u51fa\u73b0\u4e86\u5341\u51e0\u4e2a\u539f\u9898\u7684\u6837\u5b50\uff0c\u5e76\u4e14lkj\u5728\u8003\u524d\u4e00\u76f4\u5728\u9489\u9489\u7fa4\u91cc\u6cc4\u9898\u548c\u63d0\u9192\u590d\u4e60\u65b9\u5411\uff0c\u53cd\u89c2\u6211\u73ed\u5565\u4e5f\u6ca1\u6709\uff0clkj\u7ed9\u5206\u5982\u4f55\u6211\u4e0d\u6e05\u695a\uff0c\u5982\u679c\u6709lkj\u73ed\u4e0a\u7684\u540c\u5b66\u53ef\u4ee5\u56de\u590d\u4e00\u4e0b\uff0c\u867d\u7136\u6211\u8ba4\u4e3a\u8fd9\u79cd\u505a\u6cd5\u5f88\u79bb\u8c31\uff0c\u4e0d\u592a\u516c\u5e73\uff0c\u4f46\u6211\u8fd8\u662f\u5efa\u8bae\u5927\u5bb6\u8003\u8ba1\u7f51\u4e4b\u524d\u6253\u63a2\u4e00\u4e0blkj\u73ed\u7684\u6d88\u606f \u671f\u672b\u8003\u8bd5 \u542c\u5237\u8fc7\u7684\u4eba\u8bf4\u671f\u672b\u8003\u8bd5\u6709\u5f88\u591a\u738b\u9053408\u91cc\u9762\u7684\u539f\u9898\u7ffb\u8bd1\u6210\u82f1\u6587\u6765\u8003\u8bd5\u7684\uff0c\u53e6\u5916\u6709\u5f88\u591a\u9898\u76ee\u662flkj\u73ed\u4e0a\u7684\u5e73\u65f6\u4f5c\u4e1a\u9898\u548c\u8003\u524d\u53d1\u7684100\u9053\u9009\u62e9\u9898\u91cc\u9762\u7684\u9898\u76ee \u6211\u6ca1\u5237\u8fc7\u738b\u9053408\uff0c\u8840\u4e8f \u4eca\u5e74\u670980\u9009\u62e9\u9898+20\u5927\u9898\uff08\u51713\u9898\uff09 \u60f3\u62ff\u9ad8\u5206\u5efa\u8bae\u8fd8\u662f\u591a\u5237\u738b\u9053408\uff0c\u5982\u679c\u78b0\u5230\u7ed9\u5206\u5dee\u7684\u8001\u5e08\u4e5f\u8981\u6ce8\u610f\u4e00\u4e0b\u5e73\u65f6\u5b9e\u9a8c\u62a5\u544a\u7684\u89c4\u8303\uff0c\u8003\u524d\u53bb\u770b\u770blkj\u73ed\u7684\u52a8\u5411\u53ef\u80fd\u5c31\u5df2\u7ecf\u6210\u529f\u4e86\u4e00\u534a LKJ\u73ed\u7684\u90a3\u4efd\u8d44\u6599\u4e00\u5b9a\u8981\u597d\u597d\u770b\u770b\uff0c\u52a0\u5bc6\u7684PDF\u5bc6\u7801\u662fqqhe0125","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"CN%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.html#_1","text":"\u516b\u4e2a\u5b9e\u9a8c\u7684\u8be6\u7ec6\u5185\u5bb9(\u62a5\u544a\u548c\u4ee3\u7801)\u53ef\u4ee5\u53c2\u8003\uff1ahttps://github.com/Zhang-Each/Collection-of-schoolwork-code \u9009\u8bfe \u6211\u662fqjs\u73ed\uff0c\u8be5\u8001\u5e08\u5e73\u65f6\u5206\u7ed9\u5206\u5f88\u4f4e\uff0c\u4e3b\u8981\u662flab\u6263\u5206\u8f83\u591a\uff0c\u8003\u524d\u4e5f\u6ca1\u6709\u4efb\u4f55\u7684\u63d0\u793a \u9694\u58c1lkj\u73ed\u8003\u8bd5\u524d\u53d1\u4e86100\u9053\u9009\u62e9\u9898\u4f5c\u4e3a\u7ec3\u4e60\uff0c\u7b2c\u4e8c\u5929\u8003\u8bd5\u4e2d\u51fa\u73b0\u4e86\u5341\u51e0\u4e2a\u539f\u9898\u7684\u6837\u5b50\uff0c\u5e76\u4e14lkj\u5728\u8003\u524d\u4e00\u76f4\u5728\u9489\u9489\u7fa4\u91cc\u6cc4\u9898\u548c\u63d0\u9192\u590d\u4e60\u65b9\u5411\uff0c\u53cd\u89c2\u6211\u73ed\u5565\u4e5f\u6ca1\u6709\uff0clkj\u7ed9\u5206\u5982\u4f55\u6211\u4e0d\u6e05\u695a\uff0c\u5982\u679c\u6709lkj\u73ed\u4e0a\u7684\u540c\u5b66\u53ef\u4ee5\u56de\u590d\u4e00\u4e0b\uff0c\u867d\u7136\u6211\u8ba4\u4e3a\u8fd9\u79cd\u505a\u6cd5\u5f88\u79bb\u8c31\uff0c\u4e0d\u592a\u516c\u5e73\uff0c\u4f46\u6211\u8fd8\u662f\u5efa\u8bae\u5927\u5bb6\u8003\u8ba1\u7f51\u4e4b\u524d\u6253\u63a2\u4e00\u4e0blkj\u73ed\u7684\u6d88\u606f \u671f\u672b\u8003\u8bd5 \u542c\u5237\u8fc7\u7684\u4eba\u8bf4\u671f\u672b\u8003\u8bd5\u6709\u5f88\u591a\u738b\u9053408\u91cc\u9762\u7684\u539f\u9898\u7ffb\u8bd1\u6210\u82f1\u6587\u6765\u8003\u8bd5\u7684\uff0c\u53e6\u5916\u6709\u5f88\u591a\u9898\u76ee\u662flkj\u73ed\u4e0a\u7684\u5e73\u65f6\u4f5c\u4e1a\u9898\u548c\u8003\u524d\u53d1\u7684100\u9053\u9009\u62e9\u9898\u91cc\u9762\u7684\u9898\u76ee \u6211\u6ca1\u5237\u8fc7\u738b\u9053408\uff0c\u8840\u4e8f \u4eca\u5e74\u670980\u9009\u62e9\u9898+20\u5927\u9898\uff08\u51713\u9898\uff09 \u60f3\u62ff\u9ad8\u5206\u5efa\u8bae\u8fd8\u662f\u591a\u5237\u738b\u9053408\uff0c\u5982\u679c\u78b0\u5230\u7ed9\u5206\u5dee\u7684\u8001\u5e08\u4e5f\u8981\u6ce8\u610f\u4e00\u4e0b\u5e73\u65f6\u5b9e\u9a8c\u62a5\u544a\u7684\u89c4\u8303\uff0c\u8003\u524d\u53bb\u770b\u770blkj\u73ed\u7684\u52a8\u5411\u53ef\u80fd\u5c31\u5df2\u7ecf\u6210\u529f\u4e86\u4e00\u534a","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"CN%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.html#lkjpdfqqhe0125","text":"","title":"LKJ\u73ed\u7684\u90a3\u4efd\u8d44\u6599\u4e00\u5b9a\u8981\u597d\u597d\u770b\u770b\uff0c\u52a0\u5bc6\u7684PDF\u5bc6\u7801\u662fqqhe0125"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/index.html","text":"\u6570\u636e\u5e93\u7cfb\u7edf \u5468\u6ce2\u8001\u5e08\uff0c2019-2020\u6625\u590f\u5b66\u671f \u5468\u6ce2\u8001\u5e08\u4eba\u5f88\u597d\uff0c\u53ef\u60dc\u4f3c\u4e4e\u6700\u8fd1\u51e0\u5e74\u624d\u91cd\u56de\u6559\u5b66\u5c97\u4f4d\uff0c\u8bb2\u8bfe\u6bd4\u8f83\u67af\u71e5\uff0c\u867d\u7136\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53ef\u80fd\u662f\u8fd9\u95e8\u8bfe\u672c\u8eab\u7684\u539f\u56e0 \u5468\u6ce2\u8001\u5e08\u73ed\u7684\u597d\u5904\u662f\u5c0f\u4f5c\u4e1a\u7684\u6807\u51c6\u6bd4\u522b\u7684\u73ed\u8981\u4f4e\uff0c\u6211\u542c\u8bf4\u522b\u7684\u73ed\u671f\u4e2d\u90fd\u8981\u5199\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\uff0c\u53c8\u662fQT\u53c8\u662fweb\u7684\uff0c\u6bd4\u8f83\u809d\uff0c\u4f46\u662f\u5468\u6ce2\u8001\u5e08\u73ed\u4f3c\u4e4e\u5199\u4e2a\u63a7\u5236\u53f0\u80fd\u8dd1\u7684\u5c31\u53ef\u4ee5\uff0c\u6bd4\u8f83\u7701\u4e8b \u4e2a\u4eba\u8ba4\u4e3a\u96be\u5ea6\u7565\u4f4e\u4e8eADS\uff0c\u76f8\u6bd4\u4e8eADS\u975e\u5e38\u7ec6\u7684\u8003\u6cd5\uff0cDBS\u7684\u8003\u8bd5\u66f4\u6ce8\u91cd\u5bf9\u6570\u636e\u5e93\u7406\u8bba\u7684\u603b\u4f53\u7406\u89e3\uff0c\u6240\u4ee5\u8003\u8bd5\u4e00\u822c\u90fd\u662f\u516b\u4e2a\u5927\u9898 \u4eca\u5e74\u7684\u9898\u578b\u76f8\u6bd4\u4e8e\u5f80\u5e74\u6709\u6bd4\u8f83\u5927\u7684\u53d8\u5316\uff0c\u8003\u5230\u4e86\u4e00\u4e9b\u5f80\u5e74\u4ece\u6765\u6ca1\u8003\u8fc7\u7684\u4e1c\u897f\uff0c\u56e0\u6b64\u6210\u7ee9\u666e\u904d\u4e0d\u662f\u5f88\u7406\u60f3 \u4f46\u662f\u4e5f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u4eca\u5e74\u4f3c\u4e4e\u6279\u5377\u7684\u6807\u51c6\u6bd4\u8f83\u4f4e\uff0c\u5927\u5bb6\u6700\u540e\u7684\u6210\u7ee9\u4e5f\u90fd\u8fd8\u5408\u60c5\u5408\u7406 \u5468\u6ce2\u8001\u5e08\u73ed\u603b\u4f53\u7ed9\u5206\u4f4e\u4e8e\u522b\u7684\u73ed\uff0c\u6211\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5468\u6ce2\u8001\u5e08\u7ed9\u5206\u6bd4\u8f83\u6c42\u662f\u7684\u539f\u56e0\uff0c\u4f46\u662f\u5468\u8001\u5e08\u4eba\u54c1\u975e\u5e38\u597d\uff0c\u671f\u672b\u751a\u81f3\u5e2e\u6211\u53bb\u67e5\u5377\u5b50\uff0c\u8fd8\u628a\u5c11\u7b97\u7684\u5341\u5206\u5377\u9762\u5206\u7ed9\u6211\u52a0\u56de\u6765\u4e86 \u590d\u4e60\u5efa\u8bae\uff1a \u8fd9\u95e8\u8bfe\u7684PPT\u975e\u5e38\u4e71\uff0c\u53ef\u4ee5\u770b\u770b\u6211\u6574\u7406\u7684\u7b14\u8bb0\uff0c\u5bf9PPT\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u4e86\u9002\u5f53\u7684\u5220\u6539 \u591a\u5237\u5237\u5386\u5e74\u5377\uff0c\u5e73\u65f6\u5206\u4e0d\u51fa\u95ee\u9898\uff0c\u5237\u5b8c\u9898\u4e0a\u4e2a4\u8fd8\u662f\u4e0d\u7b97\u96be\u7684 \u5e73\u65f6\u4f5c\u4e1a\u597d\u597d\u505a\uff0c\u5c24\u5176\u662fminiSQL\u8981\u65e9\u70b9\u5b8c\u6210\uff0c\u5426\u5219\u671f\u672b\u4f1a\u975e\u5e38\u7206\u70b8","title":"Index"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/index.html#_1","text":"\u5468\u6ce2\u8001\u5e08\uff0c2019-2020\u6625\u590f\u5b66\u671f \u5468\u6ce2\u8001\u5e08\u4eba\u5f88\u597d\uff0c\u53ef\u60dc\u4f3c\u4e4e\u6700\u8fd1\u51e0\u5e74\u624d\u91cd\u56de\u6559\u5b66\u5c97\u4f4d\uff0c\u8bb2\u8bfe\u6bd4\u8f83\u67af\u71e5\uff0c\u867d\u7136\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53ef\u80fd\u662f\u8fd9\u95e8\u8bfe\u672c\u8eab\u7684\u539f\u56e0 \u5468\u6ce2\u8001\u5e08\u73ed\u7684\u597d\u5904\u662f\u5c0f\u4f5c\u4e1a\u7684\u6807\u51c6\u6bd4\u522b\u7684\u73ed\u8981\u4f4e\uff0c\u6211\u542c\u8bf4\u522b\u7684\u73ed\u671f\u4e2d\u90fd\u8981\u5199\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\uff0c\u53c8\u662fQT\u53c8\u662fweb\u7684\uff0c\u6bd4\u8f83\u809d\uff0c\u4f46\u662f\u5468\u6ce2\u8001\u5e08\u73ed\u4f3c\u4e4e\u5199\u4e2a\u63a7\u5236\u53f0\u80fd\u8dd1\u7684\u5c31\u53ef\u4ee5\uff0c\u6bd4\u8f83\u7701\u4e8b \u4e2a\u4eba\u8ba4\u4e3a\u96be\u5ea6\u7565\u4f4e\u4e8eADS\uff0c\u76f8\u6bd4\u4e8eADS\u975e\u5e38\u7ec6\u7684\u8003\u6cd5\uff0cDBS\u7684\u8003\u8bd5\u66f4\u6ce8\u91cd\u5bf9\u6570\u636e\u5e93\u7406\u8bba\u7684\u603b\u4f53\u7406\u89e3\uff0c\u6240\u4ee5\u8003\u8bd5\u4e00\u822c\u90fd\u662f\u516b\u4e2a\u5927\u9898 \u4eca\u5e74\u7684\u9898\u578b\u76f8\u6bd4\u4e8e\u5f80\u5e74\u6709\u6bd4\u8f83\u5927\u7684\u53d8\u5316\uff0c\u8003\u5230\u4e86\u4e00\u4e9b\u5f80\u5e74\u4ece\u6765\u6ca1\u8003\u8fc7\u7684\u4e1c\u897f\uff0c\u56e0\u6b64\u6210\u7ee9\u666e\u904d\u4e0d\u662f\u5f88\u7406\u60f3 \u4f46\u662f\u4e5f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u4eca\u5e74\u4f3c\u4e4e\u6279\u5377\u7684\u6807\u51c6\u6bd4\u8f83\u4f4e\uff0c\u5927\u5bb6\u6700\u540e\u7684\u6210\u7ee9\u4e5f\u90fd\u8fd8\u5408\u60c5\u5408\u7406 \u5468\u6ce2\u8001\u5e08\u73ed\u603b\u4f53\u7ed9\u5206\u4f4e\u4e8e\u522b\u7684\u73ed\uff0c\u6211\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5468\u6ce2\u8001\u5e08\u7ed9\u5206\u6bd4\u8f83\u6c42\u662f\u7684\u539f\u56e0\uff0c\u4f46\u662f\u5468\u8001\u5e08\u4eba\u54c1\u975e\u5e38\u597d\uff0c\u671f\u672b\u751a\u81f3\u5e2e\u6211\u53bb\u67e5\u5377\u5b50\uff0c\u8fd8\u628a\u5c11\u7b97\u7684\u5341\u5206\u5377\u9762\u5206\u7ed9\u6211\u52a0\u56de\u6765\u4e86 \u590d\u4e60\u5efa\u8bae\uff1a \u8fd9\u95e8\u8bfe\u7684PPT\u975e\u5e38\u4e71\uff0c\u53ef\u4ee5\u770b\u770b\u6211\u6574\u7406\u7684\u7b14\u8bb0\uff0c\u5bf9PPT\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u4e86\u9002\u5f53\u7684\u5220\u6539 \u591a\u5237\u5237\u5386\u5e74\u5377\uff0c\u5e73\u65f6\u5206\u4e0d\u51fa\u95ee\u9898\uff0c\u5237\u5b8c\u9898\u4e0a\u4e2a4\u8fd8\u662f\u4e0d\u7b97\u96be\u7684 \u5e73\u65f6\u4f5c\u4e1a\u597d\u597d\u505a\uff0c\u5c24\u5176\u662fminiSQL\u8981\u65e9\u70b9\u5b8c\u6210\uff0c\u5426\u5219\u671f\u672b\u4f1a\u975e\u5e38\u7206\u70b8","title":"\u6570\u636e\u5e93\u7cfb\u7edf"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html","text":"\u6570\u636e\u5e93\u7cfb\u7edf\u590d\u4e60\u6574\u7406 RandomStar \u6570\u636e\u5e93\u7cfb\u7edf\u590d\u4e60\u6574\u7406 RandomStar \u7b2c\u4e00\u90e8\u5206\uff1a\u57fa\u672c\u6982\u5ff5\u548c\u5173\u7cfb\u4ee3\u6570 1.0 \u8bfe\u7a0b\u7eea\u8bba 1.1 \u5173\u7cfb\u578b\u6570\u636e\u5e93 Relational Database \u5173\u7cfb\u578b\u6570\u636e\u7684\u4e00\u4e9b\u57fa\u672c\u7279\u70b9 1.2 \u57fa\u672c\u6982\u5ff5\u548c\u7ed3\u6784 1.3 Keys\u952e 1.4 Relational algebra\u5173\u7cfb\u4ee3\u6570 \u7b2c\u4e8c\u90e8\u5206\uff1aSQL 2.1 SQL\u57fa\u672c\u6982\u5ff5 2.2 SQL \u521b\u5efa\uff0c\u66f4\u65b0\uff0c\u5220\u9664 2.3 SQL\u67e5\u8be2 2.4 SQL\u63d2\u5165\uff0c\u5220\u9664\uff0c\u66f4\u65b0 2.5 SQL view \u89c6\u56fe, index \u7d22\u5f15 2.6 Integrity \u5b8c\u6574\u6027\u63a7\u5236 2.7 Authorization \u7b2c\u4e09\u90e8\u5206\uff1aER\u6a21\u578b\u548cNormal Form(\u8303\u5f0f) 3.1 E-R\u6a21\u578b 3.2 E-R Diagram 3.3 Normal Form \u8303\u5f0f 3.3.1 \u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u76ee\u6807 3.3.2 First Normal Form \u7b2c\u4e00\u8303\u5f0f 3.3.3 Functional dependency \u51fd\u6570\u4f9d\u8d56 3.3.4 \u95ed\u5305 3.3.5 BCNF/3NF 3.3.6 \u6700\u5c0f\u8986\u76d6 \u7b2c\u56db\u90e8\u5206: \u6570\u636e\u5e93\u8bbe\u8ba1\u7406\u8bba 4.1 \u5b58\u50a8\u548c\u6587\u4ef6\u7ed3\u6784 4.1.1 \u78c1\u76d8 Magnetic Disks 4.1.2 File organization \u6587\u4ef6\u7ec4\u7ec7 4.2 B+\u6811\u7d22\u5f15 4.2.1 \u7d22\u5f15 4.2.2 B+\u6811\u7d22\u5f15 4.2.3 \u6587\u4ef6\u7d22\u5f15 4.2.4 \u603b\u7ed3\uff1a\u5b58\u50a8\u7ed3\u6784\u548cB+\u6811\u7684\u8ba1\u7b97 4.3 \u67e5\u8be2\u5904\u7406 QueryProcess 4.3.1 select\u7684cost\u4f30\u8ba1 4.3.2 sort\u548cjoin\u7684cost\u4f30\u8ba1 4.4 \u67e5\u8be2\u4f18\u5316 Query Optimization 4.4.1 \u7b49\u4ef7\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f 4.4.2 cost\u7684\u4f30\u8ba1 \u7b2c\u4e94\u90e8\u5206\uff1a\u4e8b\u52a1\u5904\u7406 5.1 \u4e8b\u52a1\u548c\u5e76\u53d1\u63a7\u5236 5.1.1 \u57fa\u672c\u7684\u6982\u5ff5 5.1.2 \u4e8b\u52a1\u7684\u5e76\u53d1\u6267\u884c 5.1.3 Concurrency Control \u5e76\u53d1\u63a7\u5236 5.2 Recovery System \u4e8b\u52a1\u6062\u590d 5.2.1 log-based Recovery\u57fa\u4e8e\u65e5\u5fd7\u7684\u6062\u590d 5.2.2 ARIES Recovery Algorithm\u2014\u2014Aries\u6062\u590d\u7b97\u6cd5 \u7b2c\u516d\u90e8\u5206 XML 6.1 XML\u7684\u5b9a\u4e49\u548c\u57fa\u672c\u7ed3\u6784 6.2 XML Document Schema 6.3 XML \u67e5\u8be2 \u7b2c\u4e00\u90e8\u5206\uff1a\u57fa\u672c\u6982\u5ff5\u548c\u5173\u7cfb\u4ee3\u6570 1.0 \u8bfe\u7a0b\u7eea\u8bba Nothing important\uff0c\u4e3b\u8981\u662f\u4ecb\u7ecd\u8bfe\u7a0b\u7684\u8bc4\u5206\u6807\u51c6\u548c\u778e\u5439\u4e00\u901a 1.1 \u5173\u7cfb\u578b\u6570\u636e\u5e93 Relational Database \u5173\u7cfb\u578b\u6570\u636e\u7684\u4e00\u4e9b\u57fa\u672c\u7279\u70b9 \u5173\u7cfb\u578b\u6570\u636e\u5e93\u662f\u4e00\u7cfb\u5217 \u8868\u7684\u96c6\u5408 \u4e00\u5f20\u8868\u662f\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d \u8868\u4e2d\u7684\u4e00\u884c\u8868\u793a\u4e00\u6761\u5173\u7cfb 1.2 \u57fa\u672c\u6982\u5ff5\u548c\u7ed3\u6784 a relation r is a subset of $D_{1}\\times D_{2}\\times \u2026\\times D_{n}$\uff0c\u4e00\u6761relation\u5c31\u662f\u5176\u4e2d\u7684\u4e00\u4e2an\u5143\u7684 \u5143\u7ec4(tuple) attribute\u5c5e\u6027\uff0c\u6307\u8868\u4e2d\u7684 \u5217\u540d attribution type \u5c5e\u6027\u7684\u7c7b\u578b attribute value \u5c5e\u6027\u503c\uff0c\u67d0\u4e2a\u5c5e\u6027\u5728\u67d0\u6761relation\u4e2d\u7684\u503c \u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u5c5e\u6027\u503c\u5fc5\u987b\u8981\u662fatomic\u7684\uff0c\u5373\u4e0d\u53ef\u5206\u5272\u7684 domain\uff1a\u5c5e\u6027\u503c\u7684\u503c\u57df\uff0cnull\u662f\u6240\u6709\u5c5e\u6027\u7684domain\u4e2d\u90fd\u6709\u7684\u5143\u7d20\uff0c\u4f46\u662fnull\u503c\u4f1a\u9020\u6210\u4e00\u4e9b\u95ee\u9898 Relation Schema \u5173\u7cfb\u6a21\u5f0f $R=(A_{1},A_{2},\u2026,A_{n})$ \u5176\u4e2d$A_i$\u662f\u4e00\u7cfb\u5217\u5c5e\u6027\uff0c\u5173\u7cfb\u6a21\u5f0f\u662f\u5bf9\u5173\u7cfb\u7684\u4e00\u79cd \u62bd\u8c61 r(R)\u8868\u793a\u5173\u7cfb\u6a21\u5f0fR\u4e2d\u7684\u4e00\u79cd\u5173\u7cfb\uff0ctable\u8868\u793a\u8fd9\u4e2a\u5173\u7cfb\u5f53\u524d\u7684\u503c(\u5173\u7cfb\u5b9e\u4f8b) \u6bcf\u4e2a\u5173\u7cfbr\u4e2d\u7684\u5143\u7d20\u662ftable\u4e2d\u7684\u4e00\u884c \u4e0d\u8fc7\u7ecf\u5e38\u7528\u76f8\u540c\u7684\u540d\u5b57\u547d\u540d\u5173\u7cfb\u6a21\u5f0f\u548c\u5173\u7cfb \u5173\u7cfb\u662f \u65e0\u5e8f \u7684\uff0c\u5173\u7cfb\u4e2d\u884c\u548c\u5217\u7684\u987a\u5e8f\u662firrelevant\u7684 1.3 Keys\u952e super key\u8d85\u952e\uff1a\u80fd\u591f \u552f\u4e00\u6807\u8bc6 \u5143\u7ec4\u7684\u5c5e\u6027\u96c6\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e00\u6761\u5173\u7cfb\u800c\u8a00\u8d85\u952e\u7684\u503c\u662f\u552f\u4e00\u7684 \u8d85\u952e\u53ef\u4ee5\u662f\u591a\u4e2a\u5c5e\u6027\u7684\u7ec4\u5408 \u5982\u679cA\u662f\u5173\u7cfbR\u7684\u4e00\u4e2a\u8d85\u952e\uff0c\u90a3\u4e48(A, B)\u4e5f\u662f\u5173\u7cfbR\u7684\u4e00\u4e2a\u8d85\u952e \u8d85\u952e\u7684\u201c\u552f\u4e00\u6807\u8bc6\u201d\u5404\u4e2a\u5143\u7ec4\u662f\u53ef\u4ee5\u6709\u5197\u4f59\u4fe1\u606f\u7684 candidate key\u5019\u9009\u952e\uff1a \u4e0d\u542b\u591a\u4f59\u5c5e\u6027 \u7684\u8d85\u952e \u5982\u679cK\u662fR\u7684\u4e00\u4e2a\u8d85\u952e\uff0c\u800c\u4efb\u4f55K\u7684\u771f\u5b50\u96c6\u4e0d\u662fR\u7684\u4e00\u4e2a\u8d85\u952e\uff0c\u90a3\u4e48K\u5c31\u662fR\u7684\u4e00\u4e2a\u5019\u9009\u952e primary key\u4e3b\u952e\uff1a \u6570\u636e\u5e93\u7ba1\u7406\u5458 \u6307\u5b9a \u7684\u5143\u7ec4\u6807\u8bc6\u7684\u4e00\u4e2a\u5019\u9009\u952e\uff0c\u4e0d\u80fd\u662fnull\u503c foreign key\u5916\u952e\uff1a\u7528\u6765\u63cf\u8ff0\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u6709\u7a7a\u503c \u5982\u679c\u5173\u7cfb\u6a21\u5f0fR1\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u662f\u53e6\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0fR2\u4e2d\u7684\u4e00\u4e2a \u4e3b\u952e \uff0c\u90a3\u4e48\u8fd9\u4e2a\u5c5e\u6027\u5c31\u662fR1\u7684\u4e00\u4e2a\u5916\u952e a foreign key from r1 referencing r2 1.4 Relational algebra\u5173\u7cfb\u4ee3\u6570 Select \u9009\u62e9\uff1a$\\sigma_{p}(r)={t|t\\in r \\and p(t) }$ \u7b5b\u9009\u51fa\u6240\u6709\u6ee1\u8db3\u6761\u4ef6p(t)\u7684\u5143\u7d20t Project\u6295\u5f71\uff1a$\\prod_{A_1,A_2,\\cdots,A_k}(r)$ \u8fd0\u7b97\u7684\u7ed3\u679c\u662f\u539f\u6765\u7684\u5173\u7cfbr\u4e2d\u5404\u5217\u53ea\u4fdd\u7559\u5c5e\u6027$A_1,A_2,\\dots,A_k$ \u540e\u7684\u5173\u7cfb \u4f1a \u81ea\u52a8\u53bb\u6389\u91cd\u590d \u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u53ef\u80fd\u6295\u5f71\u7684\u65f6\u5019\u820d\u5f03\u7684\u5c5e\u6027\u662f\u53ef\u4ee5\u6807\u8bc6\u5173\u7cfb\u552f\u4e00\u6027\u7684\u5c5e\u6027 Union \u5e76\u64cd\u4f5c\uff1a$r \\cup s={t|t\\in r \\or t \\in s}$ \u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u4e2a\u6570\u5fc5\u987b\u76f8\u540c \u5404\u5c5e\u6027\u7684domain\u5fc5\u987b\u662f\u53ef\u4ee5\u6bd4\u8f83\u5927\u5c0f\u7684 Set difference \u5dee\u64cd\u4f5c\uff1a$r-s={t| t\\in r \\and t \\notin s}$ Cartesian-Product\u7b1b\u5361\u5c14\u79ef\uff1a$r\\times s={tq| t\\in r\\and q\\in s}$ \u4e24\u4e2a\u5173\u7cfb\u5fc5\u987b\u662f\u4e0d\u76f8\u4ea4\u7684\uff0c\u5982\u679c\u76f8\u4ea4\u5219\u9700\u8981\u5bf9\u7ed3\u679c\u4e2d\u91cd\u590d\u7684\u5c5e\u6027\u540d\u8fdb\u884c\u91cd\u547d\u540d \u7b1b\u5361\u513f\u79ef\u8fd0\u7b97\u7684\u7ed3\u679c\u5173\u7cfb\u4e2d\u5143\u7ec4\u7684\u4e2a\u6570\u5e94\u8be5\u662frs\u7684\u4e2a\u6570\u4e4b\u4e58\u79ef Renaming\u91cd\u547d\u540d\uff1a$\\rho_{X}(E)$ \u5c06E\u91cd\u547d\u540d\u4e3ax, \u8ba9\u4e00\u4e2a\u5173\u7cfb\u62e5\u6709\u591a\u4e2a\u522b\u540d\uff0c\u540c\u65f6X\u53ef\u4ee5\u5199\u4e3a$X(A_1,A_2,\\dots,A_n)$ \u8868\u793a\u5bf9\u5c5e\u6027\u4e5f\u8fdb\u884c\u91cd\u547d\u540d \u7c7b\u4f3c\u4e8eC++\u4e2d\u7684\u5f15\u7528 \u6269\u5c55\u8fd0\u7b97: \u53ef\u4ee5\u7528\u524d\u9762\u7684\u516d\u79cd\u57fa\u672c\u8fd0\u7b97\u5f97\u5230 Intersection \u4ea4\u8fd0\u7b97$r \\cap s={t|t\\in r \\and t \\in s}=r-(r-s)$ Natual-Join \u81ea\u7136\u8fde\u63a5\uff1a$r\\Join s$ \u4e24\u4e2a\u5173\u7cfb\u4e2d\u540c\u540d\u5c5e\u6027\u5728\u81ea\u7136\u8fde\u63a5\u7684\u65f6\u5019\u5f53\u4f5c \u540c\u4e00\u4e2a\u5c5e\u6027 \u6765\u5904\u7406 Theta join \u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u5408\u5e76\uff1a$r\\Join_{\\theta} s=\\sigma_{\\theta}(r\\Join s)$ Outer-Join\u5916\u90e8\u8fde\u63a5\uff0c\u5206\u4e3a\u5de6\u5916\u8fde\u63a5\uff0c\u53f3\u5916\u8fde\u63a5\uff0c\u5168\u5916\u8fde\u63a5 \u7528\u4e8e\u5e94\u5bf9\u4e00\u4e9b \u4fe1\u606f\u7f3a\u5931 \u7684\u60c5\u51b5(\u6709null\u503c) \u5de6\u5916\u8fde\u63a5$\\ltimes $ \u5de6\u8fb9\u7684\u8868\u53d6\u5168\u90e8\u503c\u6309\u7167\u5173\u7cfb\u548c\u53f3\u8fb9\u8fde\u63a5\uff0c\u53f3\u8fb9\u4e0d\u5b58\u5728\u65f6\u4e3a\u7a7a\u503c \u53f3\u5916\u8fde\u63a5$\\rtimes $ \u53f3\u8fb9\u7684\u8868\u53d6\u5168\u90e8\u503c\u6309\u7167\u5173\u7cfb\u548c\u53f3\u8fb9\u8fde\u63a5\uff0c\u4e0d\u5b58\u5728\u4e3a\u7a7a\u503c Full join\u5de6\u53f3\u5168\u4e0a\uff0c\u4e0d\u5b58\u5728\u5bf9\u5e94\u7684\u5c31\u5199\u6210\u7a7a\u503c Division\u9664\u6cd5\uff1a$r\\div s={t|t\\in\\prod_{R-S}(r)\\and \\forall u \\in s (tu\\in r)}$ \u5982\u679c$R=(A_1,A_2,\\dots,A_m,B_1,\\dots,B_n)\\and S=(B_1,\\dots,B_n)$ \u5219\u6709$R- S=(A_1,A_2,\\dots,A_m)$ Assignment\u58f0\u660e\u64cd\u4f5c\uff0c\u7c7b\u4f3c\u4e8e\u53d8\u91cf\u547d\u540d\u7528$\\leftarrow$ \u53ef\u4ee5\u628a\u4e00\u4e2a\u5173\u7cfb\u4ee3\u6570\u64cd\u4f5c\u8fdb\u884c\u547d\u540d Aggregation operations\u805a\u5408\u64cd\u4f5c \u57fa\u672c\u5f62\u5f0f\uff1a$ {G_1,G_2,\\dots,G_n}{\\cal {G}} {F_1(A_1),\\dots,F_n(A_n)}(E)$ G\u662f\u805a\u5408\u7684\u6807\u51c6\uff0c\u5bf9\u4e8e\u5173\u7cfb\u4e2d\u6240\u6709G\u503c\u76f8\u540c\u7684\u5143\u7d20\u8fdb\u884c\u805a\u5408\uff0cF( )\u662f\u805a\u5408\u7684\u8fd0\u7b97\u51fd\u6570 \u5e38\u89c1\u7684\u6709SUM/MAX/MIN/AVG/COUNT \u7b2c\u4e8c\u90e8\u5206\uff1aSQL 2.1 SQL\u57fa\u672c\u6982\u5ff5 SQL\uff1a\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 \uff0c\u5206\u4e3aDDL,DML,DCL\u51e0\u79cd\u7c7b\u578b\uff0c\u7528\u7684\u6bd4\u8f83\u591a\u7684\u6807\u51c6\u662fSQL-92 \u975e\u8fc7\u7a0b\u5f0f\u7684\u8bed\u8a00 2.2 SQL \u521b\u5efa\uff0c\u66f4\u65b0\uff0c\u5220\u9664 SQL\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b char, varchar, int, numeric(p,d), null-value, date, time, timestamp \u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u90fd\u652f\u6301null\u4f5c\u4e3a\u5c5e\u6027\u503c\uff0c\u53ef\u4ee5\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u58f0\u660e\u4e00\u4e2a\u5c5e\u6027\u7684\u503cnot null \u521b\u5efa\u6570\u636e\u8868create table \u521b\u5efa\u8868\u7684\u8bed\u6cd5 sql create table table_name( variable_name1 type_name1, variable_name2 type_name2, (integrity-contraints) \u2026\u2026,) integrity-contraint \u5b8c\u6574\u6027\u7ea6\u675f\uff1a\u53ef\u4ee5 \u6307\u5b9aprimary key , foreign key references xxx, not null \u5220\u9664\u6570\u636e\u8868 drop table \u66f4\u65b0\u6570\u636e\u8868\u7684\u680f\u76ee alter table alter table R add A D \u6dfb\u52a0\u4e00\u6761\u65b0\u5c5e\u6027 \u5176\u4e2dA\u662f\u5c5e\u6027\u540d\uff0cD\u662fA\u7684domain alter table R drop A \u5220\u9664A\u5c5e\u6027 2.3 SQL\u67e5\u8be2 \u4e8b\u5b9e\u4e0a\u7684\u6700\u91cd\u8981SQL\u8bed\u53e5\uff0c\u8003\u8bd5\u8003\u7684\u4e00\u822c\u90fd\u662f\u67e5\u8be2\u8bed\u53e5 SQL\u67e5\u8be2\u7684\u57fa\u672c\u5f62\u5f0f\uff1aselect\u8bed\u53e5 sql select A1,A2,\u2026,An from r1,r2,\u2026,rn where P \u4e0a\u8ff0\u67e5\u8be2\u7b49\u4ef7\u4e8e$\\prod_{A_1,A_2,\\cdots,A_k}(\\sigma_{p}(r_1\\times r_2\\times \\dots\\times r_m))$ SQL\u67e5\u8be2\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5173\u7cfb select\u5b50\u53e5\u7684\u4e00\u4e9b \u7ec6\u8282 select * from xxx \u8868\u793a\u83b7\u53d6 \u6240\u6709\u5c5e\u6027 \uff0c\u4e8b\u5b9e\u4e0a\u6211\u6000\u7591*\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u53ef\u80fd\u6709\u7684\u6240\u6709\u5185\u5bb9\uff0c\u4ece\u540e\u9762\u7684\u5185\u5bb9\u6765\u770b\uff0cselect\u8bed\u53e5\u786e\u5b9e\u662f\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f SQL\u4e2d\u7684 \u4fdd\u7559\u5b57 \u5bf9\u4e8e \u5927\u5c0f\u5199\u4e0d\u654f\u611f \u53bb\u9664\u91cd\u590d\uff1a select distinct \uff0c\u9632\u6b62\u91cd\u590d\u4e22\u5931\u7684\u529e\u6cd5 select all select\u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u652f\u6301\u57fa\u672c\u7684 \u56db\u5219\u8fd0\u7b97 (\u52a0\u51cf\u4e58\u9664)\uff0c\u6bd4\u5982 SQL select ID, name, salary/2 from instructor; where\u5b50\u53e5\u4e2d\uff1a \u652f\u6301 and or not \u7b49\u903b\u8f91\u8fd0\u7b97 \u652f\u6301 between and \u6765\u67e5\u8be2\u8303\u56f4 from \u5b50\u53e5\uff1a \u91cd\u547d\u540d\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7 old_name as new_name \u8fdb\u884c\u91cd\u547d\u540d from \u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u8868\uff0c\u6b64\u65f6\u4f1a\u5148\u5c06\u8fd9\u4e9b\u8868\u8fdb\u884c\u7b1b\u5361\u513f\u79ef\u7684\u8fd0\u7b97\uff0c\u518d\u8fdb\u884cselect \u5143\u7ec4\u53d8\u91cf\uff1a\u53ef\u4ee5\u4ece\u591a\u4e2a\u8868\u4e2dselect\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u51e0\u4e2a\u4e0d\u540c\u5c5e\u6027\u503c\u7684\u5143\u7ec4 sql select instructor.name as teacher-name, course.title as course-title from instructor, teaches, course where instructor.ID = teaches.ID and teaches.course_id = course.course_id and instructor.dept_name = 'Art'; \u5b57\u7b26\u4e32\u652f\u6301 \u6b63\u5219\u8868\u8fbe\u5f0f \u5339\u914d\uff0c\u7528 like regrex \u7684\u65b9\u5f0f\u53ef\u4ee5\u8fdb\u884c\u5c5e\u6027\u503c\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7528\u6cd5\u6ca1\u600e\u4e48\u8bb2 sql select name from teacher where name like '%hihci%'; \u5c06\u8f93\u51fa\u7684\u7ed3\u679c\u6392\u5e8f order by \u5c5e\u6027\u540d asc/desc \u96c6\u5408\u64cd\u4f5c\uff1a \u53ef\u4ee5\u7528 union/intersect/except \u7b49\u96c6\u5408\u8fd0\u7b97\u6765 \u8fde\u63a5\u4e24\u6761\u4e0d\u540c\u7684\u67e5\u8be2 \u805a\u5408\u64cd\u4f5c\uff1a \u652f\u6301\u7684\u64cd\u4f5c\u6709avg/min/max/sum/count\uff0c\u83b7\u53d6\u7684\u662f\u8868\u4e2d\u7684\u7edf\u8ba1\u91cf sql select dept_name,avg(salary) as avg_salary from instructor group by dept_name; \u4e8b\u5b9e\u4e0aSQL\u8bed\u53e5\u7684\u805a\u5408\u64cd\u4f5c\u548c\u5173\u7cfb\u4ee3\u6570\u4e2d\u7684\u805a\u5408\u8fd0\u7b97\u662f\u5b8c\u5168\u5bf9\u5e94\u7684\uff0c\u5173\u7cfb\u4ee3\u6570\u4e2d\u7684\u805a\u5408\u8fd0\u7b97\u8868\u8fbe\u5f0f$ {G_1,G_2,\\dots,G_n}{\\cal G} {F_1(A_1),\\dots,F_n(A_n)}(E)$\u5bf9\u5e94\u7684SQL\u8bed\u53e5\u662f sql select G1,G2,\u2026,Gn,F1(A1),\u2026,Fn(An) from E group by G1,G2,\u2026,Gn; \u805a\u5408\u64cd\u4f5c\u7684SQL\u8bed\u53e5\u4e66\u5199\u53ef\u4ee5\u5728\u672b\u5c3e\u7528 having xxx \u6765\u8868\u793a\u4e00\u4e9b\u9700\u8981\u805a\u5408\u64cd\u4f5c\u6765\u83b7\u5f97\u7684\u6761\u4ef6\uff0c\u6bd4\u5982 sql select cno from pos natural join detail where year(detail.cdate) = 2018 having count(distinct campus) = 1; Null values \u7a7a\u503c \u5c5e\u6027\u503c\u53ef\u4ee5\u4e3anull\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u6570\u636e\u8868\u7684\u65f6\u5019\u89c4\u5b9a\u54ea\u4e9b\u5143\u7d20\u4e0d\u80fd\u4e3a\u7a7a Nested Subquery \u5d4c\u5957\u67e5\u8be2 \u5bf9\u4e8e\u67e5\u8be2 sql select A1,A2,\u2026,An from r1,r2,\u2026,rn where P \u5176\u4e2d\u7684A\uff0cr\uff0cP\u90fd\u53ef\u4ee5\u88ab\u66ff\u6362\u4e3a\u4e00\u4e2a \u5b50\u67e5\u8be2 \u96c6\u5408\u5173\u7cfb\uff1a\u7528 in/not in +\u5b50\u67e5\u8be2 \u6765\u5224\u65ad\u5426\u4e9b\u5c5e\u6027\u662f\u5426\u5c5e\u4e8e\u7279\u5b9a\u7684\u96c6\u5408\u4e2d some+\u5b50\u67e5\u8be2 \u7528\u4e8e\u5224\u65ad\u96c6\u5408\u4e2d\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7ec4\uff0c\u7528\u6765\u5224\u65ad\u5b58\u5728\u6027 all+\u5b50\u67e5\u8be2 \u53ef\u4ee5\u7528\u6765\u7b5b\u9009\u6700\u503c exists+\u5b50\u67e5\u8be2 \u5224\u65ad\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u662f\u5426\u4e0d\u4e3a\u7a7a not exists+\u5b50\u67e5\u8be2 \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u96c6 with\u5b50\u53e5\uff1a\u5bf9\u5b50\u67e5\u8be2\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c\u53ef\u4ee5\u5728\u4e4b\u540e\u8c03\u7528 scalar\u5b50\u67e5\u8be2\uff1a\u7528\u4e8e\u9700\u8981\u4e00\u4e2a\u503c\u4f5c\u4e3a\u67e5\u8be2\u7ed3\u679c\u7684\u65f6\u5019 join\u5b50\u53e5\uff1a\u53ef\u4ee5\u5bf9\u82e5\u5e72\u5f20\u8868\u8fdb\u884c\u5404\u79cdjoin\u4e4b\u540e\u518d\u67e5\u8be2 natural join \u81ea\u7136\u8fde\u63a5 A join B on(xxx) 2.4 SQL\u63d2\u5165\uff0c\u5220\u9664\uff0c\u66f4\u65b0 \u63d2\u5165: insert into table_name values( ); \u53ef\u4ee5\u7528select\u67e5\u8be2\u5b50\u53e5\u5f97\u5230\u7684\u7ed3\u679c\u4f5c\u4e3avalues\uff0c\u6b64\u65f6\u53ef\u4ee5\u540c\u65f6\u63d2\u5165\u591a\u6761\u7ed3\u679c \u5220\u9664\uff1a delete from table_name where xxxxxx \u66f4\u65b0\uff1a update table_name set xxx where xxxxx case \u5b50\u53e5\uff1a\u7528\u4e8e\u5206\u7c7b\u8ba8\u8bba sql update instructor set salary = case when salary <= 100000 then salary*1.05 else salary *1.03 end 2.5 SQL view \u89c6\u56fe, index \u7d22\u5f15 \u89c6\u56fe\uff1a\u4e00\u79cd \u53ea\u663e\u793a\u6570\u636e\u8868\u4e2d\u90e8\u5206\u5c5e\u6027\u503c \u7684\u673a\u5236 \u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e00\u5f20\u65b0\u7684\u8868\uff0c\u800c\u662f\u9690\u85cf\u4e86\u4e00\u4e9b\u6570\u636e \u521b\u5efa\u89c6\u56fe\u7684\u5b9a\u4e49\u8bed\u53e5\uff1a xxx\u662f\u89c6\u56fe\u7684\u540d\u79f0\uff0c\u5185\u5bb9\u662f\u4ece\u67d0\u4e2atable\u4e2dselect\u51fa\u7684 sql create view xxx as (a subquery) \u89c6\u56fe\u7684\u66f4\u65b0 \u4e5f\u9700\u8981\u4f7f\u7528insert\u8bed\u53e5\u66f4\u65b0\u89c6\u56fe \u53ef\u4ee5\u66f4\u65b0\u7684\u6761\u4ef6 \u521b\u5efa\u65f6\u53ea\u4f7f\u7528\u4e86\u4e00\u5f20\u8868\u7684\u6570\u636e \u521b\u5efa\u65f6\u6ca1\u6709\u8fdb\u884cdistinct\u548c\u805a\u5408\u64cd\u4f5c \u6ca1\u6709\u51fa\u73b0\u7a7a\u503c\u548cdefault Domain\u521b\u5efa\u65b0\u7c7b\u578b create domain new_name + data type (\u6bd4\u5982 char(20)) domain\u53ef\u4ee5\u8bbe\u7f6e\u7ea6\u675f\u6761\u4ef6\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e00\u6bb5domain\u5b9a\u4e49\u8868\u793adegree_level\u53ea\u80fd\u5728\u8fd9\u4e09\u4e2a\u4e2d\u8fdb\u884c\u9009\u62e9 sql create domain degree_level varvhar(10) constraint degree_level_test check(value in ('Bachelors', 'Masters', 'Doctorate')); Large-Object Types \u5927\u5bf9\u8c61\u7c7b\u578b\uff0c\u5206\u4e3ablob(\u4e8c\u8fdb\u5236\u5927\u5bf9\u8c61)\u548cclob(\u6587\u672c\u5927\u5bf9\u8c61)\u4e24\u79cd\uff0c\u5f53\u67e5\u8be2\u9700\u8981\u8fd4\u56de\u5927\u5bf9\u8c61\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u4e2a\u4ee3\u8868\u5927\u5bf9\u8c61\u7684\u6307\u9488 Index\u7d22\u5f15 \u8bed\u6cd5 create index index_name on table_name(attribute) \u5728\u5bf9\u5e94\u7684\u8868\u548c\u5c5e\u6027\u4e2d\u5efa\u7acb\u7d22\u5f15\uff0c\u52a0\u5feb\u67e5\u8be2\u7684\u901f\u5ea6 Transactions \u4e8b\u52a1 \u4e00\u7cfb\u5217\u67e5\u8be2\u7b49\u64cd\u4f5c\u7684\u96c6\u5408 Atomic transaction \u539f\u5b50\u4e8b\u52a1\uff1a\u53ea\u80fd\u88ab\u5b8c\u5168\u6267\u884c\u6216\u8005\u56de\u6eda(roll back) 2.6 Integrity \u5b8c\u6574\u6027\u63a7\u5236 \u5355\u4e2a\u5173\u7cfb\u4e0a\u7684\u7ea6\u675f \u4e3b\u952e primary key\uff0c unique \uff0c not null check\u5b50\u53e5\uff1a\u5199\u5728\u6570\u636e\u8868\u7684\u5b9a\u4e49\u4e2d check(P) \u68c0\u67e5\u67d0\u4e2a\u5c5e\u6027\u662f\u5426\u4e3a\u7279\u5b9a\u7684\u4e00\u4e9b\u503c Domain constraints \u503c\u57df\u7684\u7ea6\u675f \u5728domain\u7684\u5b9a\u4e49\u4e2d\u52a0\u5165check \u8bed\u6cd5 create domain domain_name constraints check_name check(P) Referential Integrity \u5f15\u7528\u5b8c\u6574\u6027 \u88ab\u5f15\u7528\u8868\u4e2d\u4e3b\u952e\u548c\u5916\u952e\u7684\u5173\u7cfb \u5176\u5b9ePPT\u91cc\u8fd9\u4e00\u6bb5\u8bb2\u4e86\u534a\u5929\u5c31\u662f\u5728\u8bf4\u8981\u5728\u5b9a\u4e49\u8868\u7684\u65f6\u5019\u5b9a\u4e49\u4e3b\u952e\u548c\u5916\u952e\u8fdb\u884c\u7ea6\u675f Cascading action(\u4e0d\u77e5\u9053\u8fd9\u4e00\u6bb5\u5728\u8bb2\u4ec0\u4e48\u72d7\u5c41) on update on delete \u5bf9\u4e8e\u6574\u4e2a\u6570\u636e\u5e93\u7684\u7ea6\u675f Assertions(Mysql\u4e0d\u652f\u6301) \u5bf9\u4e8e\u6570\u636e\u5e93\u4e2d\u9700\u8981\u6ee1\u8db3\u7684\u5173\u7cfb\u7684\u4e00\u79cd \u9884\u5148\u5224\u65ad create assertion <assertion-name> check <predicate> \u4e0b\u9762\u662f\u4e00\u6bb5\u4f8b\u5b50 sql create assertion credits_constaint check ( not exists( select * from student S where total_cred <>( select sum(credits) from takes nature join course where takes.ID = S.ID and grade is not null and grade <> 'F' ) ) ) Trigger\u89e6\u53d1\u5668 \u5728\u4fee\u6539\u4e86\u6570\u636e\u5e93\u65f6\u4f1a\u81ea\u52a8\u6267\u884c\u7684\u4e00\u4e9b\u8bed\u53e5 \u65f6\u95f4\u8282\u70b9\u7684\u9009\u62e9 referencing old row as \u5bf9\u65e7\u7684\u884c\u8fdb\u884c\u64cd\u4f5c\uff0c\u7528\u4e8e\u5220\u9664\u548c\u66f4\u65b0 referencing new row as \u5bf9\u65b0\u7684\u884c\u8fdb\u884c\u64cd\u4f5c\uff0c\u7528\u4e8e\u63d2\u5165\u548c\u66f4\u65b0 trigger event\u89e6\u53d1\u4e8b\u4ef6 insert/delete/update\u7b49\u64cd\u4f5c\u90fd\u53ef\u4ee5\u89e6\u53d1\u8bbe\u7f6e\u597d\u7684trigger \u89e6\u53d1\u7684\u65f6\u95f4\u70b9\u53ef\u4ee5\u662fbefore\u548cafter\uff0c\u89e6\u53d1\u5668\u7684\u8bed\u6cd5\u5982\u4e0b sql create trigger trigger_name before/after trigger_event of table_name on attribute referencing xxx for each row when xxxx begin xxxx(SQL operation) end 2.7 Authorization \u6570\u636e\u5e93\u4e2d\u7684\u56db\u79cd\u6743\u9650 read,insert,update,delete Security specification in SQL \u5b89\u5168\u89c4\u8303 grant\u8bed\u53e5\u53ef\u4ee5\u8d4b\u4e88\u7528\u6237\u6743\u9650 grant <privilege list> on <relation name or view name> to <user list> <user list> \u53ef\u4ee5\u662f\u7528\u6237\u540d\uff0c\u4e5f\u53ef\u4ee5\u662fpublic(\u5141\u8bb8\u6240\u6709\u6709\u6548\u7528\u6237\u62e5\u6709\u8fd9\u9879\u6743\u9650) grant\u8bed\u53e5\u540e\u9762\u53ef\u4ee5\u52a0 with grant option \uff0c\u8868\u793a\u8be5\u7528\u6237\u62e5\u6709\u8d4b\u4e88\u5176\u4ed6\u7528\u6237\u8fd9\u9879\u6743\u9650\u7684\u6743\u529b revoke \u6743\u529b\u56de\u6536 revoke <privilege list> on <relation/view name> from <user list> [restrict|cascade] \u4ece\u7528\u6237\u4e2d\u56de\u6536\u6743\u529b role\u8bed\u53e5 create role role_name \u5141\u8bb8\u4e00\u7c7b\u7528\u6237\u6301\u6709\u76f8\u540c\u7684\u6743\u9650 \u7b2c\u4e09\u90e8\u5206\uff1aER\u6a21\u578b\u548cNormal Form(\u8303\u5f0f) 3.1 E-R\u6a21\u578b E-R\u6a21\u578b\u7531enitites(\u5b9e\u4f53)\u548crelation(\u5173\u7cfb)\u7ec4\u6210 Entity set \u5b9e\u4f53\u96c6 \u5b9e\u4f53\u662f\u4e00\u7cfb\u5217\u72ec\u7279\u7684\u5bf9\u8c61\uff0c\u7528\u4e00\u7cfb\u5217\u5c5e\u6027\u6765\u8868\u793a \u540c\u4e00\u7c7b\u5b9e\u4f53\u5171\u4eab\u76f8\u540c\u7684Properties\uff0c\u5b9e\u4f53\u96c6\u5c31\u662f\u7531\u540c\u7c7b\u578b\u7684\u5b9e\u4f53\u7ec4\u6210\u7684\u96c6\u5408 \u8868\u793a\u65b9\u6cd5 \u957f\u65b9\u5f62\u4ee3\u8868\u5b9e\u4f53\u96c6\u5408 \u5c5e\u6027\u5199\u5728\u957f\u65b9\u5f62\u4e2d\uff0c primary key\u7528\u4e0b\u5212\u7ebf \u6807\u6ce8 \u5b9e\u4f53\u96c6\u4e2d\u5bf9\u4e8e\u5c5e\u6027\u7684\u5b9a\u4e49\u548c\u4e4b\u524d\u7684\u51e0\u4e4e\u4e00\u6837 \u5b9e\u4f53\u96c6\u4e2d\u5c5e\u6027\u5b9a\u4e49\u53ef\u4ee5\u5b58\u5728\u7ec4\u5408\u4e0e\u7ee7\u627f\u7684\u5173\u7cfb\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u6837\u4f8b Instructor ID name \u200b first_name \u200b last_name address \u200b street \u200b street_number \u200b street_name \u200b apt_number \u200b city \u200b state - Relationship set \u5173\u7cfb\u96c6 - \u4e00\u4e2arelationship\u662f\u51e0\u4e2a\u5b9e\u4f53\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u5173\u7cfb\u96c6\u5c31\u662f\u540c\u7c7b\u5173\u7cfb\u4e4b\u95f4\u6784\u6210\u7684\u96c6\u5408 - \u4e00\u4e2arelationship\u81f3\u5c11\u9700\u8981\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u5b9e\u4f53\uff0c\u4e00\u4e2a\u5173\u7cfb\u96c6\u81f3\u5c11\u548c\u4e24\u4e2a\u5b9e\u4f53\u96c6\u6709\u5173\u8054 - \u4e00\u4e2a\u5173\u7cfb\u96c6\u6240\u5173\u8054\u7684\u5b9e\u4f53\u96c6\u7684\u4e2a\u6570\u79f0\u4e3adegree\uff0c\u5176\u4e2d\u4ee5\u4e8c\u5143\u5173\u7cfb\u96c6\u4e3a\u4e3b - E-R model constraints \u7ea6\u675f - mapping cardinalities \u6620\u5c04\u57fa\u6570 - \u4e8c\u5143\u5173\u7cfb\u4e2d\u6620\u5c04\u57fa\u6570\u53ea\u6709\u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u4e00\uff0c\u591a\u5bf9\u591a - E-R\u6a21\u578b\u4e2d\u8868\u793a\u6620\u5c04\u5173\u7cfb\uff1a\u7bad\u5934\u8868\u793a\u4e00\uff0c\u76f4\u7ebf\u8868\u793a\u591a - \u4e09\u5143\u5173\u7cfb\u4e2d\uff1a \u7bad\u5934\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21 \uff0c\u5426\u5219\u4f1a\u51fa\u73b0 \u4e8c\u4e49\u6027 - \u53c2\u4e0e\u5ea6\u7ea6\u675f - total participation\uff1a \u82e5\u4e00\u4e2a\u5b9e\u4f53\u96c6\u5168\u90e8\u53c2\u4e0e\u5230\u5173\u7cfb\u4e2d\uff0c\u8981\u7528\u4e24\u6761\u7ebf - partical participation \u90e8\u5206\u53c2\u4e0e - key\u7ea6\u675f\uff1a\u548c\u524d\u9762\u7684\u57fa\u672c\u4e00\u6837 - \u5f31\u5b9e\u4f53\u96c6weak entity set\uff1a\u4e00\u4e9b\u5b9e\u4f53\u96c6\u7684\u5c5e\u6027\u4e0d\u8db3\u4ee5\u5f62\u6210\u4e3b\u952e\uff0c\u5c31\u662f\u5f31\u5b9e\u4f53\u96c6\uff0c\u4e0e\u4e4b\u76f8\u5bf9\u7684\u662f\u5f3a\u5b9e\u4f53\u96c6 - \u7528\u4e8e\u8868\u793a\u4e00\u4e9b\u5173\u7cfb\u4e2d\u7684\u4f9d\u8d56\u6027\uff0c\u5f31\u5b9e\u4f53\u96c6\u9700\u8981\u548c\u5f3a\u5b9e\u4f53\u96c6\u5173\u8054\u624d\u6709\u610f\u4e49 - \u7ecf\u5e38\u51fa\u73b0\u5728\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u4e2d\uff0c\u5728ER\u56fe\u4e2d\u9700\u8981\u7528 \u53cc\u7ebf\u65b9\u6846 \u8868\u793a\uff0c\u6bd4\u5982\u804c\u5de5\u548c\u804c\u5de5\u5bb6\u5c5e\uff0c\u804c\u5de5\u5bb6\u5c5e\u4e0d\u80fd\u8131\u79bb\u4e8e\u804c\u5de5\u5b58\u5728\uff0c\u6240\u4ee5\u804c\u5de5\u5bb6\u5c5e\u5c31\u662f\u4e00\u4e2a\u5f31\u5b9e\u4f53\u96c6 - Aggregation \u805a\u5408 \u53ef\u4ee5\u628a\u4e00\u90e8\u5206E-R\u5173\u7cfb\u805a\u5408\u6210\u4e00\u4e2aEntity\u8fdb\u884c\u64cd\u4f5c \u5728ER\u56fe\u4e2d\u7528\u65b9\u6846\u5c06\u4e00\u4e9b\u5173\u7cfb\u96c6\u548c\u5b9e\u4f53\u96c6\u62ec\u8d77\u6765\u8868\u793a\u4e00\u4e2a\u805a\u5408\u540e\u7684\u5b9e\u4f53\u96c6 Specialization \u7279\u6b8a\u5316 \u81ea\u9876\u5411\u4e0b\u7684\u8bbe\u8ba1\u8fc7\u7a0b Attribute inheritance\uff1aoverlapping\uff0cdisjoint \u753b\u56fe\u7684\u65b9\u5f0f\u5c31\u662f\u4ece\u4e0a\u5f80\u4e0b\u753b\uff0cEntity\u7684\u5185\u5bb9\u9010\u6e10\u7ec6\u5206\uff0c\u4f46\u662f\u90fd\u7ee7\u627f\u4e86\u4e0a\u4e00\u9636\u7684\u6240\u6709attribute Generalization \u6cdb\u5316 \u81ea\u5e95\u5411\u4e0a\u7684\u8bbe\u8ba1\u8fc7\u7a0b \u4ece\u4e0b\u5f80\u4e0a\uff0c\u4e0b\u5c42\u7684\u5185\u5bb9\u5408\u6210\u4e0a\u5c42\u7684\u5185\u5bb9 3.2 E-R Diagram E-R\u56fe\u4e2d\u7684\u5404\u79cd\u8868\u8ff0 3.3 Normal Form \u8303\u5f0f 3.3.1 \u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u76ee\u6807 \u5b58\u50a8\u4fe1\u606f\u65f6\u6ca1\u6709\u4e0d\u5fc5\u8981\u7684\u5197\u4f59\uff0c\u68c0\u7d22\u4fe1\u606f\u7684\u6548\u7387\u9ad8 \u8fd9\u4e9b\u8bbe\u8ba1\u65b9\u5f0f\u901a\u8fc7\u5404\u79cd\u8303\u5f0f(normal form)\u6765\u5b9e\u73b0 3.3.2 First Normal Form \u7b2c\u4e00\u8303\u5f0f \u539f\u5b50\u6027atomic \uff1a\u4e0d\u80fd\u518d\u7ee7\u7eed\u62c6\u5206\uff0c\u5c5e\u6027\u4e0d\u80fd\u518d\u5411\u4e0b\u62c6\u5206 \u7b2c\u4e00\u8303\u5f0f\u7684\u5b9a\u4e49\uff1a\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0fR\u7684 \u6240\u6709\u5c5e\u6027\u90fd\u662fatomic\u7684 \uff0c\u8fd9\u4e2a\u5173\u7cfb\u6a21\u5f0fR\u5c31\u662f \u7b2c\u4e00\u8303\u5f0f \u5b58\u5728\u7684\u95ee\u9898 redundancy \u5197\u4f59 complicates updates \u66f4\u65b0\u6570\u636e\u5f88\u590d\u6742 null-values---difficult to insert/remove Decomposition \u5206\u89e3 Lossy Decomposition \u6709\u635f\u7684\u5206\u89e3\uff1a\u4e0d\u80fd\u7528\u5206\u89e3\u540e\u7684\u51e0\u4e2a\u5173\u7cfb\u91cd\u5efa\u539f\u672c\u7684\u5173\u7cfb Lossless join \u65e0\u635f\u5206\u89e3\u7684\u5b9a\u4e49\uff1a R \u88ab\u5206\u89e3\u4e3a(R1, R2)\u5e76\u4e14$R=R_1\\cup R_2$ \u5bf9\u4e8e\u4efb\u4f55\u5173\u7cfb\u6a21\u5f0fR\u4e0a\u7684\u5173\u7cfbr\u6709 $r=\\prod_{R_1}(r)\\Join \\prod_{R_2}(r)$ 3.3.3 Functional dependency \u51fd\u6570\u4f9d\u8d56 \u51fd\u6570\u4f9d\u8d56 \u7684\u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0fR\uff0c\u5982\u679c$\\alpha \\subset R$ \u5e76\u4e14$\\beta\\subset R$ \u5219\u51fd\u6570\u4f9d\u8d56$\\alpha \\rightarrow\\beta$ \u5b9a\u4e49\u5728R\u4e0a\uff0c\u5f53\u4e14\u4ec5\u5f53 \u5982\u679c\u5bf9\u4e8eR\u7684\u4efb\u610f\u5173\u7cfbr(R) \u5f53\u5176\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u5143\u7ec4t1\u548ct2\uff0c\u5982\u679c\u4ed6\u4eec\u7684$\\alpha$\u5c5e\u6027\u503c\u76f8\u540c\u53ef\u4ee5\u63a8\u51fa\u4ed6\u4eec\u7684$\\beta$\u5c5e\u6027\u503c\u4e5f\u76f8\u540c \u5982\u679c\u67d0\u4e2a\u5c5e\u6027\u96c6A\u53ef\u4ee5\u51b3\u5b9a\u53e6\u4e00\u4e2a\u5c5e\u6027\u96c6B\u7684\u503c\uff0c\u5c31\u79f0$A\\rightarrow B$\u662f\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56 \u51fd\u6570\u4f9d\u8d56\u548c\u952e\u7684\u5173\u7cfb\uff1a\u51fd\u6570\u4f9d\u8d56\u5b9e\u9645\u4e0a\u662f\u952e\u7684\u6982\u5ff5\u7684\u4e00\u79cd\u6cdb\u5316 K\u662f\u5173\u7cfb\u6a21\u5f0fR\u7684 \u8d85\u952e \u5f53\u4e14\u4ec5\u5f53 $K\\rightarrow R$ K \u662fR\u4e0a\u7684 \u5019\u9009\u4e3b\u952e \u5f53\u4e14\u4ec5\u5f53 $K\\rightarrow R$ \u5e76\u4e14\u4e0d\u5b58\u5728 $\\alpha\\sub K, \\alpha\\rightarrow R$ \u4e00\u4e2a\u5e73\u51e1\u7684\u7684\u7ed3\u8bba\uff1a\u5b50\u96c6\u4e00\u5b9a\u5bf9\u81ea\u5df1\u51fd\u6570\u4f9d\u8d56 3.3.4 \u95ed\u5305 Closure \u95ed\u5305 \u95ed\u5305, \u5bf9\u4e8e\u539f\u59cb\u7684\u51fd\u6570\u4f9d\u8d56\u96c6\u5408F\u53ef\u4ee5\u63a8\u51fa\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u4ea7\u751f\u7684\u96c6\u5408\u5c31\u662f F\u7684\u95ed\u5305 \u7b26\u53f7\u7528$F^+$\u8868\u793a \u51fd\u6570\u4f9d\u8d56\u7684\u6027\u8d28 reflexity\uff1a$\\alpha$\u7684\u5b50\u96c6\u4e00\u5b9a\u5173\u4e8e$\\alpha$\u51fd\u6570\u4f9d\u8d56 augmentation\uff1a\u5982\u679c$\\alpha\\rightarrow \\beta$ \u5219\u6709$\\lambda\\alpha\\rightarrow \\lambda\\beta$ transitivity\uff1a\u5982\u679c$a\\rightarrow \\beta \\and \\beta\\rightarrow\\gamma$ \u5219\u6709$a\\rightarrow \\gamma$ union\uff1a\u5982\u679c$\\alpha\\rightarrow \\beta\\and \\alpha\\rightarrow \\gamma$ \u5219\u6709$\\alpha \\rightarrow \\beta\\gamma$ decomposition\uff1a\u5982\u679c$\\alpha \\rightarrow \\beta\\gamma$ \u5219\u6709$\\alpha\\rightarrow \\beta\\and \\alpha\\rightarrow \\gamma$ pseudotransitivity\uff1a\u5982\u679c$\\alpha\\rightarrow \\beta\\and \\beta\\gamma\\rightarrow \\delta$ \u5219\u6709$\\gamma\\alpha\\rightarrow\\delta$ \u8ba1\u7b97\u95ed\u5305\u7684\u65b9\u6cd5 \u6839\u636e\u521d\u59cb\u7684\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u96c6\u5408F\u548c\u51fd\u6570\u4f9d\u8d56\u7684\u6027\u8d28\uff0c\u8ba1\u7b97\u51fa\u6240\u6709\u7684\u51fd\u6570\u4f9d\u8d56\u6784\u6210\u95ed\u5305 \u53ef\u4ee5\u7528\u6709\u5411\u56fe\u8868\u793a\u5c5e\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u901a\u8fc7\u56fe\u6765\u5199\u51fa\u6240\u6709\u7684\u51fd\u6570\u4f9d\u8d56 \u5c5e\u6027\u96c6\u7684\u95ed\u5305 \u95ed\u5305\u4e2d\u6240\u6709\u5173\u4e8e$\\alpha$\u51fd\u6570\u4f9d\u8d56\u7684\u5c5e\u6027\u96c6\u6784\u6210\u7684\u96c6\u5408 \u5373\u5982\u679c$(\\alpha\\rightarrow \\beta)\\in F^+$\u5219\u6709$\\beta\\in\\alpha^{+}$ \u8ba1\u7b97 \u5c5e\u6027\u96c6\u95ed\u5305 \u7684\u7b97\u6cd5 pseudocode result={a} while result is changed do for each b->c in F do begin if b is in result then push c into result end \u5c5e\u6027\u96c6\u95ed\u5305\u7684\u4f5c\u7528 \u6d4b\u8bd5\u662f\u5426\u4e3a\u4e3b\u952e\uff1a\u5982\u679c$\\alpha$\u7684\u95ed\u5305\u5305\u542b\u4e86\u6240\u6709\u5c5e\u6027\uff0c\u5219\u03b1\u5c31\u662f\u4e3b\u952e \u6d4b\u8bd5\u51fd\u6570\u72ec\u7acb\uff1a\u4e3a\u4e86\u9a8c\u8bc1$\\alpha\\rightarrow \\beta$\u662f\u5426\u5b58\u5728\u53ea\u9700\u8981\u9a8c\u8bc1\u03b2\u662f\u5426\u5728\u03b1\u7684\u95ed\u5305\u4e2d \u8ba1\u7b97$F^+$\uff1a\u901a\u8fc7\u6bcf\u4e2a\u5c5e\u6027\u7684\u95ed\u5305\u53ef\u4ee5\u5f97\u5230\u6574\u4e2a\u5173\u7cfb\u6a21\u5f0f\u7684\u95ed\u5305 \u5224\u5b9a\u662f\u5426\u4e3aLossless Join\u7684\u529e\u6cd5 \u5f53\u4e14\u4ec5\u5f53$R_1\\cap R_2\\rightarrow R_1$ \u6216\u8005$R_1\\cap R_2\\rightarrow R_2$\u81f3\u5c11\u6709\u4e00\u4e2a$F^+$\u4e2d 3.3.5 BCNF/3NF BC \u8303\u5f0f(Boyee-Codd Normal Form) BC\u8303\u5f0f\u7684\u6761\u4ef6\u662f\uff1a\u95ed\u5305$F^+$\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56$\\alpha \\rightarrow \\beta$ \u81f3\u5c11\u6ee1\u8db3\u4e0b\u9762\u7684\u4e00\u6761 $\\alpha \\rightarrow \\beta$ \u662f\u5e73\u51e1\u7684(\u4e5f\u5c31\u662f\u03b2\u662f\u03b1\u7684\u5b50\u96c6) \u03b1\u662f\u5173\u7cfb\u6a21\u5f0fR\u7684\u4e00\u4e2a \u8d85\u952e \uff0c\u5373$\\alpha \\rightarrow R$ \u5982\u4f55\u9a8c\u8bc1BCNF\uff1a \u68c0\u6d4b\u4e00\u4e2a\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56$\\alpha\\rightarrow\\beta$\u662f\u5426\u8fdd\u80cc\u4e86BCNF\u7684\u539f\u5219 \u8ba1\u7b97\u03b1\u7684\u5c5e\u6027\u95ed\u5305 \u5982\u679c\u8fd9\u4e2a\u5c5e\u6027\u95ed\u5305\u5305\u542b\u4e86\u6240\u6709\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u03b1\u5c31\u662f\u4e00\u4e2a \u8d85\u952e \u5982\u679c\u03b1\u4e0d\u662f\u8d85\u952e\u800c\u8fd9\u4e2a\u51fd\u6570\u4f9d\u8d56\u53c8\u4e0d\u5e73\u51e1\uff0c\u5c31\u6253\u7834\u4e86BCNF\u7684\u539f\u5219 \u7b80\u5316\u7684\u68c0\u6d4b\u65b9\u6cd5\uff1a \u53ea\u9700\u8981\u770b\u5173\u7cfb\u6a21\u5f0fR\u548c\u5df2\u7ecf\u7ed9\u5b9a\u7684\u51fd\u6570\u4f9d\u8d56\u96c6\u5408 F\u4e2d\u7684\u5404\u4e2a\u51fd\u6570\u4f9d\u8d56 \u662f\u5426\u6ee1\u8db3BCNF\u7684\u539f\u5219 \u4e0d\u9700\u8981\u68c0\u67e5F\u95ed\u5305\u4e2d\u6240\u6709\u7684\u51fd\u6570\u72ec\u7acb \u53ef\u4ee5\u8bc1\u660e\u5982\u679cF\u4e2d\u6ca1\u6709\u8fdd\u80ccBCNF\u539f\u5219\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u90a3\u4e48F\u7684\u95ed\u5305\u4e2d\u4e5f\u6ca1\u6709 \u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u80fd\u7528\u4e8e\u68c0\u6d4bR\u7684\u5206\u89e3 BC\u8303\u5f0f\u7684\u5206\u89e3\u7b97\u6cd5\u4f2a\u4ee3\u7801 pseudocode result={R} done=false compute F+ by F while (!done) do if exist Ri in result that is not a BCNF then begin let a->b be a non-trivial function dependency that holds on Ri such that a->Ri is not in F+ and (a and b)=empty set result=(result-Ri)or(Ri-b)or(a,b); end else done=true \u5f53\u6211\u4eec\u5bf9\u5173\u7cfb\u6a21\u5f0fR\u8fdb\u884c\u5206\u89e3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f \u6ca1\u6709\u5197\u4f59\uff0c\u6bcf\u4e2a\u5173\u7cfb\u90fd\u662f\u4e00\u4e2agood form \u65e0\u635f\u5206\u89e3 Denpendency preservation \u72ec\u7acb\u6027\u4fdd\u62a4,\u628aR\u548cF\u7684\u95ed\u5305\u6309\u7167\u5173\u7cfb\u7684\u5bf9\u5e94\u8fdb\u884c\u5212\u5206 \u7528$F_i$\u8868\u793a\u53ea\u5305\u542b\u5728$R_i$\u4e2d\u51fa\u73b0\u7684\u5143\u7d20\u7684\u51fd\u6570\u4f9d\u8d56\u6784\u6210\u7684\u96c6\u5408 \u6211\u4eec\u5e0c\u671b\u7684\u7ed3\u679c\u662f $(F_1\\cup F_2\\cup\\dots\\cup F_n)^+=F^+$ BCNF\u7684\u5206\u89e3\u4e00\u5b9a\u662f\u6709\u72ec\u7acb\u6027\u4fdd\u62a4\u7684 \u72ec\u7acb\u6027\u4fdd\u62a4\u7684\u9a8c\u8bc1\u7b97\u6cd5 \u5982\u679c\u6700\u7ec8\u7684\u7ed3\u679cresult\u5305\u542b\u4e86\u6240\u6709\u5c5e\u6027\uff0c\u90a3\u4e48\u51fd\u6570\u4f9d\u8d56$\\alpha\\rightarrow \\beta$ \u5c31\u662f\u88ab\u4fdd\u62a4\u7684 pseudocode result = \u03b1 while result changed do for each Ri in the composition t = (result and Ri)+ and Ri result = result or t Third normal form \u7b2c\u4e09\u8303\u5f0f \u7b2c\u4e09\u8303\u5f0f\u7684\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u51fd\u6570\u4f9d\u8d56\u7684\u95ed\u5305$F^+$\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56$\\alpha\\rightarrow\\beta$ \u4e0b\u9762\u4e09\u6761\u81f3\u5c11\u6ee1\u8db3\u4e00\u6761 $\\alpha\\rightarrow\\beta$ \u662f\u5e73\u51e1\u7684 $\\alpha$\u662f\u5173\u7cfb\u6a21\u5f0fR\u7684\u8d85\u952e \u6bcf\u4e00\u4e2a$\\beta-\\alpha$ \u4e2d\u7684 \u5c5e\u6027A\u90fd\u5305\u542b\u5728\u4e00\u4e2aR\u7684\u5019\u9009\u4e3b\u952e\u4e2d BCNF\u4e00\u5b9a\u662f3NF\uff0c\u5b9e\u9645\u4e0a3NF\u662f\u4e3a\u4e86\u4fdd\u8bc1\u72ec\u7acb\u6027\u4fdd\u62a4\u7684BCNF 3NF\u6709\u5197\u4f59\uff0c\u67d0\u4e9b\u60c5\u51b5\u9700\u8981\u8bbe\u7f6e\u4e00\u4e9b\u7a7a\u503c 3NF\u7684\u5224\u5b9a \u4e0d\u9700\u8981\u5224\u65ad\u95ed\u5305\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\uff0c\u53ea\u9700\u8981\u5bf9\u5df2\u6709\u7684F\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\u8fdb\u884c\u5224\u65ad \u7528\u95ed\u5305\u53ef\u4ee5\u68c0\u67e5$\\alpha\\rightarrow \\beta$\u4e2d\u7684\u03b1\u662f\u4e0d\u662f\u8d85\u952e \u5982\u679c\u4e0d\u662f\uff0c\u5c31\u9700\u8981\u68c0\u67e5\u03b2\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u5305\u542b\u5728R\u7684\u5019\u9009\u952e\u4e2d 3.3.6 \u6700\u5c0f\u8986\u76d6 Canonical conver \u6700\u5c0f\u8986\u76d6\u95ee\u9898 \u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u7684\u6700\u5c0f\u96c6\u5408(\u4e5f\u5c31\u662f\u6ca1\u6709\u5197\u4f59\uff0c\u548cF\u7b49\u4ef7\u53ef\u4ee5\u63a8\u5bfc\u51faF+\u7684\u5173\u7cfb\u96c6\u5408) \u65e0\u5173\u5c5e\u6027Extraneous Attributes\uff1a \u5b9a\u4e49\uff1a\u5bf9\u4e8e\u51fd\u6570\u4f9d\u8d56\u96c6\u5408F\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56$\\alpha\\rightarrow\\beta$ \u03b1\u4e2d\u7684\u5c5e\u6027A\u662f\u591a\u4f59\u7684\uff0c\u5982\u679cF\u903b\u8f91\u4e0a\u53ef\u4ee5\u63a8\u51fa$(F-{\\alpha\\rightarrow\\beta})\\or {(\\alpha-A)\\rightarrow\\beta}$ \u03b2\u4e2d\u7684\u5c5e\u6027A\u662f\u591a\u4f59\u7684\uff0c\u5982\u679c$(F-{\\alpha\\rightarrow\\beta})\\or {\\alpha\\rightarrow(\\beta-A)}$ \u903b\u8f91\u4e0a\u53ef\u4ee5\u63a8\u51faF \u66f4\u5f3a\u7684\u51fd\u6570\u903b\u8f91\u4e0a\u53ef\u4ee5\u63a8\u5bfc\u51fa\u66f4\u5f31\u7684\u51fd\u6570 \u5224\u65ad$\\alpha\\rightarrow\\beta$\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u662f\u4e0d\u662f\u591a\u4f59\u7684 \u6d4b\u8bd5\u03b1\u4e2d\u7684\u5c5e\u6027A\u662f\u5426\u4e3a\u591a\u4f59\u7684 \u8ba1\u7b97$(\\alpha-A)^+$ \u68c0\u67e5\u7ed3\u679c\u4e2d\u662f\u5426\u5305\u542b\u03b2\uff0c\u5982\u679c\u6709\u5c31\u8bf4\u660eA\u662f\u591a\u4f59\u7684 \u6d4b\u8bd5\u03b2\u4e2d\u7684\u5c5e\u6027A\u662f\u5426\u4e3a\u591a\u4f59\u7684 \u53ea\u7528$(F-{\\alpha\\rightarrow\\beta})\\or {\\alpha\\rightarrow(\\beta-A)}$\u4e2d\u4f18\u7684\u4f9d\u8d56\u5173\u7cfb\u8ba1\u7b97$\\alpha^+$ \u5982\u679c\u7ed3\u679c\u5305\u542bA\uff0c\u5c31\u8bf4\u660eA\u662f\u591a\u4f59\u7684 \u6700\u5c0f\u8986\u76d6$F_c$\u7684\u5b9a\u4e49 \u548cF\u53ef\u4ee5\u4e92\u76f8\u4ece\u903b\u8f91\u4e0a\u63a8\u5bfc\u51fa\uff0c\u5e76\u4e14\u6700\u5c0f\u8986\u76d6\u4e2d\u6ca1\u6709\u591a\u4f59\u7684\u4fe1\u606f \u6700\u5c0f\u8986\u76d6\u4e2d\u7684\u6bcf\u4e2a\u51fd\u6570\u4f9d\u8d56\u4e2d\u5de6\u8fb9\u7684\u5185\u5bb9\u90fd\u662funique\u7684 \u5982\u4f55\u8ba1\u7b97\u6700\u5c0f\u8986\u76d6\uff1aPPT-8\u768453\u9875\u6709\u4e00\u4e2a\u4f8b\u5b50 \u5148\u4ee4Fc=F \u7528Union rule\u5c06Fc\u4e2d\u6240\u6709\u6ee1\u8db3$\\alpha\\rightarrow\\beta_1 \\and \\alpha\\rightarrow\\beta_2$\u7684\u51fd\u6570\u4f9d\u8d56\u66ff\u6362\u4e3a$\\alpha\\rightarrow\\beta_1\\beta_2$ \u627e\u5230Fc\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\u53bb\u6389\u91cc\u9762\u91cd\u590d\u7684\u5c5e\u6027 \u91cd\u590d2\uff0c3\u4e24\u4e2a\u6b65\u9aa4\u76f4\u5230Fc\u4e0d\u518d\u53d8\u5316 \u4e0b\u9762\u8fd9\u4e9b\u90e8\u5206\u770b\u8d77\u6765\u4e0d\u592a\u4f1a\u8003\uff0c\u5148\u4e0d\u7ba1\u4e86\uff0c\u6709\u7a7a\u518d\u770b 3NF decomposition algorithm Multivalued denpendency \u591a\u503c\u4f9d\u8d56 a->->b\uff0c\u8bb0\u4f5cD\uff0c\u95ed\u5305\u8bb0\u4e3aD+ Fourth Normal Form \u5bf9\u4e8eD+\u4e2d\u7684\u6240\u6709a->->b\u6709\u2460\u662f\u5e73\u51e1\u7684\u6216\u8005\u2461a\u662f\u4e00\u4e2a\u8d85\u952e 4NF\u4e00\u5b9a\u662fBCNF \u7b2c\u56db\u90e8\u5206: \u6570\u636e\u5e93\u8bbe\u8ba1\u7406\u8bba 4.1 \u5b58\u50a8\u548c\u6587\u4ef6\u7ed3\u6784 \u8fd9\u4e00\u90e8\u5206\u597d\u50cf\u4e0d\u600e\u4e48\u4f1a\u8003\u8bd5\uff0c\u7406\u8bba\u6027\u7684\u4e1c\u897f\u6bd4\u8f83\u591a\uff0c\u8ddf\u8ba1\u539f\u7684\u5b58\u50a8\u5668\u90e8\u5206\u597d\u50cf\u8fd8\u6709\u4e00\u90e8\u5206\u4ea4\u96c6 \u5b58\u50a8\u7684\u7ed3\u6784 storage hierarchy primary\u4e3b\u5b58\u50a8\u5668 \u5feb\u800c\u6613\u5931\uff0c\u5e38\u89c1\u7684\u6709\u4e3b\u5b58\u548ccache cache\u7684\u5b58\u53d6\u6548\u7387\u6700\u9ad8\uff0c\u4f46\u662fcostly\uff0c\u4e3b\u5b58\u8bbf\u95ee\u5feb\u4f46\u662f\u5bf9\u4e8e\u6570\u636e\u5e93\u800c\u8a00\u7a7a\u95f4\u592a\u5c0f secondary \u4e8c\u7ea7\u5b58\u50a8\u5668 \u4e0d\u5bb9\u6613\u4e22\u5931\uff0c\u8bbf\u95ee\u8f83\u5feb\uff0c\u53c8\u53eb\u5728\u7ebf\u5b58\u50a8 \u5e38\u89c1\u7684\u662f\u95ea\u5b58\u548c\u78c1\u76d8 tertiary\u4e09\u7ea7\u5b58\u50a8\u5668 \u4e0d\u5bb9\u6613\u4e22\u5931\uff0c\u8bbf\u95ee\u6162\uff0c\u4f46\u662f\u5bb9\u91cf\u5927\u800ccheap\uff0c\u79bb\u7ebf\u5b58\u50a8 \u78c1\u5e26\uff0c\u5149\u5b58\u50a8\u5668 \u603b\u4f53\u7684\u5b58\u50a8\u67b6\u6784\uff1acache--\u4e3b\u5b58--\u95ea\u5b58--\u78c1\u76d8--\u5149\u76d8--\u78c1\u5e26 4.1.1 \u78c1\u76d8 Magnetic Disks \u7ec4\u6210\u7ed3\u6784 read-write head \u8bfb\u5199\u5934 \u548c\u78c1\u76d8\u8868\u9762\u9760\u5f97\u5f88\u8fd1 \u7528\u4e8e\u8bfb\u5199\u78c1\u76d8\u4e2d\u7684\u6587\u4ef6\u4fe1\u606f tracks \u78c1\u9053, \u7531\u78c1\u76d8\u8868\u9762\u5212\u5206\uff0c\u6bcf\u4e2a\u786c\u76d8\u5927\u6982\u670950k\u5230100k\u4e2a\u78c1\u9053 sectors \u6247\u533a\uff0c\u7531\u78c1\u9053\u5212\u5206\u800c\u6210 \u6247\u533a\u662f\u6570\u636e\u8bfb\u5199\u7684\u6700\u5c0f\u5355\u4f4d \u6bcf\u4e2a\u6247\u533a\u7684\u5927\u5c0f\u662f512\u5b57\u8282\uff0c\u6bcf\u4e2a\u78c1\u9053\u6709500-1000\u4e2a\u6247\u533a \u78c1\u76d8\u63a7\u5236\u5668\uff1a\u8ba1\u7b97\u673a\u7cfb\u7edf\u548c\u78c1\u76d8\u4e4b\u95f4\u7684\u63a5\u53e3 Disk subsystem \u78c1\u76d8\u5b50\u7cfb\u7edf\uff1a\u7531disk controller\u64cd\u7eb5\u82e5\u5e72\u4e2a\u78c1\u76d8\u7ec4\u6210\u7684\u5b57\u7cfb\u7edf \u78c1\u76d8\u7684\u6027\u80fd\u8bc4\u4ef7\u6807\u51c6 access time\uff1a \u8bbf\u95ee\u65f6\u95f4\uff0c\u5305\u62ec seek time\uff1a\u8bfb\u5199\u5934\u7684arm\u6b63\u786e\u627e\u5230track\u7684\u65f6\u95f4\uff0c\u5e73\u5747\u7684seek time\u662f\u6700\u574f\u60c5\u51b5\u7684\u4e00\u534a rotational latency\uff1a\u65cb\u8f6c\u9020\u6210\u7684\u5ef6\u8fdf\uff0c\u5e73\u5747\u65f6\u95f4\u662f\u6700\u574f\u7684\u4e00\u534a data-transfer rate \u6570\u636e\u4ece\u78c1\u76d8\u8bfb\u5199\u7684\u901f\u5ea6 MTTF\uff1a\u51fa\u73b0failure\u4e4b\u524d\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4 \u78c1\u76d8\u8bbf\u95ee\u7684\u4f18\u5316 block \uff1a\u4e00\u4e2a\u78c1\u9053\u4e2d\u7684\u82e5\u5e72\u8fde\u7eed\u6247\u533a\u7ec4\u6210\u7684\u5e8f\u5217 buffering read-ahead disk-arm-scheduling file organization: \u901a\u8fc7\u6309\u7167\u8bbf\u95ee\u6570\u636e\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7block\u4f18\u5316\u8bbf\u95ee\u65f6\u95f4 4.1.2 File organization \u6587\u4ef6\u7ec4\u7ec7 \u6570\u636e\u5e93\u5b58\u50a8\u5728\u4e00\u7cfb\u5217\u7684\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e2a\u6587\u4ef6\u662f\u4e00\u7cfb\u5217\u7684\u8bb0\u5f55\uff0c\u6bcf\u6761\u8bb0\u5f55\u5305\u542b\u4e00\u7cfb\u5217\u7684fields \u6bcf\u4e2a\u6587\u4ef6\u88ab\u5212\u5206\u4e3a\u56fa\u5b9a\u957f\u5ea6\u7684block\uff0cblock\u662f\u6570\u636e\u5b58\u53d6/\u5b58\u50a8\u7a7a\u95f4\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d \u4e00\u4e2ablock\u6709\u591a\u6761\u8bb0\u5f55\uff0c\u5728\u4f20\u7edf\u7684\u6570\u636e\u5e93\u4e2d \u8bb0\u5f55\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7block \u6bcf\u6761\u8bb0\u5f55\u4e00\u5b9a\u90fd\u662f\u5b8c\u6574\u7684 Free List \u7528\u94fe\u8868\u7684\u5f62\u5f0f\u6765\u5b58\u50a8records Variable-length records \u53d8\u957f\u8bb0\u5f55 \u5178\u578b\u7684\u53d8\u957f\u8bb0\u5f55 \u5c5e\u6027\u6309\u7167\u987a\u5e8f\u5b58\u50a8 \u53d8\u957f\u7684\u53d8\u91cf\u7528offset+data\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u7a7a\u503c\u7528null-value bitmap\u5b58\u50a8 slotted page\u7ed3\u6784\uff0c\u5b83\u7684header\u5305\u542b \u8bb0\u5f55\u7684\u603b\u6570 block\u4e2d\u7684\u7a7a\u95f2\u533a\u57df\u7684end \u6bcf\u6761\u8bb0\u5f55\u6240\u5728\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f \u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u7ec4\u7ec7\u65b9\u5f0f heap sequential hashing nulti-table clustering file organization \u5b58\u50a8\u7f13\u51b2\u533a\u7684\u7ba1\u7406 \u901a\u8fc7\u5c06\u6570\u636e\u653e\u5230\u4e3b\u5b58\u4e2d\u6765\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387 buffer manager\uff1a\u7528\u4e8e\u7ba1\u7406\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5b58\u5206\u914d \u5f53\u9700\u8981\u4ece\u78c1\u76d8\u8bfb\u53d6block\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u4f1a\u8c03\u7528buffer mananger\u7684\u529f\u80fd \u5982\u679cblock\u5df2\u7ecf\u5728buffer\u4e2d\u4e86\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2ablock\u7684\u5730\u5740 \u5982\u679c\u4e0d\u5728\uff0c\u5219buffer manager \u4f1a\u52a8\u6001\u5206\u914dbuffer\u4e2d\u7684\u5185\u5b58\u7ed9block\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u8986\u76d6\u522b\u7684block\uff0c\u7136\u540e\u5c06\u78c1\u76d8\u4e2dblock\u4e2d\u7684\u5185\u5bb9\u5199\u5165buffer\u4e2d \u6d89\u53ca\u5230buffer\u7684\u66ff\u6362\u7b97\u6cd5LRU strategy \u5373\u66ff\u6362\u6389\u6700\u8fd1\u4f7f\u7528\u9891\u7387\u6700\u4f4e\u7684block pinned block \u5185\u5b58\u4e2d\u7684\u4e0d\u5141\u8bb8\u5199\u56de\u78c1\u76d8\u7684block\uff0c\u8868\u793a\u6b63\u5728\u5904\u7406\u4e8b\u52a1\u6216\u8005\u5904\u4e8e\u6062\u590d\u63a5\u65ad 4.2 B+\u6811\u7d22\u5f15 4.2.1 \u7d22\u5f15 \u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u5f15\u5165\u7d22\u5f15\u673a\u5236\uff0c\u7528\u4e8e\u52a0\u5feb\u67e5\u8be2\u548c\u8bbf\u95ee\u9700\u8981\u7684\u6570\u636e search key \u901a\u8fc7\u4e00\u4e2a\u5c5e\u6027\u503c\u67e5\u627e\u4e00\u7cfb\u5217\u5c5e\u6027\u503c\uff0c\u7528\u4e8e\u6587\u4ef6\u4e2d\u67e5\u8be2 Index file \u7d22\u5f15\u6587\u4ef6\u5305\u542b\u4e00\u7cfb\u5217\u7684search key\u548cpointer(\u4e24\u8005\u7684\u7ec4\u5408\u88ab\u79f0\u4e3aindex entry)\uff0c\u67e5\u8be2\u65b9\u5f0f\u662f\u901a\u8fc7search key\u5728index file\u4e2d\u67e5\u8be2data\u7684\u5730\u5740(pointer)\uff0c\u7136\u540e\u518d\u4ecedata file\u4e2d\u67e5\u8be2\u6570\u636e \u4e24\u79cdsearch key\u7684\u6392\u5e8f\u65b9\u5f0f\uff1aordered index\uff0chash index ordered index \u987a\u5e8f\u7d22\u5f15 index entry\u6309\u7167search key\u7684\u503c\u6765\u8fdb\u884c\u6392\u5217 primary key \u6307\u5b9a\u6587\u4ef6\u987a\u5e8f\u7684\u7d22\u5f15 secondary key \u6b21\u5173\u952e\u5b57 \u7d22\u5f15\u7684\u4e0d\u540c\u65b9\u5f0f Dense index \u5bc6\u96c6\u7684\u7d22\u5f15\uff1a\u6bcf\u4e00\u6761\u8bb0\u5f55\u90fd\u6709\u5bf9\u5e94\u7684\u7d22\u5f15 Sperse index \u7a00\u758f\u7684\u7d22\u5f15 \u9700\u8981\u7684\u7a7a\u95f4\u548c\u63d2\u5165\u5220\u9664\u65b0\u7d22\u5f15\u7684\u5f00\u9500\u8f83\u5c0f\uff0c\u4f46\u662f\u6bd4\u5bc6\u96c6\u7684\u7d22\u5f15\u8981\u6162 Secondary indice\u7d22\u5f15\u901a\u8fc7\u4e00\u4e2a\u5927\u7684bucket\u6765\u5bfb\u627e\u6240\u6307\u5411\u7684\u5730\u65b9 Multilevel index \u591a\u7ea7\u7d22\u5f15\uff0c\u5206\u4e3aouter index\u548cinner index 4.2.2 B+\u6811\u7d22\u5f15 B+\u6811\u6587\u4ef6\u7d22\u5f15 \u901a\u8fc7B+\u6811\u7684\u7d22\u5f15\u65b9\u5f0f\u6765\u5bfb\u627e\u6587\u4ef6\u4e2d\u6570\u636e\u7684\u5730\u5740\uff0cB+\u6811\u7684\u5b9a\u4e49\u548cads\u4e2d\u7684B+\u6811\u57fa\u672c\u76f8\u540c\uff0c \u6811\u7684\u975e\u53f6\u8282\u70b9\u7531\u6307\u5411\u513f\u5b50\u7684\u6307\u9488\u548csearch-key\u76f8\u95f4\u7ec4\u5408\u800c\u6210 \u4e24\u4e2asearch-key\u4e4b\u95f4\u7684\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u7684\u503c\u5728\u8fd9\u4e24\u4e2asearch-key\u4e4b\u95f4 B+\u6811\u4e0a\u7684\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662flogN\u7ea7\u522b\uff0cN\u662fsearch key\u7684\u603b\u4e2a\u6570 \u67e5\u8be2\u7684\u8def\u5f84\u957f\u5ea6\uff1a\u4e0d\u4f1a\u8d85\u8fc7$\\log_{n/2}(K)$ + 1\u5176\u4e2dK\u662fB+\u6811\u4e2d\u7684\u7d22\u5f15\u7684\u4e2a\u6570(\u5373\u89c4\u6a21N) B+\u6811\u7684\u4e00\u4e2a\u8282\u70b9\u7684\u5927\u5c0f\u548c\u4e00\u4e2a\u78c1\u76d8\u533a\u5757\u4e00\u6837\u5927(\u5f80\u5f80\u662f4KB)\u800c\u5728n\u7684\u89c4\u6a21\u4e00\u822c\u5728100\u5de6\u53f3 B+\u6811\u7684\u66f4\u65b0\uff1a\u63d2\u5165\u548c\u5220\u9664 \u63d2\u5165\u7684\u7b97\u6cd5\uff1a\u5148\u627e\u5230\u8be5\u63d2\u5165\u7684\u4f4d\u7f6e\u76f4\u63a5\u63d2\u5165\uff0c\u5982\u679c\u5f53\u524d\u7684\u8282\u70b9\u6570\u91cf\u8d85\u8fc7\u4e86\u9636\u6570M\u5219\u62c6\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5e76\u5411\u4e0a\u66f4\u65b0\u7d22\u5f15 \u5220\u9664\u7684\u7b97\u6cd5: \u76f4\u63a5\u628a\u8981\u5220\u9664\u7684\u8282\u70b9\u5220\u9664\uff0c\u7136\u540e\u628a\u6ca1\u6709\u7d22\u5f15key\u4e86\u7684\u975e\u53f6\u8282\u70b9\u5220\u9664\uff0c\u4ece\u65c1\u8fb9\u627e\u4e00\u4e2a\u53f6\u8282\u70b9\u6765\u5408\u5e76\u51fa\u65b0\u7684\u975e\u53f6\u8282\u70b9 B+\u6811\u7684\u76f8\u5173\u8ba1\u7b97 \u9ad8\u5ea6\u7684\u4f30\u8ba1\uff1a B+\u6811\u9ad8\u5ea6\u6700\u5c0f\u7684\u60c5\u51b5\uff1a\u6240\u6709\u7684\u53f6\u8282\u70b9\u90fd\u6ee1\uff0c\u6b64\u65f6\u7684$h = \\lceil \\log_{N}(M)\\rceil$ \u6700\u5927\u7684\u60c5\u51b5\uff0c\u6240\u6709\u7684\u53f6\u8282\u70b9\u90fd\u534a\u6ee1\uff0c\u6b64\u65f6\u7684$h=\\lfloor \\log_{[N/2]}(\\frac{M}{2})\\rfloor+1$ size\u5927\u5c0f\u7684\u4f30\u8ba1\uff1a\u4e5f\u662f\u4e24\u79cd\u6781\u7aef\u60c5\u51b5 4.2.3 \u6587\u4ef6\u7d22\u5f15 Hash\u6587\u4ef6\u7d22\u5f15 \u9759\u6001\u54c8\u5e0c \u4f7f\u7528\u4e00\u7cfb\u5217buckets\u6765\u5b58\u50a8\u4e00\u7cfb\u5217\u7684records\uff0c\u901a\u8fc7hash\u51fd\u6570\u548csearch-key\u7684\u8fd0\u7b97\u6765\u67e5\u627e\u6587\u4ef6 hash\u51fd\u6570\uff1a\u5c06\u4e0d\u540c\u7684search key\u6620\u5c04\u5230\u4e0d\u540c\u7684bucket\u91cc\u9762\u53bb Hash indices \u5c06hash\u7528\u4e8e\u7d22\u5f15\u7ed3\u6784\u4e2d A hash index organizes the search keys, with their associated record pointers, into a hash file structure. hash indices are always secondary indices \u52a8\u6001\u54c8\u5e0c \u54c8\u5e0c\u51fd\u6570\u4f1a\u88ab\u52a8\u6001\u5730\u4fee\u6539 \u53ef\u6269\u5c55\u7684\u54c8\u5e0c 4.2.4 \u603b\u7ed3\uff1a\u5b58\u50a8\u7ed3\u6784\u548cB+\u6811\u7684\u8ba1\u7b97 \u8bb0\u5f55\u7684\u5b58\u50a8\uff1a \u6570\u636e\u5e93\u7684\u8bb0\u5f55\u5728block\u4e2d\u5b58\u50a8\uff0c\u4e00\u4e2ablock\u4e2d\u6709\u5927\u91cf\u7684\u8bb0\u5f55\u5b58\u50a8\uff0c\u6709\u7ebf\u6027\u5b58\u50a8\u7684\uff0c\u4e5f\u6709\u4f7f\u7528B+\u6811\u7d22\u5f15\u7684 \u7ebf\u6027\u5b58\u50a8\u7684\u8bb0\u5f55\uff1a \u5047\u8bbe\u4e00\u6761\u8bb0\u5f55\u7684\u957f\u5ea6\u4f4dL\uff0cblock\u7684\u5927\u5c0f\u4e3aB\uff0c\u90a3\u4e48\u4e00\u6761\u8bb0\u5f55\u4e2d\u6700\u591a\u6709$\\lfloor \\frac{B}{L}\\rfloor$ \u6761\u8bb0\u5f55 \u5982\u679c\u4e00\u5171\u6709N\u6761\u8bb0\u5f55\uff0c\u4e00\u4e2ablock\u4e2d\u6709M\u6761\u8bb0\u5f55\uff0c\u90a3\u4e48\u4e00\u5171\u9700\u8981$\\lceil\\frac{N}{M}\\rceil$ \u4e2ablock\uff0c\u800c $M=\\lfloor \\frac{B}{L}\\rfloor$ B+\u6811\u7d22\u5f15block\u7684\u8ba1\u7b97\uff0c\u5047\u8bbeblock\u7684\u5927\u5c0f\u4e3aB\uff0c\u6307\u9488\u7684\u5927\u5c0f\u662fa\uff0c\u88ab\u7d22\u5f15\u7684\u5c5e\u6027\u503c\u5927\u5c0f\u662fb \u8981\u6ce8\u610f\u6307\u9488\u8282\u70b9\u6bd4\u5c5e\u6027\u503c\u591a\u4e00\u4e2a\uff0c\u6240\u4ee5\u4e00\u4e2a\u5757\u4e0a\u7684\u6247\u51fa\u7387n(fan-out rate)\u662f$\\lfloor \\frac{B-a}{a+b}\\rfloor+1$ n\u4e5f\u5c31\u662f\u8fd9\u4e2aB+\u6811\u7684\u9636\u6570\uff0c\u7136\u540e\u6839\u636e\u516c\u5f0f\u6765\u4f30\u7b97B+\u6811\u7684\u9ad8\u5ea6\uff0c\u5176\u4e2dM\u5e94\u8be5\u662f\u4f5c\u4e3a\u7d22\u5f15\u7684\u503c\u53ef\u4ee5\u53d6\u5230\u7684\u4e2a\u6570 4.3 \u67e5\u8be2\u5904\u7406 QueryProcess \u5370\u8c61\u4e2d\u8fd9\u4e00\u90e8\u5206\u7684\u4f5c\u4e1a\u9898\u4ee5\u5957\u516c\u5f0f\u7b97\u4e3a\u4e3b \u67e5\u8be2\u5904\u7406\u7684\u57fa\u672c\u6b65\u9aa4 Parsing and translation \u89e3\u6790\u548c\u7ffb\u8bd1 Optimization \u4f18\u5316 \u4e00\u79cdSQL\u67e5\u8be2\u53ef\u80fd\u5bf9\u5e94\u4e86\u591a\u79cd\u7b49\u4ef7\u7684\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f \u53ef\u4ee5\u901a\u8fc7\u4f30\u8ba1\u6bcf\u79cd\u65b9\u5f0f\u7684cost\u6765\u8bc4\u5224\u65b9\u6cd5\u7684\u597d\u574f \u67e5\u8be2\u4f18\u5316\u4f1a\u9009\u62e9\u6700\u8282\u7ea6\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2 Evaluation Query cost\u7684\u8ba1\u7b97 \u4e3b\u8981\u7684cost\u6765\u6e90\uff1adisk access seeks block read block written cost\u8ba1\u7b97\u7684\u65b9\u5f0f\uff1a\u5728B\u4e2ablocks\u4e2d\u67e5\u8be2S\u6b21\u6240\u6d88\u8017\u7684\u65f6\u95f4=B*\u8f6c\u79fb\u5230\u4e00\u4e2ablock\u7684\u65f6\u95f4+S*\u4e00\u6b21\u67e5\u8be2\u7684\u65f6\u95f4\uff1a$B\\times t_T+S\\times t_S$ \u5176\u4e2d$t_T$ \u8868\u793a\u4e00\u6b21block transfer\u7684\u65f6\u95f4 cost\u4f9d\u8d56\u4e8e\u4e3b\u5b58\u4e2d \u7f13\u51b2\u533a\u7684\u5927\u5c0f \uff1a\u66f4\u591a\u7684\u5185\u5b58\u53ef\u4ee5\u51cf\u5c11disk access \u901a\u5e38\u8003\u8651\u6700\u574f\u7684\u60c5\u51b5\uff1a\u53ea\u63d0\u4f9b\u6700\u5c11\u7684\u5185\u5b58\u6765\u5b8c\u6210\u67e5\u8be2\u5de5\u4f5c 4.3.1 select\u7684cost\u4f30\u8ba1 Select \u64cd\u4f5c\u7684cost\u8ba1\u7b97 Algorithm1:\u7ebf\u6027\u641c\u7d22\uff0c\u67e5\u8be2\u6bcf\u4e2ablock\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u67e5\u8be2\u6761\u4ef6 Cost = br block transfers + 1 seek\uff0c\u5176\u4e2d$b_r$ \u662f\u5173\u7cfbr\u4e2d \u5b58\u50a8\u4e86\u8bb0\u5f55\u7684block\u7684\u6570\u91cf \u5982\u679c\u901a\u8fc7\u952e\u6765\u641c\u7d22\uff0c\u5728\u627e\u5230\u7684\u65f6\u5019\u5c31\u505c\u6b62\uff0c\u5219 cost = (br /2) block transfers + 1 seek \u4e8c\u5206\u641c\u7d22\u6b64\u65f6\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u6570\u636e\u4e0d\u662f\u8fde\u7eed\u5b58\u50a8\u7684 Index scan--\u4f7f\u7528\u7d22\u5f15\u8fdb\u884c\u641c\u7d22 Algorithm2: primary index\uff0cequality on key\uff0c\u641c\u7d22\u4e00\u6761\u8bb0\u5f55 $cost = (h_i+1)\\times(t_T+t_S)$ --- hi\u662f\u7d22\u5f15\u7684\u9ad8\u5ea6 Algorithm3: primary index, equality on non-key \u9700\u8981\u641c\u7d22\u591a\u6761\u8bb0\u5f55 \u60f3\u8981\u7684\u7ed3\u679c\u4f1a\u5b58\u50a8\u5728\u8fde\u7eed\u7684block\u4e2d(\u56e0\u4e3a\u6709\u4e3b\u7d22\u5f15) $cost =h_i (t_T + t_S) + t_S + t_T * b$ \u5176\u4e2db\u8868\u793a\u5305\u542b\u5339\u914d\u8bb0\u5f55\u7684block\u603b\u6570 \u5f53\u4f7f\u7528B+\u6811\u4f5c\u4e3a\u7d22\u5f15\u65f6\u53ef\u4ee5\u8282\u7ea6\u4e00\u6b21seek\u7684\u65f6\u95f4\uff0c$cost =h_i (t_T + t_S)+ t_T * b$ \u7b97\u6cd54\uff1aSecondary index \u7528\u5019\u9009\u4e3b\u952e\u4f5c\u4e3a\u7d22\u5f15\u68c0\u7d22\u5355\u6761\u8bb0\u5f55 $cost = (h_i + 1) \\times (t_T + t_S)$ \u7528\u5019\u9009\u4e3b\u952e\u68c0\u7d22\u4e86n\u6761\u8bb0\u5f55(\u4e0d\u4e00\u5b9a\u5728\u540c\u4e00\u4e2ablock\u4e0a\u9762) $Cost = (h_i + n) \\times (t_T + t_S)$ \u6709\u65f6\u5019\u4f1a\u975e\u5e38\u8017\u65f6 4.3.2 sort\u548cjoin\u7684cost\u4f30\u8ba1 Sort\uff1a external sort-merge \u5176\u5b9e\u7c7b\u4f3c\u4e8eads\u91cc\u9762\u7684\u5916\u90e8\u5f52\u5e76\u6392\u5e8f M\u8868\u793a\u5185\u5b58\u7684\u5927\u5c0f\uff0c$b_r$\u8868\u793ablock\u7684\u6570\u91cf \u57fa\u672c\u6b65\u9aa4\u5982\u4e0b create sorted runs merge the runs \u9700\u8981\u7684merge pass\u603b\u6570 $[ \\log_{M-1}(b_r/M)]$ \u521b\u5efa\u548c\u6bcf\u6b21run\u8fc7\u7a0b\u4e2d\u7684disk access\u6570\u91cf 2 br \u5916\u90e8\u6392\u5e8f\u4e2d\u603b\u7684disk access\u6b21\u6570 $(2[ \\log_{M-1}(b_r/M)]+1)b_r$ Join \u64cd\u4f5c\u7684cost\u4f30\u8ba1 nested-loop join \u8ba1\u7b97theta-join\u8868\u8fbe\u5f0f\uff1a$r\\Join_{\\theta} s$ \u7b97\u6cd5\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b c for each tuple tr in r do begin for each tuple ts in s do begin test pair (tr,ts) to see if they satisfy the join condition if they do, add tr \u2022 ts to the result end end block transfer\u6b21\u6570: $n_r\\times b_s+b_r$ seeks\u7684\u6b21\u6570 $n_r+b_r$ block nested-loop join $r\\Join_{\\theta} s$ c for each block Br of r do begin for each block Bs of s do begin for each tuple tr in Br do begin for each tuple ts in Bs do begin Check if (tr,ts) satisfy the join condition if they do, add tr \u2022 ts to the result. \u6700\u574f\u60c5\u51b5\u7684cost block transfer $b_r\\times b_s+b_r$ seeks $2b_r$ \u6700\u597d\u60c5\u51b5\u7684cost block transfers $b_r+b_s$ with 2 seeks \u4f18\u5316\uff1a\u4f7f\u7528M-2\u4e2ablock\u4f5c\u4e3ablocking unit(M\u662f\u5185\u5b58\u53ef\u4ee5\u5bb9\u7eb3\u7684block\u6570\u91cf)\uff0c\u6b64\u65f6\u7684 block transfer\u6b21\u6570=$\\frac{b_r}{M-2}\\times b_s+b_r$ seek\u6b21\u6570= $\\frac{2b_r}{M-2}$ Index nested-loop join \u7d22\u5f15\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u4ee3\u66fffile scan $cost=b_r(t_T+t_s)+c\\times n_r$ \u5176\u4e2dc\u8868\u793a\u904d\u5386\u7d22\u5f15\u548c\u627e\u5230\u6240\u6709\u5339\u914d\u7684s\u4e2d\u7684tuple\u6240\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u53ef\u4ee5\u7528 \u4e00\u6b21s\u4e0a\u7684\u5355\u4e2aselection\u6765\u4f30\u8ba1s\u7684\u503c Merge-Join \u53ea\u80fd\u5728natural-join\u548cequal-join\u4e2d\u4f7f\u7528 block transfer\u7684\u6b21\u6570=$b_r+b_s$\uff0cseek\u7684\u6b21\u6570=$[b_r/b_b]+[b_s/b_b]$ Hash join\uff1a\u4f7f\u7528hash\u51fd\u6570\u8fdb\u884cjoin h maps JoinAttrs values to {0, 1, ..., $n_h$}, \u5c06\u4e24\u4e2a\u5173\u7cfb\u8fdb\u884c\u6bd4\u8f83\u548c\u540c\u7c7b\u578b\u7684\u5339\u914d cost of hash-join block transfer: $3(b_r+b_s)+4n_h$ partition: \u8bfb $b_r+b_s$ blocks \u5199 $(b_r+b_s)+2n_h$ blocks join: \u8bfb$(b_r+b_s)+2n_h$ seeks: $2([b_r/b_b]+[b_s/b_b])$ \u5982\u679c\u6240\u6709\u4e1c\u897f\u90fd\u80fd\u653e\u8fdb\u4e3b\u5b58\u91cc\uff0c\u5219$n_h=0$ \u5e76\u4e14\u4e0d\u9700\u8981partition \u9700\u8981partition\u7684\u65f6\u5019 $cost=2(b_r+b_s[\\log_{M-1}(b_s)-1])+b_r+b_s$ Evaluation of Expression \u8868\u8fbe\u5f0f\u6c42\u503c Materialization \u5b9e\u4f53\u5316 \u4f9d\u6b21\u8fdb\u884c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\uff0c\u6784\u5efa\u524d\u7f00\u6811\u9012\u5f52\u8fdb\u884c Pipelining \u6d41\u6c34\u7ebf\uff0c\u540c\u65f6\u8bc4\u4f30\u591a\u4e2a\u64cd\u4f5c evaluate several operations simultaneously , passing the results of one operation on to the next. 4.4 \u67e5\u8be2\u4f18\u5316 Query Optimization \u4e24\u79cd\u67e5\u8be2\u4f18\u5316\u7684\u529e\u6cd5 \u627e\u5230\u7b49\u4ef7\u7684\u67e5\u8be2\u6548\u7387\u6700\u9ad8\u7684\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f \u6307\u5b9a\u8be6\u7ec6\u7684\u7b56\u7565\u6765\u5904\u7406\u67e5\u8be2 4.4.1 \u7b49\u4ef7\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f Equivalent Expressions \u7b49\u4ef7\u7684\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f evaluation plan \uff1a\u7c7b\u4f3c\u4e8e\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u524d\u7f00\u6811\uff0c\u8868\u793a\u4e86\u6bcf\u90e8\u64cd\u4f5c\u8fdb\u884c\u7684\u8fc7\u7a0b Cost-based optimization\u57fa\u4e8ecost\u7684\u4f18\u5316 \u57fa\u672c\u6b65\u9aa4 \u7528\u8fd0\u7b97\u6cd5\u5219\u627e\u5230\u903b\u8f91\u4e0a\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f \u6ce8\u91ca\u7ed3\u679c\u8868\u8fbe\u5f0f\u6765\u83b7\u5f97\u67e5\u8be2\u8ba1\u5212 \u9009\u62e9cost\u6700\u4f4e\u7684\u8868\u8fbe\u5f0f cost\u7684\u4f30\u7b97 \u7edf\u8ba1\u4fe1\u606f\u91cf\u7684\u5927\u5c0f\uff0c\u6bd4\u5982tuples\u7684\u6570\u91cf\uff0c\u4e00\u4e2a\u5c5e\u6027\u4e0d\u540c\u53d6\u503c\u7684\u4e2a\u6570 \u4e2d\u95f4\u7ed3\u679c\u7684\u6570\u91cf\uff0c\u7528\u4e8e\u590d\u6742\u8868\u8fbe\u5f0f\u7684\u4f18\u5316 \u7b97\u6cd5\u7684\u6d88\u8017 \u7b49\u4ef7\u8868\u8fbe\u5f0f\u7684\u89c4\u5219 \u5408\u53d6\u9009\u62e9\u548c\u9009\u4e24\u6b21\u7b49\u4ef7\uff1a$\\sigma_{\\theta_1\\and\\theta_2}(E)=\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E))$ \u9009\u62e9\u4e24\u6b21\u7684\u987a\u5e8f\u53ef\u4ee5\u4ea4\u6362\uff1b$\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E))=\\sigma_{\\theta_2}(\\sigma_{\\theta_1}(E))$ \u5d4c\u5957\u7684\u6295\u5f71\u53ea\u9700\u8981\u770b\u6700\u5916\u5c42\u7684\uff1a$\\prod_{L_1}(\\prod_{L_2}(\\dots(E)))=\\prod_{L_1}(E)$ \u9009\u62e9\u53ef\u4ee5\u53d8\u6210\u7b1b\u5361\u5c14\u79ef\u548ctheta join $\\sigma_{\\theta}(E_1\\times E_2)=E_1\\Join_{\\theta}E_2$ $\\sigma_{\\theta_1}(E_1\\Join_{\\theta_2}E_2)=E_1\\Join_{\\theta_1\\and\\theta_2}E_2$ Theta-join\u548c\u81ea\u7136\u8fde\u63a5\u53ef\u4ee5\u6539\u53d8\u8fde\u63a5\u7684\u4e24\u5f20\u8868\u7684\u987a\u5e8f\uff1a$E_1\\Join_{\\theta}E_2=E_2\\Join_{\\theta}E_1$ \u81ea\u7136\u8fde\u63a5\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff1a$(E_1\\Join E_2)\\Join E_3=E_1\\Join (E_2\\Join E_3)$ Theta-join\u7684\u7ed3\u5408\u89c4\u5219 $(E_1\\Join_{\\theta_1} E_2)\\Join_{\\theta_2\\and\\theta_3} E_3=E_1\\Join_{\\theta_1\\and\\theta_3} (E_2\\Join_{\\theta_2} E_3)$ \u9009\u62e9\u64cd\u4f5c\u7684\u4f18\u5316 \u5f53$\\theta_1$ \u4e2d\u7684\u5c5e\u6027\u90fd\u53ea\u51fa\u73b0\u5728E1\u4e2d\u7684\u65f6\u5019\uff1a$\\sigma_{\\theta_1}(E_1\\Join_{\\theta_2}E_2)=\\sigma_{\\theta_1}(E_1)\\Join_{\\theta_2}E_2$ \u5f53$\\theta_1,\\theta_2$ \u5206\u522b\u53ea\u5305\u542bE1,E2\u4e2d\u7684\u5c5e\u6027\u65f6\uff1a$\\sigma_{\\theta_1\\and\\theta_2}(E_1\\Join_{\\theta}E_2)=\\sigma_{\\theta_1}(E_1)\\Join\\sigma_{\\theta_2}(E_2)$ \u6295\u5f71\u64cd\u4f5c\u548cTheta-join\u7684\u6df7\u5408\u8fd0\u7b97 \u5f53\u03b8\u53ea\u5305\u542b$L_1\\or L_2$ \u4e2d\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff1a$\\prod_{L_1\\or L_2}(E_1\\Join_{\\theta}E_2)=(\\prod_{L_1}(E_1))\\Join_{\\theta}(\\prod_{L_2}(E_2))$ \u96c6\u5408\u8fd0\u7b97\u4e2d\u7684\u4ea4\u8fd0\u7b97\u548c\u5e76\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b \u9009\u62e9\u64cd\u4f5c\u4e2d\u6709\u96c6\u5408\u7684\u8fd0\u7b97\u65f6\u6ee1\u8db3\u5206\u914d\u5f8b(\u6bd4\u5982\u8fdb\u884c\u5dee\u8fd0\u7b97\u518d\u9009\u62e9\u7b49\u4ef7\u4e8e\u5206\u522b\u9009\u62e9\u518d\u5dee\u8fd0\u7b97) \u6295\u5f71\u64cd\u4f5c\u4e2d\u6709\u5e76\u8fd0\u7b97\u65f6\u6ee1\u8db3\u5206\u914d\u5f8b Join\u7684\u987a\u5e8f\u4f18\u5316\uff1a\u5f53\u6709\u82e5\u5e72\u5f20\u8868\u9700\u8981join\u7684\u65f6\u5019\uff0c \u5148\u4ecejoin\u540e\u6570\u636e\u91cf\u6700\u5c0f\u7684\u5f00\u59cb \u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u76f8\u540c\u7684\u5b50\u8868\u8fbe\u5f0f\u6765\u51cf\u5c11\u8868\u8fbe\u5f0f\u8f6c\u5316\u65f6\u7684\u7a7a\u95f4\u6d88\u8017\uff0c\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u51cf\u5c11\u65f6\u95f4\u6d88\u8017 4.4.2 cost\u7684\u4f30\u8ba1 \u57fa\u672c\u7684\u53d8\u91cf\u5b9a\u4e49 $n_r$ \u8868\u793a\u5173\u7cfbr\u4e2d\u5143\u7ec4\u7684\u6570\u91cf(\u4e5f\u5c31\u662f\u5173\u7cfbr\u7684size) $b_r$ \u5305\u542br\u4e2d\u5143\u7ec4\u7684block\u6570\u91cf $l_r$ r\u4e2d\u4e00\u4e2a\u5143\u7ec4\u7684size $f_r$ block factor of r \u6bd4\u5982\u53ef\u4ee5\u9009\u53d6\u4e00\u4e2ablock\u80fd\u5bb9\u7eb3\u7684r\u4e2d\u5143\u7ec4\u7684\u5e73\u5747\u6570\u91cf V(A, r) \u5173\u7cfbr\u4e2d\u5c5e\u6027A\u53ef\u80fd\u53d6\u5230\u7684\u4e0d\u540c\u7684\u503c\u7684\u6570\u91cf \u5f53\u5173\u7cfbr\u4e2d\u7684\u5143\u7ec4\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u65f6\u5019 $b_r=\\frac{n_r}{f_r}$ \u9009\u62e9\u7684\u4f30\u8ba1 \u4ecer\u4e2d\u9009\u62e9A\u5c5e\u6027=x\u7684$cost = \\frac{n_r}{V(A,r)}$ \u9009\u62e9A\u5c5e\u6027\u5c0f\u4e8ex\u7684cost $cost=0$ if x < min(A,r) $cost=n_r\\times \\frac{x-min(A,r)}{max(A,r)-min(A,r)}$ \u9009\u62e9A\u5c5e\u6027\u5927\u4e8ex\uff0c\u548c\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u662f\u5bf9\u79f0\u7684 complex selection \u591a\u91cd\u9009\u62e9 \u5047\u8bbe$s_i$\u662f\u6ee1\u8db3\u6761\u4ef6$\\theta_i$\u7684\u5143\u7ec4\u7684\u4e2a\u6570 conjunction $cost=n_r\\times\\frac{s_1\\times s_2\\times \u2026\\times s_n}{n_r^n}$ disjunction $cost=n_r\\times(1-(1-\\frac{s_1}{n_r})\\times\u2026\\times(1-\\frac{s_n}{n_r}))$ negation $cost=n_r-size(\\delta_{\\theta}(r))$ join \u7684\u4f30\u8ba1 \u7b1b\u5361\u5c14\u79ef\u7684\u60c5\u51b5\u4e0b\uff0c\u5173\u7cfbR,S\u7684join\u6700\u7ec8\u5143\u7ec4\u7684\u4e2a\u6570\u4e3a$n_r\\times n_s$ \u5982\u679cR\u2229S\u4e3a\u7a7a\uff0c\u5219\u81ea\u7136\u8fde\u63a5\u7684\u7ed3\u679c\u548c\u7b1b\u5361\u5c14\u79ef\u7684\u7ed3\u679c\u76f8\u540c \u5982\u679c\u975e\u7a7a\uff0c\u4e14R\u2229S\u662fR\u7684key\uff0c\u5219R,S\u7684\u81ea\u7136\u8fde\u63a5\u6700\u7ec8\u7ed3\u679c\u4e2d\u7684\u5143\u7ec4\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7r \u5982\u679cR\u2229S\u7684\u7ed3\u679c\u662fS\u5230R\u7684\u5916\u952e\uff0c\u5219\u6700\u540e\u7684\u5143\u7ec4\u6570\u548cs\u4e2d\u7684\u5143\u7ec4\u6570\u76f8\u540c \u4e00\u822c\u60c5\u51b5 \u81ea\u7136\u8fde\u63a5\u7684\u6700\u7ec8\u7ed3\u679c\u7684size\u4f30\u8ba1\u503c\u4e3a$\\frac{n_r\\times n_s}{max(V(A,r),V(A,s))}$ \u5176\u4ed6\u64cd\u4f5c\u7684\u4f30\u8ba1 \u6295\u5f71\u7684size=V(A,r) \u805a\u5408\u64cd\u4f5c\u7684size=V(A,r) \u96c6\u5408\u64cd\u4f5c\uff1a\u6839\u636eDNA\u91cc\u7684\u9ad8\u4e2d\u6570\u5b66\u77e5\u8bc6\u81ea\u5df1\u7f16 \u5916\u90e8\u8fde\u63a5\uff1a \u5de6\u5916\u8fde\u63a5\u7684size = \u81ea\u7136\u8fde\u63a5\u7684size + r\u7684size \u53f3\u5916\u8fde\u63a5\u7684size = \u81ea\u7136\u8fde\u63a5\u7684size + s\u7684size \u5168\u8fde\u63a5\u7684size = \u81ea\u7136\u8fde\u63a5\u7684size + r\u7684size + s \u7684size \u4e0d\u540c\u503c\u4e2a\u6570\u7684\u4f30\u8ba1 \u57fa\u4e8ecost\u7684join\u987a\u5e8f\u4f18\u5316 n\u4e2a\u5173\u7cfb\u8fdb\u884c\u81ea\u7136\u8fde\u63a5\u6709$\\frac{(2n-2)!}{(n-1)!}$\u79cd\u4e0d\u540c\u7684join\u987a\u5e8f \u627e\u5230\u6700\u5408\u9002\u7684join-tree\u7684\u529e\u6cd5\uff1a\u9012\u5f52\u5730\u5c1d\u8bd5,\u5c40\u90e8\u641c\u7d22\u7684\u529e\u6cd5 Left Deep Join Trees\u5de6\u503e\u6811\uff0c\u5f53\u7ed3\u5408\u65b9\u5f0f\u53ea\u8003\u8651\u5de6\u503e\u6811\u7684\u65f6\u5019\uff0c\u627e\u5230\u6700\u4f18\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n2^n)$ Heuristic Optimization \u63a2\u7d22\u5f0f\u7684\u4f18\u5316 \u5c3d\u65e9\u8fdb\u884cselection \u5c3d\u65e9\u8fdb\u884cprojection \u9009\u62e9\u6700\u4e25\u683c\u7684selection\u548coperations\u64cd\u4f5c \u7528\u4e8e\u67e5\u8be2\u4f18\u5316\u7684\u7ed3\u6784 pipelined evaluation plan optimization cost budget plan catching \u7b2c\u4e94\u90e8\u5206\uff1a\u4e8b\u52a1\u5904\u7406 \u8fd9\u4e00\u90e8\u5206\u611f\u89c9\u548c\u64cd\u4f5c\u7cfb\u7edf\u5173\u7cfb\u6bd4\u8f83\u5bc6\u5207 5.1 \u4e8b\u52a1\u548c\u5e76\u53d1\u63a7\u5236 5.1.1 \u57fa\u672c\u7684\u6982\u5ff5 \u4e8b\u52a1\u7684\u6982\u5ff5 \u4e8b\u52a1\u65f6\u7a0b\u5e8f\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4f1a\u5f15\u8d77\u4e00\u4e9b\u6570\u636e\u9879\u7684\u66f4\u65b0\uff0c\u9700\u8981\u89e3\u51b3\u7684\u4e24\u4e2a\u95ee\u9898\uff1a \u6570\u636e\u5e93\u7cfb\u7edf\u7684\u786c\u4ef6\u95ee\u9898\u548c\u7cfb\u7edf\u5954\u6e83 \u591a\u4e8b\u52a1\u7684\u5e76\u884c\u6267\u884c \u4e8b\u52a1\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u65f6\u5019\u6570\u636e\u5e93\u90fd\u5fc5\u987b\u662fconsistent\u7684 \u4e8b\u7269\u7684\u56db\u4e2a\u6027\u8d28ACDI\uff1a \u4e8b\u52a1\u7684\u539f\u5b50\u6027 Atomicity \u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u6b65\u9aa4\u53ea\u80fd\u5b8c\u5168\u6267\u884c(commit)\u6216\u8005\u56de\u6eda(rollback) \u4e8b\u52a1\u7684\u6301\u4e45\u6027 Durability \u66f4\u65b0\u4e4b\u540e\u54ea\u6015\u8f6f\u786c\u4ef6\u51fa\u4e86\u95ee\u9898\uff0c\u66f4\u65b0\u7684\u6570\u636e\u4e5f\u5fc5\u987b\u5b58\u5728 \u4e8b\u52a1\u7684\u4e00\u81f4\u6027 Consistency \u5355\u72ec\u6267\u884c\u4e8b\u52a1\u53ef\u4ee5\u4fdd\u6301\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027 \u4e8b\u52a1\u7684\u72ec\u7acb\u6027 Isolation \u4e8b\u52a1\u5728\u5e76\u884c\u6267\u884c\u7684\u65f6\u5019\u4e0d\u80fd\u611f\u77e5\u5230\u5176\u4ed6\u4e8b\u52a1\u6b63\u5728\u6267\u884c\uff0c\u6267\u884c\u4e2d\u95f4\u7ed3\u679c\u5bf9\u4e8e\u5176\u4ed6\u5e76\u53d1\u6267\u884c\u7684\u4e8b\u52a1\u662f\u9690\u85cf\u7684 \u4e8b\u52a1\u7684\u72b6\u6001 active \u521d\u59cb\u72b6\u6001\uff0c\u6267\u884c\u4e2d\u7684\u4e8b\u52a1\u90fd\u5904\u4e8e\u8fd9\u4e2a\u72b6\u6001 partially committed \u5728\u6700\u540e\u4e00\u53e5\u6307\u4ee4\u88ab\u6267\u884c\u4e4b\u540e failed \u5728\u53d1\u73b0\u6267\u884c\u5931\u8d25\u4e4b\u540e aborted \u56de\u6eda\u7ed3\u675f\uff0c\u4f1a\u9009\u62e9\u662f \u91cd\u65b0\u6267\u884c\u4e8b\u52a1 \u8fd8\u662f\u7ed3\u675f committed \u4e8b\u52a1\u88ab\u5b8c\u6574\u7684\u6267\u884c 5.1.2 \u4e8b\u52a1\u7684\u5e76\u53d1\u6267\u884c \u540c\u65f6\u6267\u884c\u591a\u4e2a\u4e8b\u52a1\uff0c\u53ef\u4ee5\u63d0\u9ad8\u8fd0\u884c\u7684\u6548\u7387\uff0c\u51cf\u5c11\u5e73\u5747\u6267\u884c\u65f6\u95f4 \u5e76\u53d1\u63a7\u5236\u5904\u7406\u673a\u5236\uff1a\u8ba9\u5e76\u53d1\u7684\u4e8b\u52a1\u72ec\u7acb\u8fdb\u884c\uff0c\u63a7\u5236\u5e76\u53d1\u4e8b\u52a1\u4e4b\u95f4\u7684\u4ea4\u6d41 Schedules \u8c03\u5ea6 \u4e00\u7cfb\u5217\u7528\u4e8e\u6307\u5b9a\u5e76\u53d1\u4e8b\u52a1\u7684\u6267\u884c\u987a\u5e8f\u7684\u6307\u4ee4 \u9700\u8981\u5305\u542b\u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u6307\u4ee4 \u9700\u8981\u4fdd\u8bc1\u5355\u4e2a\u4e8b\u52a1\u4e2d\u7684\u6307\u4ee4\u7684\u76f8\u5bf9\u987a\u5e8f \u4e8b\u52a1\u7684\u6700\u540e\u4e00\u6b65 \u6210\u529f\u6267\u884c\uff0c\u6700\u540e\u4e00\u6b65\u662fcommit instruction \u6267\u884c\u5931\u8d25\u6700\u540e\u4e00\u6b65\u662fabort instruction serial schedule \u4e32\u884c\u8c03\u5ea6\uff1a\u4e00\u4e2a\u4e8b\u52a1\u8c03\u5ea6\u5b8c\u6210\u4e4b\u540e\u518d\u8fdb\u884c\u4e0b\u4e00\u4e2a equivalent schedule \u7b49\u4ef7\u8c03\u5ea6\uff1a\u6539\u53d8\u5904\u7406\u7684\u987a\u5e8f\u4f46\u662f\u548c\u539f\u6765\u7b49\u4ef7 Serializability \u53ef\u4e32\u884c\u5316 \u57fa\u672c\u5047\u8bbe\uff1a\u4e8b\u52a1\u4e0d\u4f1a\u7834\u574f\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u53ea\u8003\u8651\u8bfb\u5199\u4e24\u79cd\u64cd\u4f5c \u51b2\u7a81\u53ef\u4e32\u884c\u5316 conflict serializability \u540c\u65f6\u8bfb\u4e0d\u5f15\u53d1\u51b2\u7a81\uff0c\u800c\u8bfb\u5199\u5e76\u884c\u6216\u8005\u540c\u65f6\u5199\u4f1a\u5f15\u53d1\u51b2\u7a81 conflict equivalent \uff1a\u4e24\u4e2a\u8c03\u5ea6\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u4e00\u4e9b\u4e0d\u51b2\u7a81\u7684\u6307\u4ee4\u6765\u8f6c\u6362\uff0c\u5c31\u53eb\u505a\u51b2\u7a81\u7b49\u4ef7 conflict serializable \uff1a\u51b2\u7a81\u53ef\u4e32\u884c\u5316\uff1a\u5f53\u4e14\u4ec5\u5f53\u4e00\u4e2a\u8c03\u5ea6S\u53ef\u4ee5\u548c\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\u7b49\u4ef7 Precedence graph \u524d\u9a71\u56fe \u56fe\u4e2d\u7684\u9876\u70b9\u662f\u5404\u4e2a\u4e8b\u52a1\uff0c\u5f53\u4e8b\u52a1$T_i, T_j$ \u51b2\u7a81\u5e76\u4e14$T_i$ \u5148\u8bbf\u95ee\u51fa\u73b0\u51b2\u7a81\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u5c31\u753b\u4e00\u6761\u8fb9$T_i\\rightarrow T_j$ \u4e00\u4e2a\u8c03\u5ea6\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u5f53\u4e14\u4ec5\u5f53\u524d\u9a71\u56fe\u662f\u65e0\u73af\u56fe \u5bf9\u4e8e\u65e0\u73af\u56fe\uff0c\u53ef\u4ee5\u4f7f\u7528 \u62d3\u6251\u903b\u8f91\u6392\u5e8f \u83b7\u5f97\u4e00\u4e2a\u5408\u9002\u7684\u6267\u884c\u987a\u5e8f Recoverable Schedules \u53ef\u6062\u590d\u8c03\u5ea6 database must ensure that schedules are recoverable. \u4e0d\u7136\u4f1a\u51fa\u73b0dirty read \u5982\u679c\u4e00\u4e2a\u4e8b\u52a1$T_1$\u8981\u8bfb\u53d6\u67d0\u4e00\u90e8\u5206\u6570\u636e\uff0c\u800c$T_2$\u8981\u5199\u5165\u540c\u4e00\u90e8\u5206\u7684\u6570\u636e\uff0c\u5219$T_1$\u5fc5\u987b\u5728$T_2$commit\u4e4b\u524d\u5c31commit\uff0c\u5426\u5219\u5c31\u4f1a\u9020\u6210dirty read Cascading Rollbacks \u7ea7\u8054\u56de\u6eda \u5355\u4e2a\u4e8b\u52a1\u7684fail\u9020\u6210\u4e86\u4e00\u7cfb\u5217\u7684\u4e8b\u52a1\u56de\u6eda Cascadeless Schedules \u907f\u514d\u7ea7\u8054\u56de\u6eda\u7684\u8c03\u5ea6 \u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u4e8b\u52a1a\u548cb\u5e76\u4e14b\u9700\u8981\u8bfb\u5165\u4e00\u4e2aa\u5199\u5165\u7684\u6570\u636e\uff0c\u90a3\u4e48a\u5fc5\u987b\u5728b\u7684\u8bfb\u64cd\u4f5c\u5f00\u59cb\u4e4b\u524dcommit Cascadeless Schedules \u4e5f\u662f\u53ef\u6062\u590d\u7684\u8c03\u5ea6 5.1.3 Concurrency Control \u5e76\u53d1\u63a7\u5236 Lock-Based Protocols \u57fa\u4e8e\u9501\u7684\u534f\u8bae lock\u662f\u4e00\u79cd\u63a7\u5236\u5e76\u53d1\u8bbf\u95ee\u540c\u4e00\u6570\u636e\u9879\u7684\u673a\u5236 \u4e24\u79cdlock mode exclusive(X) \uff1a\u8868\u793a\u6570\u636e\u9879\u53ef\u4ee5\u8bfb\u548c\u5199\uff0c\u7528lock-X\u8868\u793a shared(S) \uff1a\u8868\u793a\u6570\u636e\u9879\u53ea\u80fd\u8bfb\uff0c\u7528lock-S \u8868\u793a \u4e24\u4e2a\u4e8b\u52a1\u7684\u51b2\u7a81\u77e9\u9635\uff1a S X S true flase X false false \u5982\u679c\u8bf7\u6c42\u7684\u9501\u548c\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8fd9\u4e2a\u6570\u636e\u9879\u5df2\u7ecf\u6709\u7684\u9501\u4e0d\u51b2\u7a81\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u4e8b\u52a1\u6279\u51c6\u4e00\u4e2a\u9501 \u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e\u9879\uff0c\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u7684\u4e8b\u52a1\u6301\u6709S\u9501\uff0c\u4f46\u662f\u5982\u679c\u6709\u4e00\u4e2a\u4e8b\u52a1\u6301\u6709X\u9501\uff0c\u5176\u4ed6\u7684\u4e8b\u52a1\u90fd\u4e0d\u53ef\u4ee5\u6301\u6709\u8fd9\u4e2a\u6570\u636e\u9879\u7684\u9501 \u5982\u679c\u4e00\u4e2a\u9501\u6ca1\u6709\u88ab\u6279\u51c6\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8bf7\u6c42\u4e8b\u52a1\uff0c\u7b49\u5230\u6240\u6709\u51b2\u7a81\u7684\u9501\u88abrelease\u4e4b\u540e\u518d\u7533\u8bf7 \u9501\u534f\u8bae\u4e2d\u7684\u7279\u6b8a\u60c5\u51b5 dead lock \u6b7b\u9501\uff1a\u4e24\u4e2a\u4e8b\u52a1\u4e2d\u7684\u9501\u4e92\u76f8\u7b49\u5f85\u9020\u6210\u4e8b\u52a1\u65e0\u6cd5\u6267\u884c\uff0c\u6bd4\u5982\u4e8b\u52a12\u7684\u9501\u9700\u8981\u4e8b\u52a11\u5148release\uff0c\u4f46\u662f\u4e8b\u52a11\u7684release\u6b65\u9aa4\u518d\u4e8b\u52a12\u7684\u7533\u8bf7\u9501\u540e\u9762\uff0c\u5c31\u4f1a\u9020\u6210\u4e8b\u52a112\u7684\u6b7b\u9501 Starvation \u9965\u8352\uff1a\u4e00\u4e2a\u4e8b\u52a1\u5728\u7b49\u4e00\u4e2a\u6570\u636e\u9879\u7684Xlock\uff0c\u4e00\u7fa4\u522b\u7684\u4e8b\u52a1\u5728\u7b49\u4ed6release\uff0c\u9020\u6210\u9965\u8352 Two-Parse Locking Protocol \u4e8c\u9636\u6bb5\u9501\u534f\u8bae\uff1a\u786e\u4fdd\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u8c03\u5ea6 \u4e24\u4e2a\u9636\u6bb5 growing\u548cshrinking\uff0cgrowing\u53ea\u63a5\u53d7\u9501\u800c\u4e0d\u91ca\u653e\uff0cshrinking\u53cd\u4e4b \u65e0\u6cd5\u89e3\u51b3\u6b7b\u9501\u7684\u95ee\u9898 strict two-phase locking \u6bcf\u4e2a\u4e8b\u52a1\u90fd\u8981\u4fdd\u6301\u6240\u6709\u7684exclusive\u9501\u76f4\u5230\u7ed3\u675f \u4e3a\u4e86\u89e3\u51b3\u7ea7\u8054\u56de\u6eda\u7684\u95ee\u9898 Rigorous two-phase locking \u6240\u6709\u7684\u9501\u5fc5\u987b\u4fdd\u6301\u5230\u4e8b\u52a1commit\u6216\u8005abort Lock Conversions\u9501\u8f6c\u6362\uff1a\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06S\u9501\u5347\u7ea7\u4e3aX\u9501\u7684\u673a\u5236 \u4e24\u4e2a\u9636\u6bb5 \u7b2c\u4e00\u4e2a\u9636\u6bb5\u53ef\u4ee5\u8bbe\u7f6eS\u548cX\u9501\uff0c\u4e5f\u53ef\u4ee5\u5347\u7ea7S\u9501 \u7b2c\u4e8c\u4e2a\u9636\u6bb5\u53ef\u4ee5\u91ca\u653eS\u548cX\u9501\uff0c\u4e5f\u53ef\u4ee5\u964d\u7ea7X\u9501 \u4e8b\u52a1\u4e0d\u9700\u8981\u663e\u5f0f\u8c03\u7528\u6240\u5f97\u8bf7\u6c42\uff0c\u6bd4\u5982read\u548cwrite\u7684\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b \u6240\u6709\u7684\u9501\u5728\u4e8b\u52a1commit\u6216\u8005abort\u4e4b\u540e\u518d\u88ab\u91ca\u653e c if Ti has a lock on D then read(D) else begin if necessary wait until no other transaction has a lock-X on D grant Ti a lock-S on D; read(D) end c if Ti has a lock-X on D then write(D) else begin if necessary wait until no other trans. has any lock on D, if Ti has a lock-S on D then upgrade lock on D to lock-X else grant Ti a lock-X on D write(D) end; \u9501\u7684\u5b9e\u73b0\uff1aLock Manager\u53ef\u4ee5\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\u6765\u63a5\u6536\u4e8b\u52a1\u53d1\u51fa\u7684\u9501\u548c\u89e3\u9501\u8bf7\u6c42 Lock Manager\u4f1a\u56de\u590d\u7533\u8bf7\u9501\u7684\u8bf7\u6c42 \u53d1\u51fa\u8bf7\u6c42\u7684\u4e8b\u52a1\u4f1a\u7b49\u5f85\u8bf7\u6c42\u88ab\u56de\u590d\u518d\u7ee7\u7eed\u5904\u7406 lock manager\u7ef4\u62a4\u4e00\u4e2a\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7ed3\u6784lock-table\u6765\u8bb0\u5f55\u5df2\u7ecf\u53d1\u51fa\u7684\u6279\u51c6 Lock table \u662f\u4e00\u4e2a in-memory\u7684hash\u8868 \u901a\u8fc7\u88ab\u4e0a\u9501\u7684\u6570\u636e\u9879\u4f5c\u4e3a\u7d22\u5f15\uff0c\u9ed1\u6846\u4ee3\u8868\u4e0a\u9501\uff0c\u800c\u767d\u6846\u8868\u793a\u5728\u7b49\u5f85 \u65b0\u7684\u4e0a\u9501\u8bf7\u6c42\u88ab\u653e\u5728\u961f\u5217\u7684\u672b\u7aef\uff0c\u5e76\u4e14\u5728\u548c\u5176\u4ed6\u9501\u517c\u5bb9\u7684\u65f6\u5019\u4f1a\u88ab\u6388\u6743\u4e0a\u9501 \u89e3\u9501\u7684\u8bf7\u6c42\u4f1a\u5220\u9664\u5bf9\u5e94\u7684\u8bf7\u6c42\uff0c\u68c0\u67e5\u540e\u9762\u7684\u8bf7\u6c42\u662f\u5426\u53ef\u4ee5\u88ab\u6388\u6743 \u5982\u679c\u4e00\u4e2a\u4e8b\u52a1aborts\u4e86\uff0c\u6240\u6709\u8be5\u4e8b\u52a1\u7684\u8bf7\u6c42\u90fd\u4f1a\u88ab\u5220\u9664 lock-manager\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u8bb0\u5f55\u6bcf\u4e2a\u4e8b\u52a1\u4e0a\u9501\u60c5\u51b5\u7684\u8868\u6765\u63d0\u9ad8\u64cd\u4f5c\u7684\u6548\u7387 Deadlock prevention protocols \u6b7b\u9501\u4fdd\u62a4\u534f\u8bae\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u5165\u6b7b\u9501 predeclaration \u6267\u884c\u4e4b\u524d\u5148\u68c0\u67e5\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\uff0c\u4fdd\u8bc1\u4e00\u4e2a\u4e8b\u52a1\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u5bf9\u6d89\u53ca\u5230\u7684\u6240\u6709\u7684\u6570\u636e\u9879\u90fd\u4e0a\u9501 graph-based protocol\uff1a\u4f7f\u7528\u504f\u5e8f\u6765\u786e\u5b9a\u6570\u636e\u9879\u4e0a\u9501\u7684\u987a\u5e8f wait-die scheme \u88ab\u52a8 \u8001\u7684\u4e8b\u52a1\u7b49\u5f85\u65b0\u4e8b\u52a1\u91ca\u653e\uff0c\u4f46\u662f\u65b0\u7684\u4e8b\u52a1\u4e0d\u7b49\u8001\u7684\u800c\u662f\u76f4\u63a5\u56de\u6eda wound-wait scheme \u4e3b\u52a8 \u8001\u7684\u4e8b\u52a1\u5f3a\u5236\u8ba9\u65b0\u7684\u4e8b\u52a1\u56de\u6eda\u800c\u4e0d\u7b49\u5f85\u5176\u91ca\u653e\uff0c\u65b0\u7684\u4e8b\u52a1\u4f1a\u7b49\u8001\u7684\u4e8b\u52a1\u7ed3\u675f Timeout-Based Schemes \u53ea\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fc7\u4e86\u65f6\u95f4\u5c31\u56de\u6eda \u5bb9\u6613\u5b9e\u73b0\uff0c\u4f46\u662f\u4f1a\u5bfc\u81f4starvation Deadlock Detection \u6b7b\u9501\u68c0\u6d4b wait-for \u56fe: \u6240\u6709\u7684\u4e8b\u52a1\u8868\u793a\u56fe\u4e2d\u7684\u70b9\uff0c\u5982\u679c\u4e8b\u52a1i\u9700\u8981j\u91ca\u653e\u4e00\u4e2adata item\u5219\u56fe\u4e2d\u753b\u4e00\u6761\u70b9i\u5230\u70b9j\u7684\u6709\u5411\u8fb9\uff0c\u5982\u679c\u56fe\u4e2d\u6709\u73af\uff0c\u8bf4\u660e\u7cfb\u7edf\u5b58\u5728\u4e00\u4e2a\u6b7b\u9501\u2014\u2014\u8ddf\u524d\u9a71\u56fe\u5f88\u76f8\u4f3c \u6b7b\u9501\u6062\u590d total rollback \u5c06\u4e8b\u52a1abort\u4e4b\u540e\u91cd\u542f partial rollback \u4e0d\u76f4\u63a5abort\u800c\u5b9e\u4ec5\u56de\u6eda\u5230\u80fd\u89e3\u9664\u6b7b\u9501\u7684\u72b6\u6001 \u540c\u4e00\u4e2a\u4e8b\u52a1\u7ecf\u5e38\u53d1\u751f\u6b7b\u9501\u4f1a\u5bfc\u81f4starvation\uff0c\u56e0\u6b64\u907f\u514dstarvation\u7684\u8fc7\u7a0b\u4e2dcost\u8981\u8003\u8651\u56de\u6eda\u7684\u6b21\u6570 Multiple Granularity \u591a\u7c92\u5ea6 \u5141\u8bb8\u6570\u636e\u9879\u5177\u6709\u4e0d\u540c\u7684\u5927\u5c0f\uff0c\u5e76\u5b9a\u4e49\u6570\u636e\u7c92\u5ea6\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5176\u4e2d\u5c0f\u7c92\u5ea6\u5d4c\u5957\u5728\u5927\u7c92\u5ea6\u4e2d \u53ef\u4ee5\u7528\u6811\u5f62\u7ed3\u6784\u6765\u8868\u793a \u9501\u7684\u7c92\u5ea6 (level in tree where locking is done) fine granularity(lower in tree) \u9ad8\u5e76\u53d1\uff0c\u9ad8\u5f00\u9500 coarse granularity(higher in tree) \u4f4e\u5e76\u53d1\uff0c\u4f4e\u5f00\u9500 \u6700\u9ad8\u7b49\u7ea7\u7684\u662f\u6574\u4e2aDB \u6700\u4f4e\u7b49\u7ea7\u7684\u662f\u533a\u57df\uff0c\u6587\u4ef6\u548c\u8bb0\u5f55 \u6269\u5c55\u7684Lock Modes intention-shared (IS): indicates explicit locking at a lower level of the tree but only with shared locks. intention -exclusive (IX): indicates explicit locking at a lower level with exclusive or shared locks shared and intention -exclusive (SIX): the subtree rooted by that node is locked explicitly in shared mode and explicit locking is being done at a lower level with exclusive-mode locks. \u51b2\u7a81\u77e9\u9635\u5982\u4e0b \u8fd9\u90e8\u5206\u611f\u89c9\u4e0d\u592a\u50cf\u4f1a\u8003\u7684\u6837\u5b50\uff0c\u5148\u4e0d\u7ba1\u4e86 5.2 Recovery System \u4e8b\u52a1\u6062\u590d \u6545\u969c\u7684\u5206\u7c7b Transaction failure \u4e8b\u52a1\u9519\u8bef\uff1a\u5305\u542b\u903b\u8f91\u9519\u8bef\u548c\u7cfb\u7edf\u9519\u8bef\uff0c\u6b7b\u9501\u5c5e\u4e8e\u7cfb\u7edf\u9519\u8bef System crash \u7cfb\u7edf\u5d29\u6e83\u5bfc\u81f4\u7684\u6545\u969c(\u78c1\u76d8\u6ca1\u51fa\u4e8b) Disk failure \u78c1\u76d8\u4e2d\u7684\u95ee\u9898\u5bfc\u81f4\u78c1\u76d8\u5b58\u50a8\u88ab\u9500\u6bc1 \u6062\u590d\u7b97\u6cd5\uff1a\u4fdd\u6301\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u548c\u6301\u4e45\u6027 \u5728\u666e\u901a\u4e8b\u52a1\u5904\u7406\u4e2d\u8981\u4fdd\u8bc1\u6709\u8db3\u591f\u7684\u4fe1\u606f\u4fdd\u8bc1\u53ef\u4ee5\u4ece\u6545\u969c\u4e2d\u6062\u590d \u5728\u6545\u969c\u53d1\u751f\u4e4b\u540e\u8981\u4fdd\u6301\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u548c\u6301\u4e45\u6027 Data Access \u6570\u636e\u8bbf\u95ee\u56de\u987e \u7269\u7406block\u662f\u78c1\u76d8\u4e0a\u7684\u533a\u5206 \u7f13\u51b2block\u662f\u5728\u4e3b\u5b58\u4e2d\u7684block \u78c1\u76d8\u548c\u4e3b\u5b58\u4e4b\u95f4\u7684\u6570\u636e\u79fb\u52a8\u4f9d\u8d56input\u548coutput\u64cd\u4f5c \u6bcf\u4e2a\u4e8b\u52a1$T_i$ \u5728\u5185\u5b58\u4e2d\u6709\u81ea\u5df1\u7684work-area\uff0c\u5e76\u4e14\u62f7\u8d1d\u4e86\u4e00\u4efd\u8be5\u4e8b\u52a1\u8981\u7528\u5230\u7684\u5168\u90e8\u6570\u636e \u4e8b\u52a1\u901a\u8fc7read\u548cwrite\u64cd\u4f5c\u628a\u6570\u636e\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u533a\u57df\u548cbuffer blocks\u533a\u95f4\u4e4b\u95f4\u8fdb\u884c\u4f20\u9012 \u5982\u4f55\u5728\u4e8b\u52a1failure\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u4fdd\u8bc1\u539f\u5b50\u6027 \u5148\u628a\u6570\u636e\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5b58\u5230\u6570\u636e\u5e93\u4e2d \u7136\u540e\u5728\u63d0\u4ea4\u70b9\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\u5c31\u7acb\u9a6c\u56de\u6eda \u4f46\u8fd9\u4e2a\u65b9\u6cd5\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u662f\u4e16\u4e0a\u6ca1\u6709\u88ab\u91c7\u7528 5.2.1 log-based Recovery\u57fa\u4e8e\u65e5\u5fd7\u7684\u6062\u590d \u65e5\u5fd7(log)\u88ab\u5b58\u50a8\u5728\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d\uff0c\u5305\u542b\u4e00\u7cfb\u5217\u7684\u65e5\u5fd7\u8bb0\u5f55 \u4e8b\u52a1\u5f00\u59cb <T start> \u5199\u64cd\u4f5c\u4e4b\u524d\u4e4b\u524d\u7684\u65e5\u5fd7\u8bb0\u5f55 <Ti,X,V1,V2> (X)\u662f\u5199\u7684\u4f4d\u7f6e\uff0cV1\uff0cV2\u5206\u522b\u662f\u5199\u4e4b\u524d\u548c\u4e4b\u540e\u7684X\u5904\u7684\u503c \u4e8b\u52a1\u7ed3\u675f\u7684\u65f6\u5019\u5199\u5165 <Ti commit> \u66f4\u65b0\u4e8b\u52a1\u5bfc\u81f4\u7684\u4e0d\u4e00\u81f4\u6027 \u65b0\u7684\u6570\u636e\u5728\u63d0\u4ea4\u7684\u65f6\u5019\u4e0d\u4e00\u5b9a\u662f\u5b89\u5168\u7684\uff1a\u9519\u8bef\u53d1\u751f\u65f6\u96be\u4ee5\u4fdd\u62a4\u6539\u53d8\u540e\u7684\u503c\u4e0d\u53d8 \u65e7\u7684\u6570\u636e\u5728\u63d0\u4ea4\u4e4b\u524d\u4e0d\u4e00\u5b9a\u662f\u5b89\u5168\u7684\uff1a\u5728commit\u4e4b\u524d\u53d1\u751f\u9519\u8bef\u5c06\u65e0\u6cd5\u56de\u6eda\u5230\u539f\u6765\u7684\u503c \u5bf9\u4e8e\u66f4\u65b0\u4e8b\u52a1\u7684\u4e24\u6761\u89c4\u5219 commit rule\uff1a\u65b0\u7684\u6570\u636e\u5728commit\u4e4b\u524d\u5fc5\u987b\u88ab\u5199\u5728 \u975e\u6613\u5931\u6027 \u7684\u5b58\u50a8\u5668\u4e2d logging rule\uff1a\u65e7\u7684\u503c\u5728\u65b0\u7684\u5199\u5165\u4e4b\u524d\u9700\u8981\u88ab\u5199\u5728\u65e5\u5fd7\u91cc \u65e5\u5fd7\u4e2d\u5199\u5165commit\u7684\u65f6\u5019\u89c6\u4e3a\u4e00\u4e2a\u4e8b\u52a1\u88ab\u63d0\u4ea4\u4e86\uff0c\u4f46\u6b64\u65f6buffer\u4e2d\u53ef\u80fd\u8fd8\u5728\u8fdb\u884cwrite\u64cd\u4f5c\uff0c\u56e0\u4e3alog\u7684\u5199\u5165\u5148\u4e8e\u64cd\u4f5c deferred database modification \u5ef6\u8fdf\u6570\u636e\u5e93\u66f4\u65b0\uff1a\u5148\u628a\u6240\u6709\u7684\u66f4\u65b0\u5199\u5728\u65e5\u5fd7\u91cc\uff0c\u5728\u5199\u5165commit\u4e4b\u540e\u518d\u5f00\u59cb\u5199\u5165\u6570\u636e\u5e93 \u5047\u8bbe\u4e8b\u52a1\u662f\u4e32\u884c\u6267\u884c\u7684 \u4e8b\u52a1\u5f00\u59cb\u7684\u65f6\u5019\u8981\u5199\u5165 <Ti start> write ( X ) \u64cd\u4f5c\u5bf9\u5e94\u7684\u65e5\u5fd7\u662f <Ti, X, V> \uff0cV\u8868\u793aX\u65b0\u7684\u503c \u4e8b\u52a1partially commits\u7684\u65f6\u5019\u9700\u8981\u5199\u5165commit \u7136\u540e\u6839\u636e\u65e5\u5fd7\u6765\u5b9e\u9645\u6267\u884c\u4e00\u4e9bwrite\u7684\u64cd\u4f5c \u5f53\u9519\u8bef\u53d1\u751f\u65f6\uff0c\u5f53\u4e14\u4ec5\u5f53\u65e5\u5fd7\u4e2dstart\u548ccommit\u90fd\u6709\u7684\u65f6\u5019\uff0c\u4e8b\u52a1\u9700\u8981redo immediate database modification \u76f4\u63a5\u4fee\u6539\u6570\u636e\u5e93 \u5148\u8981\u5199\u597d\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5047\u8bbe\u65e5\u5fd7\u8bb0\u5f55\u76f4\u63a5output\u5230\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d block\u7684\u8f93\u51fa\u53ef\u4ee5\u53d1\u751f\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\uff0c\u5305\u62ec\u4e8b\u52a1commit\u524d\u548ccommit\u540e\uff0cblock\u8f93\u51fa\u7684\u987a\u5e8f\u548cwrite\u7684\u987a\u5e8f\u4e0d\u4e00\u5b9a\u76f8\u540c \u6062\u590d\u7684\u8fc7\u7a0b\u4e2d\u6709\u4e24\u79cd\u64cd\u4f5c undo\uff1a\u64a4\u56de\uff0c\u5c06\u4e8b\u52a1$T_i$ \u4e2d\u5df2\u7ecf\u66f4\u65b0\u7684\u503c\u53d8\u56de\u539f\u672c\u7684\u503c redo\uff1a\u4ece\u4e8b\u52a1$T_i$ \u7684\u7b2c\u4e00\u6b65\u5f00\u59cb\u91cd\u65b0\u505a\uff0c\u5c06\u6240\u6709\u503c\u8bbe\u5b9a\u4e3a\u65b0\u7684\u503c \u4e24\u79cd\u64cd\u4f5c\u90fd\u9700\u8981 idempotent \u2014\u2014\u4e5f\u5c31\u662f\u64cd\u4f5c\u6267\u884c\u591a\u6b21\u548c\u6267\u884c\u4e00\u6b21\u7684\u6548\u679c\u76f8\u540c undo\u7684\u6761\u4ef6\uff1a\u65e5\u5fd7\u4e2d\u5305\u542b\u8fd9\u4e2a\u4e8b\u52a1\u7684start\u800c\u4e0d\u5305\u542bcommit\uff0c\u5373\u4e8b\u52a1\u8fdb\u884c\u5230\u4e00\u534a\u4e2d\u65ad\u4e86 redo\u7684\u6761\u4ef6\uff1a\u65e5\u5fd7\u4e2d\u5305\u542b\u8fd9\u4e2a\u4e8b\u52a1\u7684start\u548ccommit \u5e76\u884c\u63a7\u5236\u548c\u6062\u590d \u6240\u6709\u4e8b\u52a1\u5171\u7528\u4e00\u4e2a\u65e5\u5fd7\u548cdisk buffer \u57fa\u672c\u7684\u5047\u8bbe \u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\u6539\u53d8\u4e86\u67d0\u4e2a\u6570\u636e\u9879\uff0c\u5176\u4ed6\u7684\u4e8b\u52a1\u76f4\u5230\u8fd9\u4e2a\u4e8b\u52a1commit\u6216\u8005abort\u4e4b\u524d\u90fd\u4e0d\u80fd\u6539\u53d8\u8fd9\u4e2a\u6570\u636e\u9879\u7684\u503c \u6ca1\u6709commited\u7684\u4e8b\u52a1\u5f15\u8d77\u7684\u66f4\u65b0\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u66f4\u65b0 \u65e5\u5fd7\u4e2d\u4e0d\u540c\u4e8b\u52a1\u7684\u65e5\u5fd7\u53ef\u80fd\u4f1a\u76f8\u4ea4 check point \u901a\u8fc7\u5b9a\u671f\u6267\u884ccheckpoint\u64cd\u4f5c\u6765\u5b8c\u6210\u7b80\u5316\u7684\u6062\u590d 1.\u5c06\u5185\u5b58\u4e2d\u7684\u8bb0\u5f55\u90fd\u5199\u5230\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d 2.\u5c06\u6240\u6709\u66f4\u6539\u8fc7\u7684block\u5199\u5165\u78c1\u76d8\u4e2d 3.\u5199\u5165\u65e5\u5fd7\u8bb0\u5f55< checkpoint L > \uff0c\u5176\u4e2dL\u662f\u4e00\u4e2a\u5728checkpoint\u65f6\u4f9d\u7136\u5904\u4e8e\u8fdb\u884c\u72b6\u6001\u7684\u4e8b\u52a1 \u901a\u8fc7checkpoint\uff0c\u5728\u65e5\u5fd7\u5904\u7406\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u5904\u7406\u6240\u6709\u7684\u65e5\u5fd7\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u5f02\u5e38\u65f6\u6b63\u5728\u6d3b\u8dc3\u7684\u4e8b\u52a1\uff0c\u6062\u590d\u7684\u6b65\u9aa4\u5982\u4e0b \u4ece\u65e5\u5fd7\u7684\u672b\u5c3e\u5411\u524d\u626b\u63cf\uff0c\u76f4\u5230\u53d1\u73b0\u6700\u8fd1\u7684checkpoint\u8bb0\u5f55 \u53ea\u6709L\u4e2d\u8bb0\u5f55\u7684\uff0c\u6216\u8005\u5728L\u4e4b\u540e\u53d1\u751f\u7684\u4e8b\u52a1\u9700\u8981redo\u6216\u8005undo checkpoint\u4e4b\u524d\u7684\u8bb0\u5f55\u5df2\u7ecf\u751f\u6548\u5e76\u4fdd\u5b58\u5728\u4e86\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d \u65e5\u5fd7\u4e2d\u66f4\u65e9\u7684\u90e8\u5206 \u6216\u8bb8\u9700\u8981 undo\uff0c\u4f46\u4e00\u5b9a\u4e0d\u9700\u8981redo \u7ee7\u7eed\u5411\u524d\u626b\u63cf\u76f4\u5230\u53d1\u73b0\u4e00\u4e2a\u4e8b\u52a1\u7684start\u65e5\u5fd7 \u6700\u65e9\u7684start\u4e4b\u524d\u7684\u65e5\u5fd7\u4e0d\u9700\u8981\u8fdb\u884c\u6062\u590d\u64cd\u4f5c\uff0c\u5e76\u4e14\u53ef\u4ee5\u6e05\u9664 \u5728\u4e0a\u9762\u8fd9\u4e2a\u56fe\u4e2d T1 ignored\uff0cT2\uff0cT3\u9700\u8981redo\uff0cT4 undo \u6062\u590d\u7b97\u6cd5 \u5355\u4e2a\u4e8b\u52a1\u56de\u6eda\u65f6\u7684\u57fa\u672c\u64cd\u4f5c \u4ece\u540e\u5f80\u524d\u626b\u63cf\uff0c\u5f53\u53d1\u73b0\u8bb0\u5f55$ $ \u7684\u65f6\u5019 \u5c06X\u7684\u503c\u4fee\u6539\u4e3a\u539f\u672c\u7684\u503c \u5728\u65e5\u5fd7\u7684\u672b\u5c3e\u5199\u5165\u8bb0\u5f55$ $ \u53d1\u73b0start\u8bb0\u5f55\u7684\u65f6\u5019\uff0c\u505c\u6b62\u626b\u63cf\u5e76\u5728\u65e5\u5fd7\u4e2d\u5199\u5165abort\u8bb0\u5f55 \u6062\u590d\u7684\u4e24\u4e2a\u9636\u6bb5\uff1aredo\u548cundo redo\u9700\u8981\u5148\u627e\u5230\u6700\u540e\u4e00\u4e2acheck point\u5e76\u4e14\u8bbe\u7f6eundo-list 1.\u4ececheckpoint\u5f00\u59cb\u5f80\u4e0b\u8bfb 2.\u5f53\u53d1\u73b0\u4fee\u6539\u503c\u7684\u8bb0\u5f55\u7684\u65f6\u5019\uff0credo\u4e00\u6b21\u5c06X\u8bbe\u7f6e\u4e3a\u65b0\u7684\u503c 3.\u5f53\u53d1\u73b0start\u7684\u65f6\u5019\u5c06\u8fd9\u4e2a\u4e8b\u52a1\u52a0\u5165undo-list 4.\u5f53\u53d1\u73b0commit\u6216\u8005abort\u7684\u65f6\u5019\u5c06\u5bf9\u5e94\u7684\u4e8b\u52a1\u4eceundo-list\u4e2d\u79fb\u9664 undo 1.\u4ece\u65e5\u5fd7\u7684\u672b\u5c3e\u5f00\u59cb\u5f80\u56de\u8bfb 2.\u5f53\u53d1\u73b0\u8bb0\u5f55 \u5e76\u4e14Ti\u5728undo-list\u4e2d\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u4e00\u6b21\u56de\u6eda 3.\u5f53\u53d1\u73b0Ti start\u5e76\u4e14Ti\u5728undo-list\u4e2d\u7684\u65f6\u5019\uff0c\u5199\u5165abort\u65e5\u5fd7\u5e76\u4e14\u4eceundo-list\u4e2d\u79fb\u9664Ti 4.\u5f53undo-list\u7a7a\u4e86\u7684\u65f6\u5019\u505c\u6b62undo log record buffering \u7f13\u51b2\u65e5\u5fd7\u8bb0\u5f55 \u65e5\u5fd7\u8bb0\u5f55\u4e00\u5f00\u59cb\u5728\u4e3b\u5b58\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u5f53\u65e5\u5fd7\u5728block\u4e2d\u6ee1\u4e86\u7684\u65f6\u5019\u6216\u8005\u8fdb\u884c\u4e86log force\u64cd\u4f5c(\u4e0a\u9762\u63d0\u5230\u7684checkpoint)\u65f6\u5199\u5165\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d \u9700\u8981\u9075\u5b88\u7684\u89c4\u5219 \u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u4e2d\u7684\u65f6\u5019\u65e5\u5fd7\u8bb0\u5f55\u6309\u7167\u539f\u672c\u7684\u987a\u5e8f\u5199\u5165 \u5728commit\u8bb0\u5f55\u88ab\u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u7684\u65f6\u5019\uff0cTi\u624d\u7b97\u8fdb\u5165commit\u72b6\u6001 WAL(write-ahead logging)\u89c4\u5219\uff1a\u5728\u6570\u636eblock\u5199\u5165\u6570\u636e\u5e93\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u628a\u65e5\u5fd7\u5199\u5165\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d \u4e2d\u95f4\u6709\u51e0\u9875\u5148\u7559\u7740\u6162\u6162\u5b66\u4e60\uff0c\u8fd9\u51e0\u9875\u770b\u8d77\u6765\u4e0d\u592a\u50cf\u8003\u8bd5\u5185\u5bb9\uff0cbuffer\u8fd9\u4e00\u90e8\u5206\u5e94\u8be5\u4e86\u89e3\u5c31\u597d 5.2.2 ARIES Recovery Algorithm\u2014\u2014Aries\u6062\u590d\u7b97\u6cd5 \u548c\u666e\u901a\u6062\u590d\u7b97\u6cd5\u7684\u533a\u522b\uff1a \u6700\u6838\u5fc3\u7684\u533a\u522b\u2014\u2014Aries\u7b97\u6cd5\u8003\u8bd5\u8003\u5230\u7684\u6982\u7387\u5f88\u9ad8 \u4f7f\u7528LSN(log sequence number)\u6765\u6807\u6ce8\u65e5\u5fd7 \u4ee5\u9875\u7684\u5f62\u5f0f\u6765\u5b58\u50a8LSN\u6765\u6807\u6ce8\u6570\u636e\u5e93\u9875\u8868\u4e2d\u8fdb\u884c\u4e86\u54ea\u4e9b\u66f4\u65b0 \u751f\u7406redo(?) \u4f7f\u7528\u810f\u9875\u8868(dirty page table) \u6765\u907f\u514d\u4e0d\u5fc5\u8981\u7684redo \u6a21\u7cca\u7684checkpoint\u673a\u5236\uff0c\u53ea\u8bb0\u5f55\u810f\u9875\u4fe1\u606f\u548c\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4e0d\u9700\u8981\u628a\u810f\u9875\u5199\u5165\u78c1\u76d8 ARIES\u4e2d\u7684\u6570\u636e\u7ed3\u6784 Log sequence number (LSN) \u7528\u4e8e\u6807\u8bc6 \u6bcf\u4e00\u6761\u8bb0\u5f55 \uff0c\u9700\u8981\u662f\u7ebf\u6027\u589e\u957f\u7684 \u5176\u5b9e\u662f\u4e00\u4e2aoffset\uff0c\u65b9\u4fbf\u4ece\u6587\u4ef6\u7684\u8d77\u70b9\u5f00\u59cb\u8bbf\u95ee Page LSN \u6bcf\u4e00\u9875\u7684LSN \u662f\u6bcf\u4e00\u9875\u4e2d \u6700\u540e\u4e00\u6761 \u8d77\u4f5c\u7528 \u7684\u65e5\u5fd7\u8bb0\u5f55\u7684LSN\u7f16\u53f7 \u6bcf\u5f53\u4e00\u4e2a\u66f4\u65b0\u7684\u64cd\u4f5c\u5728\u67d0\u4e00\u9875\u53d1\u751f\u7684\u65f6\u5019\uff0cPage LSN\u5c31\u53d8\u6210\u5bf9\u5e94\u7684Page LSN \u5728\u6062\u590d\u7684\u64a4\u9500\u9636\u6bb5\uff0cLSN\u503c\u4e0d\u8d85\u8fc7PageLSN\u7684\u65e5\u5fd7\u8bb0\u5f55\u5c06 \u4e0d\u4f1a\u5728\u8be5\u9875\u4e0a\u6267\u884c \uff0c\u56e0\u4e3a\u5176\u52a8\u4f5c\u5df2\u7ecf\u5728\u8be5\u9875\u4e0a\u4e86 \u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7684redo log record \u65e5\u5fd7\u8bb0\u5f55 \u6bcf\u4e00\u6761\u65e5\u5fd7\u8bb0\u5f55\u5305\u542b\u81ea\u5df1\u7684LSN\u548c \u540c\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u524d\u4e00\u6b65\u64cd\u4f5c \u7684LSN\u2014\u2014PreLSN CLR\uff1a\u5728\u6062\u590d\u671f\u95f4\u4e0d\u9700\u8981undo\uff0c\u662fredo-only\u7684\u65e5\u5fd7\u8bb0\u5f55 \u6709\u4e00\u4e2aUndoNextLSN\u533a\u57df\u7528\u4e8e\u8bb0\u5f55\u4e0b\u4e00\u4e2a(\u66f4\u65e9,\u5f80\u524d\u641c\u7d22)\u7684\u9700\u8981undo\u7684\u8bb0\u5f55 \u5728\u8fd9\u4e4b\u95f4\u7684\u8bb0\u5f55\u5e94\u8be5\u65e9\u5c31\u5df2\u7ecfundo\u4e86 Dirty Page Table \u810f\u9875\u8868 \u5b58\u50a8\u5728\u7f13\u51b2\u533a\u7684\uff0c\u8bb0\u5f55\u5df2\u7ecf\u88ab\u66f4\u65b0\u8fc7\u7684page\u7684\u8868 \u5305\u542b\u4ee5\u4e0b\u5185\u5bb9 \u6bcf\u4e2a\u9875\u7684PageLSN \u6bcf\u4e2a\u9875\u7684RecLSN\uff0c\u8868\u793a\u8fd9\u4e00\u9875\u7684\u65e5\u5fd7\u8bb0\u5f55\u4e2d\uff0cLSN\u5728\u8fd9\u4e4b\u524d\u7684\u8bb0\u5f55\u5df2\u7ecf \u90fd\u88ab\u5199\u5165\u78c1\u76d8\u4e2d \u4e86 \u5f53page\u88ab\u63d2\u5165\u810f\u9875\u8868\u7684\u65f6\u5019\uff0c \u521d\u59cb\u5316\u4e3a\u5f53\u524d\u7684PageLSN \u8bb0\u5f55\u5728checkpoint\u4e2d\uff0c\u7528\u4e8e\u51cf\u5c11redo\u7684\u6b21\u6570 \u53ea\u8981\u9875\u88ab\u5199\u5165\u78c1\u76d8\uff0c\u5c31\u4ece\u810f\u9875\u8868\u4e2d\u79fb\u9664\u8be5\u9875 checkpoint\u5904\u7684\u65e5\u5fd7\u8bb0\u5f55 \u5305\u542b\uff1a\u810f\u9875\u8868\u548c\u5f53\u524d\u6d3b\u8dc3\u7684\u6240\u6709\u4e8b\u52a1 \u5bf9\u6bcf\u4e00\u4e2a\u6d3b\u8dc3\u7684\u4e8b\u52a1\uff0c\u8bb0\u5f55\u4e86LastLSN\uff0c\u5373\u8fd9\u4e2a\u4e8b\u52a1\u5728\u65e5\u5fd7\u4e2d\u5199\u4e0b\u7684 \u6700\u540e\u4e00\u6761\u8bb0\u5f55 \u5728checkpoint\u7684\u65f6\u95f4\u70b9\uff0c\u810f\u9875\u7684\u4fe1\u606f\u4e0d\u4f1a\u5199\u5165\u78c1\u76d8 ARIES\u7b97\u6cd5\u7684\u6062\u590d\u64cd\u4f5c \u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a\u5206\u6790\u9636\u6bb5\uff0credo\u9636\u6bb5\u548cundo\u9636\u6bb5 RedoLSN \u8bb0\u5f55\u4e86\u4ece\u54ea\u4e00\u6761\u5f00\u59cb\u9700\u8981redo \u5206\u6790\u9636\u6bb5\uff1a\u9700\u8981\u51b3\u5b9a\u54ea\u4e9b\u4e8b\u52a1undo\uff0c\u54ea\u4e9b\u9875\u662f\u810f\u9875 \u4ece \u6700\u540e\u4e00\u6761\u5b8c\u6574\u7684checkpoint\u65e5\u5fd7\u8bb0\u5f55 \u5f00\u59cb \u8bfb\u53d6\u810f\u9875\u8868\u7684\u4fe1\u606f \u8bbe\u7f6eRedoLSN = min RecLSN(\u810f\u9875\u8868\u4e2d\u7684)\uff0c\u5982\u679c\u810f\u9875\u8868\u662f\u7a7a\u7684\u5c31\u8bbe\u7f6e\u4e3acheckpoint\u7684LSN \u8bbe\u7f6eundo-list\uff1acheckpoint\u4e2d\u8bb0\u5f55\u7684\u4e8b\u52a1 \u8bfb\u53d6undo-list\u4e2d\u6bcf\u4e00\u4e2a\u4e8b\u52a1\u7684\u6700\u540e\u4e00\u6761\u8bb0\u5f55\u7684LSN \u4ececheckpoint\u5f00\u59cb\u6b63\u5411\u626b\u63cf \u5982\u679c\u53d1\u73b0\u4e86\u4e0d\u5728undo-list\u4e2d\u7684\u8bb0\u5f55\u5c31\u5199\u5165undo-list \u5f53\u53d1\u73b0\u4e00\u6761 \u66f4\u65b0\u8bb0\u5f55 \u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u4e00\u9875 \u4e0d\u5728\u810f\u9875\u8868 \u4e2d\uff0c\u7528\u8be5\u8bb0\u5f55\u7684LSN\u4f5c\u4e3aRecLSN\u5199\u5165\u810f\u9875\u8868\u4e2d \u5982\u679c\u53d1\u73b0\u4e86\u6807\u5fd7\u4e8b\u52a1 \u7ed3\u675f \u7684\u65e5\u5fd7\u8bb0\u5f55(commit, abort) \u5c31\u4eceundo-list\u4e2d \u79fb\u9664 \u8fd9\u4e2a\u4e8b\u52a1 \u641c\u7d22\u76f4\u5230undo-list\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4e8b\u52a1\u90fd\u5230\u4e86\u6700\u540e\u4e00\u6761 \u5206\u6790\u7ed3\u675f\u4e4b\u540e RedoLSN\u51b3\u5b9a\u4e86\u4ece\u54ea\u91cc\u5f00\u59cbredo \u6240\u6709undo-list\u4e2d\u7684\u4e8b\u52a1\u90fd\u9700\u8981\u56de\u6eda Redo\u9636\u6bb5 \u4eceRedoLSN\u5f00\u59cb \u6b63\u5411\u626b\u63cf \uff0c\u5f53\u53d1\u73b0\u66f4\u65b0\u8bb0\u5f55\u7684\u65f6\u5019 \u5982\u679c\u8fd9\u4e00\u9875\u4e0d\u5728\u810f\u9875\u8868\u4e2d\u3002\u6216\u8005\u8fd9\u4e00\u6761\u8bb0\u5f55\u7684LSN\u5c0f\u4e8e\u9875\u9762\u7684RecLSN\u5c31\u5ffd\u7565\u8fd9\u4e00\u6761 \u5426\u5219\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u8fd9\u4e00\u9875\uff0c\u5982\u679c\u78c1\u76d8\u4e2d\u5f97\u5230\u7684\u8fd9\u4e00\u9875\u7684PageLSN\u6bd4\u8fd9\u4e00\u6761\u8981\u5c0f\uff0c\u5c31redo\uff0c\u5426\u5219\u5c31\u5ffd\u7565\u8fd9\u4e00\u6761\u8bb0\u5f55 Undo\u9636\u6bb5 \u4ece\u65e5\u5fd7\u672b\u5c3e\u5148\u524d\u5411\u524d\u641c\u7d22\uff0cundo\u6240\u6709undo-list\u4e2d\u6709\u7684\u4e8b\u52a1 \u7b26\u5408\u5982\u4e0b\u6761\u4ef6\u7684\u8bb0\u5f55\u53ef\u4ee5 \u8df3\u8fc7 \u7528\u5206\u6790\u9636\u6bb5\u7684\u6700\u540e\u4e00\u4e2aLSN\u6765\u627e\u5230\u6bcf\u4e2a\u65e5\u5fd7\u6700\u540e\u7684\u8bb0\u5f55 \u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u6700\u5927\u7684LSN\u5bf9\u5e94\u7684\u4e8b\u52a1undo \u5728undo\u4e00\u6761\u8bb0\u5f55\u4e4b\u540e \u5bf9\u4e8e\u666e\u901a\u7684\u8bb0\u5f55\uff0c\u5c06NextLSN\u8bbe\u7f6e\u4e3aPrevLSN \u5bf9\u4e8eCLR\u8bb0\u5f55\uff0c\u5c06NextLSN\u8bbe\u7f6e\u4e3aUndoNextLSN \u5982\u4f55undo\uff1a\u5f53\u4e00\u6761\u8bb0\u5f55undo\u7684\u65f6\u5019 \u751f\u6210\u4e00\u4e2a\u5305\u542b\u6267\u884c\u64cd\u4f5c\u7684CLR \u8bbe\u7f6eCLR\u7684UndoNextLSN \u4e3a\u66f4\u65b0\u8bb0\u5f55\u7684LSN Aries\u7b97\u6cd5\u7684\u5176\u4ed6\u7279\u6027 Recovery Independence \u6062\u590d\u7684\u72ec\u7acb\u6027 Savepoints \u5b58\u6863\u70b9 Fine-grained locking \u7ec6\u7c92\u5ea6\u7684\u9501 Recovery optimizations \u6062\u590d\u7684\u4f18\u5316 \u7b2c\u516d\u90e8\u5206 XML 6.1 XML\u7684\u5b9a\u4e49\u548c\u57fa\u672c\u7ed3\u6784 XML\uff1aExtensible Markup Language \u4e00\u79cd\u53ef\u6269\u5c55\u7684\u6807\u8bb0\u8bed\u8a00 \u533a\u522b\u4e8eHTML(Hyper-Text Markup Language) XML\u53ef\u4ee5\u6709\u4efb\u610f\u540d\u79f0\u7684\u6807\u8bb0\uff0cHTML\u7684\u6807\u8bb0\u540d\u662f\u6709\u9650\u7684 XML\u5df2\u7ecf\u6210\u4e3a\u4e00\u79cd\u4fe1\u606f\u4ea4\u4e92\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u9002\u5408\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u4ea4\u4e92 XML\u7684\u7ed3\u6784 Tag \u6807\u7b7e\uff0c\u8868\u660e\u4e00\u79cd\u6570\u636e\u7c7b\u578b Element \u88ab\u6807\u7b7e\u6240\u62ec\u8d77\u6765\u7684\u5185\u5bb9\uff0c\u6b63\u786e\u7684\u683c\u5f0f\u5e94\u8be5\u662f <tag>element</tag> \u6807\u7b7e\u5fc5\u987b\u8981\u6b63\u786e\u5d4c\u5957\uff0c\u53ef\u4ee5\u5d4c\u5957\u662fXML\u76f8\u6bd4\u4e8e\u5173\u7cfb\u4ee3\u6570\u7684\u4f18\u52bf XML\u6587\u6863\u9700\u8981\u6709\u4e00\u4e2aroot \u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u6709\u591a\u4e2a \u5c5e\u6027 \uff0c\u4f46\u662f \u5c5e\u6027\u540d\u4e0d\u80fd\u91cd\u590d \uff0c\u7528 attr_name=value \u7684\u5f62\u5f0f\u5185\u5d4c\u5728\u8d77\u59cbtag\u4e0a\u9762 \u547d\u540d\u7a7a\u95f4namespaces \u540c\u4e00\u4e2a\u6807\u7b7e\u540d\u5728\u4e0d\u540c\u7684\u5730\u65b9\u53ef\u80fd\u4ee3\u8868\u4e0d\u540c\u7684\u610f\u601d\uff0c\u9700\u8981\u5728tag\u524d\u9762\u52a0\u4e0a namespace: \u6807\u8bc6\u8fd9\u4e2atag\u662f\u88ab\u8c01\u5b9a\u4e49\u7684 \u6ca1\u6709\u5b50\u5143\u7d20\u7684\u5143\u7d20\u53ef\u4ee5\u53ea\u7528\u4e00\u4e2atag\u6807\u8bc6\uff1a <tag /> \u5f53tag\u8868\u793a\u5b57\u7b26\u4e32\u65f6\u53ef\u4ee5\u7528 CDATA[ ] \u62ec\u8d77\u6765\u8868\u793a 6.2 XML Document Schema Document Type Definition (DTD) \u4f7f\u7528\u8f83\u4e3a\u5e7f\u6cdb\uff0c\u5b9a\u4e49\u4e86XML\u6587\u6863\u7ed3\u6784\u7684\u4e00\u79cd\u6807\u51c6 \u4e0d\u9650\u5236\u6570\u636e\u7684\u79cd\u7c7b \uff0c\u6807\u7b7e\u4e0d\u9884\u5148\u89c4\u5b9a\u6709\u591a\u5c11\u79cd\uff0c\u53ef\u4ee5\u81ea\u7531\u5b9a\u4e49\uff0c\u4f46\u662f\u9650\u5236XML\u4e2d\u6570\u636e\u7684\u7ed3\u6784 \u6709\u4ec0\u4e48\u5143\u7d20\u53ef\u4ee5\u51fa\u73b0 \u5143\u7d20\u5fc5\u987b\u6709\u54ea\u4e9b\u5c5e\u6027 \u6bcf\u4e2a\u5143\u7d20\u4e2d\u53ef\u4ee5\u51fa\u73b0\u54ea\u4e9b\u5b50\u5143\u7d20 \u57fa\u672c\u7684\u8bed\u6cd5\u7ed3\u6784 xml-dtd <!ELEMENT element (subelements-specification) > <!ATTLIST element (attributes) > \u5b50\u5143\u7d20\u53ef\u4ee5\u58f0\u660e\u4e3a \u5b50\u5143\u7d20\u7684\u540d\u79f0 #PCDATA(parsed character data) \u88ab\u89e3\u6790\u7684\u5b57\u7b26\u6570\u636e EMPTY \u6216\u8005 ANY \u8868\u793a\u6ca1\u6709\u5b50\u5143\u7d20\u6216\u8005\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u5b50\u5143\u7d20 \u5b50\u5143\u7d20\u7684\u58f0\u660e\u53ef\u4ee5\u4f7f\u7528 \u6b63\u5219\u8868\u8fbe\u5f0f \u201c | \u201d \u8868\u793a\u53ef\u4ee5\u4e92\u76f8\u66ff\u4ee3 \u201c + \u201d \u81f3\u5c11\u51fa\u73b0\u4e00\u4e2a \u201c * \u201d \u51fa\u73b00\u4e2a\u6216\u591a\u4e2a \u201c \uff1f\u201d \u4e0d\u51fa\u73b0\u6216\u8005\u51fa\u73b0\u4e00\u4e2a \u6bd4\u5982\u8bf4\u4e0b\u9762\u8fd9\u4e00\u6bb5 xml-dtd <!DOCTYPE note [ <!ELEMENT note (to,from,heading,body)> <!ELEMENT to (#PCDATA)> <!ELEMENT from (#PCDATA)> <!ELEMENT heading (#PCDATA)> <!ELEMENT body (#PCDATA)> ]> \u8fd9\u4e00\u6bb5DTD\u4e2d\uff0c\u7b2c\u4e00\u884c\u8868\u793a\u6587\u6863\u7c7b\u578b\u53ebnote\uff0c\u91cc\u9762\u6709\u82e5\u5e72\u4e2a\u5143\u7d20\uff0c\u5176\u4e2dnote\u5143\u7d20\u6709\u56db\u4e2a\u5b50\u5143\u7d20\uff0c\u90fd\u662f\u88ab\u89e3\u6790\u7684\u5b57\u7b26\u6570\u636e Attribute\u58f0\u660e\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5c5e\u6027\uff0c\u58f0\u660e \u5c5e\u6027\u540dname \u5c5e\u6027\u79cd\u7c7btype CDATA ID or IDREF(id\u7684\u7d22\u5f15) or IDREFS(\u591a\u91cdid\u7d22\u5f15) \u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u4e00\u4e2a\u5c5e\u6027\u4f5c\u4e3aID\uff0c\u5e76\u4e14\u5fc5\u987b\u662f\u4e0d\u540c\u7684\u503c IDREF\u7c7b\u578b\u7684\u5c5e\u6027\u5fc5\u987b\u5305\u542bID\u7684\u503c \u5176\u4ed6\u5185\u5bb9 #REQUIED \u5c5e\u6027\u662f\u5fc5\u987b\u7684 \u662f\u5426\u6709\u9ed8\u8ba4\u503c #IMPLIED \u5c5e\u6027\u4e0d\u662f\u5fc5\u987b\u7684 xml-dtd <!ATTLIST course course_id CDATA #REQUIRED>, \u6216\u8005 <!ATTLIST course course_id ID #REQUIRED dept_name IDREF #REQUIRED instructors IDREFS #IMPLIED > DTD\u7684\u4e00\u4e9b\u9650\u5236 \u5143\u7d20\u548c\u5c5e\u6027\u6ca1\u6709\u7c7b\u578b IDs\u548cIDREFs\u662funtyped\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684ID\u5c5e\u6027\u503c\u5fc5\u987b\u662f\u552f\u4e00\u7684 XML Schema\u2014\u2014\u4e0d\u5e38\u7528 \u89e3\u51b3\u4e86DTD\u7684\u7f3a\u70b9\uff0c\u66f4\u590d\u6742\uff0c\u652f\u6301 \u503c\u7684\u7c7b\u578b\uff0c\u5305\u62ecinteger\uff0cstring\u7b49 \u7528\u6237\u5b9a\u4e49\u7c7b\u578b\uff0c\u66f4\u590d\u6742\u7684\u7c7b\u578b \u66f4\u591a\u529f\u80fd\u5305\u62ec unique\u548cforeign key\u7684\u9650\u5236 \u4f46\u6bd4DTD\u6a21\u5f0f\u66f4\u52a0\u5197\u4f59 \u8bed\u6cd5\u89c4\u5219 \u53ef\u4ee5\u4f7f\u7528xs\u7684namespace \u5c5e\u6027\u88abxs:attribute\u7684tag\u6240\u5b9a\u4e49 \u952e\u7ea6\u675f\uff0c \u5916\u952e\u7ea6\u675f\uff1a\u901a\u8fc7xpath\u8fdb\u884c\u67e5\u8be2 6.3 XML \u67e5\u8be2 XML \u6570\u636e\u7684\u67e5\u8be2\u548c\u4f20\u8f93 \u53ef\u4ee5\u7528\u4e8eXML\u67e5\u8be2\u548c\u4f20\u8f93\u7684\u8bed\u8a00 XPath XSLT XQuery \u67e5\u8be2\u548c\u4ea4\u6362\u57fa\u4e8eXML\u7684 \u6811\u6a21\u578b \u6811\u6a21\u578b\u4e2d\u7684\u8282\u70b9\u662fXML\u6587\u6863\u4e2d\u7684\u5143\u7d20\uff0c\u8282\u70b9\u5206\u4e3a\u5143\u7d20\u3001\u5c5e\u6027\u3001\u6587\u672c\u3001\u547d\u540d\u7a7a\u95f4\u3001\u5904\u7406\u6307\u4ee4\u3001\u6ce8\u91ca\u4ee5\u53ca\u6587\u6863\uff08\u6839\uff09\u8282\u70b9\uff0c\u5143\u7d20\u4e0b\u7684\u8282\u70b9\u662f\u5c5e\u6027\u6216\u8005\u5b50\u5143\u7d20\uff0c\u4e0a\u9762\u7684\u5219\u662f\u7236\u5143\u7d20 \u6839\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u5c31\u662fXML\u6587\u6863\u7684\u6839\u5143\u7d20 XPath \u7528\u7c7b\u4f3c\u4e8e\u6587\u4ef6\u8def\u5f84\u7684\u8868\u8fbe\u5f0f\u6765\u8fdb\u884c\u67e5\u8be2\uff0c\u7528\u659c\u6760\u8fdb\u884c\u8fde\u63a5 \u7b2c\u4e00\u4e2a\u659c\u6760\u7684\u610f\u601d\u8868\u793a\u6839\u76ee\u5f55\uff0c\u8def\u5f84\u4e2d \u53ef\u4ee5\u6dfb\u52a0\u67e5\u8be2\u6761\u4ef6 \uff0c\u9700\u8981\u7528 [] \u62ec\u8d77\u6765 \u6bd4\u5982 //title[@lang] \u53ef\u4ee5\u9009\u53d6\u6240\u6709\u62e5\u6709\u5c5e\u6027\u540dlang\u7684\u5143\u7d20title \u6bd4\u5982 /bookstore/book[1] \u8868\u793a\u9009\u53d6bookstore\u4e0b\u9762\u7b2c\u4e00\u4e2a\u67e5\u8be2\u5230\u7684book\u5143\u7d20 \u8bbf\u95ee \u5c5e\u6027 \u9700\u8981\u4f7f\u7528 @ \u6807\u8bb0(\u6ce8\u610f\u6807\u7b7e\u7684\u5c5e\u6027\u548c\u503c\u7684\u533a\u522b) \u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u6765\u67e5\u8be2\uff1a *\u53ef\u4ee5\u8868\u793a\u6240\u6709\u7684\u5143\u7d20\u8282\u70b9\uff0c\u6bd4\u5982 //* \u53ef\u4ee5\u83b7\u53d6\u6587\u6863\u4e2d\u7684\u6240\u6709\u5143\u7d20 @*\u53ef\u4ee5\u8868\u793a\u6240\u6709\u7684\u5c5e\u6027\u8282\u70b9 \u53ef\u4ee5\u7528 | \u6765\u8fde\u63a5\u4e24\u4e2a\u67e5\u8be2 // \u53ef\u4ee5\u8df3\u8fc7\u591a\u5c42node\u76f4\u5954\u8981\u627e\u7684\u76ee\u6807 \u67e5\u8be2\u8def\u5f84\u4e0d\u4ec5\u80fd\u5f80\u4e0b\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u5f80\u4e0a\u67e5\u8be2\uff0c\u65e2\u53ef\u4ee5\u641c\u7d22\u5b50\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u641c\u7d22\u7236\u8282\u70b9 XPath\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53ef\u4ee5\u4f7f\u7528\u7684\u51fd\u6570 count\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u67d0\u4e2a\u8def\u5f84\u4e0b\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u6bd4\u5982 /university-2/instructor[count(./teaches/course)> 2] \u53ef\u4ee5\u8868\u793a\u83b7\u53d6\u6240\u6709\u4e0a\u8bfe\u6570\u76ee\u8d85\u8fc72\u7684\u8001\u5e08 \u5e03\u5c14\u51fd\u6570and\u548cor\u548cnot() \u53ef\u4ee5\u4f7f\u7528 IDREFs\u53ef\u4ee5\u4f7f\u7528id()\u5f15\u7528 \u4f7f\u7528doc\u6765\u8fd4\u56de\u6587\u6863\u7684\u540d\u79f0 XQuery\uff1aXML\u6587\u6863\u7684\u4fe1\u606f\u67e5\u8be2 XQuery\u4f7f\u7528\u7684\u8bed\u6cd5\u662f for xxx let xxx where xxx order by xxx return for\u76f8\u5f53\u4e8eSQL\u4e2d\u7684 select \uff0clet\u5141\u8bb8\u4f7f\u7528 \u4e34\u65f6\u53d8\u91cf \u4e00\u4e2a\u7b80\u5355\u7684\u6848\u4f8b\uff0c\u5bf9 <course_id>..</course_id> \u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u67e5\u8be2 ```xquery for $x in /university/course let %courseid:=$x/@course_id where $x/credits > 3 return {$courseid} // \u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u7684\u5316\u7b80 for $x in /university-3/course[credits > 3] return { $x/@course_id } ``` join\u64cd\u4f5c\uff1a\u5728where\u540e\u9762\u7528\u903b\u8f91\u5173\u7cfb\u8fde\u63a5\u82e5\u5e72\u4e2a\u6761\u4ef6 \u5d4c\u5957\u67e5\u8be2\uff1a\u7528\u6cd5\u662f\u5c06\u4e00\u4e2aXQeury\u8bed\u53e5\u5f53\u4f5creturn\u7684\u7ed3\u679c\u7528tags\u5305\u8d77\u6765 \u805a\u5408\u64cd\u4f5c \u53ef\u4ee5\u4f7f\u7528sum\u7b49\u805a\u5408\u51fd\u6570\uff0c\u6bd4\u5982 fu:sum() \u4f7f\u7528order by\u8fdb\u884c\u6392\u5e8f \u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6765\u8fdb\u884c\u67d0\u4e9b\u64cd\u4f5c","title":"\u6570\u636e\u5e93\u7cfb\u7edf\u590d\u4e60\u6574\u7406"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#_1","text":"","title":"\u6570\u636e\u5e93\u7cfb\u7edf\u590d\u4e60\u6574\u7406"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#randomstar","text":"\u6570\u636e\u5e93\u7cfb\u7edf\u590d\u4e60\u6574\u7406 RandomStar \u7b2c\u4e00\u90e8\u5206\uff1a\u57fa\u672c\u6982\u5ff5\u548c\u5173\u7cfb\u4ee3\u6570 1.0 \u8bfe\u7a0b\u7eea\u8bba 1.1 \u5173\u7cfb\u578b\u6570\u636e\u5e93 Relational Database \u5173\u7cfb\u578b\u6570\u636e\u7684\u4e00\u4e9b\u57fa\u672c\u7279\u70b9 1.2 \u57fa\u672c\u6982\u5ff5\u548c\u7ed3\u6784 1.3 Keys\u952e 1.4 Relational algebra\u5173\u7cfb\u4ee3\u6570 \u7b2c\u4e8c\u90e8\u5206\uff1aSQL 2.1 SQL\u57fa\u672c\u6982\u5ff5 2.2 SQL \u521b\u5efa\uff0c\u66f4\u65b0\uff0c\u5220\u9664 2.3 SQL\u67e5\u8be2 2.4 SQL\u63d2\u5165\uff0c\u5220\u9664\uff0c\u66f4\u65b0 2.5 SQL view \u89c6\u56fe, index \u7d22\u5f15 2.6 Integrity \u5b8c\u6574\u6027\u63a7\u5236 2.7 Authorization \u7b2c\u4e09\u90e8\u5206\uff1aER\u6a21\u578b\u548cNormal Form(\u8303\u5f0f) 3.1 E-R\u6a21\u578b 3.2 E-R Diagram 3.3 Normal Form \u8303\u5f0f 3.3.1 \u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u76ee\u6807 3.3.2 First Normal Form \u7b2c\u4e00\u8303\u5f0f 3.3.3 Functional dependency \u51fd\u6570\u4f9d\u8d56 3.3.4 \u95ed\u5305 3.3.5 BCNF/3NF 3.3.6 \u6700\u5c0f\u8986\u76d6 \u7b2c\u56db\u90e8\u5206: \u6570\u636e\u5e93\u8bbe\u8ba1\u7406\u8bba 4.1 \u5b58\u50a8\u548c\u6587\u4ef6\u7ed3\u6784 4.1.1 \u78c1\u76d8 Magnetic Disks 4.1.2 File organization \u6587\u4ef6\u7ec4\u7ec7 4.2 B+\u6811\u7d22\u5f15 4.2.1 \u7d22\u5f15 4.2.2 B+\u6811\u7d22\u5f15 4.2.3 \u6587\u4ef6\u7d22\u5f15 4.2.4 \u603b\u7ed3\uff1a\u5b58\u50a8\u7ed3\u6784\u548cB+\u6811\u7684\u8ba1\u7b97 4.3 \u67e5\u8be2\u5904\u7406 QueryProcess 4.3.1 select\u7684cost\u4f30\u8ba1 4.3.2 sort\u548cjoin\u7684cost\u4f30\u8ba1 4.4 \u67e5\u8be2\u4f18\u5316 Query Optimization 4.4.1 \u7b49\u4ef7\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f 4.4.2 cost\u7684\u4f30\u8ba1 \u7b2c\u4e94\u90e8\u5206\uff1a\u4e8b\u52a1\u5904\u7406 5.1 \u4e8b\u52a1\u548c\u5e76\u53d1\u63a7\u5236 5.1.1 \u57fa\u672c\u7684\u6982\u5ff5 5.1.2 \u4e8b\u52a1\u7684\u5e76\u53d1\u6267\u884c 5.1.3 Concurrency Control \u5e76\u53d1\u63a7\u5236 5.2 Recovery System \u4e8b\u52a1\u6062\u590d 5.2.1 log-based Recovery\u57fa\u4e8e\u65e5\u5fd7\u7684\u6062\u590d 5.2.2 ARIES Recovery Algorithm\u2014\u2014Aries\u6062\u590d\u7b97\u6cd5 \u7b2c\u516d\u90e8\u5206 XML 6.1 XML\u7684\u5b9a\u4e49\u548c\u57fa\u672c\u7ed3\u6784 6.2 XML Document Schema 6.3 XML \u67e5\u8be2","title":"RandomStar"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#_2","text":"","title":"\u7b2c\u4e00\u90e8\u5206\uff1a\u57fa\u672c\u6982\u5ff5\u548c\u5173\u7cfb\u4ee3\u6570"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#10","text":"Nothing important\uff0c\u4e3b\u8981\u662f\u4ecb\u7ecd\u8bfe\u7a0b\u7684\u8bc4\u5206\u6807\u51c6\u548c\u778e\u5439\u4e00\u901a","title":"1.0 \u8bfe\u7a0b\u7eea\u8bba"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#11-relational-database","text":"","title":"1.1 \u5173\u7cfb\u578b\u6570\u636e\u5e93 Relational Database"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#_3","text":"\u5173\u7cfb\u578b\u6570\u636e\u5e93\u662f\u4e00\u7cfb\u5217 \u8868\u7684\u96c6\u5408 \u4e00\u5f20\u8868\u662f\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d \u8868\u4e2d\u7684\u4e00\u884c\u8868\u793a\u4e00\u6761\u5173\u7cfb","title":"\u5173\u7cfb\u578b\u6570\u636e\u7684\u4e00\u4e9b\u57fa\u672c\u7279\u70b9"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#12","text":"a relation r is a subset of $D_{1}\\times D_{2}\\times \u2026\\times D_{n}$\uff0c\u4e00\u6761relation\u5c31\u662f\u5176\u4e2d\u7684\u4e00\u4e2an\u5143\u7684 \u5143\u7ec4(tuple) attribute\u5c5e\u6027\uff0c\u6307\u8868\u4e2d\u7684 \u5217\u540d attribution type \u5c5e\u6027\u7684\u7c7b\u578b attribute value \u5c5e\u6027\u503c\uff0c\u67d0\u4e2a\u5c5e\u6027\u5728\u67d0\u6761relation\u4e2d\u7684\u503c \u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u5c5e\u6027\u503c\u5fc5\u987b\u8981\u662fatomic\u7684\uff0c\u5373\u4e0d\u53ef\u5206\u5272\u7684 domain\uff1a\u5c5e\u6027\u503c\u7684\u503c\u57df\uff0cnull\u662f\u6240\u6709\u5c5e\u6027\u7684domain\u4e2d\u90fd\u6709\u7684\u5143\u7d20\uff0c\u4f46\u662fnull\u503c\u4f1a\u9020\u6210\u4e00\u4e9b\u95ee\u9898 Relation Schema \u5173\u7cfb\u6a21\u5f0f $R=(A_{1},A_{2},\u2026,A_{n})$ \u5176\u4e2d$A_i$\u662f\u4e00\u7cfb\u5217\u5c5e\u6027\uff0c\u5173\u7cfb\u6a21\u5f0f\u662f\u5bf9\u5173\u7cfb\u7684\u4e00\u79cd \u62bd\u8c61 r(R)\u8868\u793a\u5173\u7cfb\u6a21\u5f0fR\u4e2d\u7684\u4e00\u79cd\u5173\u7cfb\uff0ctable\u8868\u793a\u8fd9\u4e2a\u5173\u7cfb\u5f53\u524d\u7684\u503c(\u5173\u7cfb\u5b9e\u4f8b) \u6bcf\u4e2a\u5173\u7cfbr\u4e2d\u7684\u5143\u7d20\u662ftable\u4e2d\u7684\u4e00\u884c \u4e0d\u8fc7\u7ecf\u5e38\u7528\u76f8\u540c\u7684\u540d\u5b57\u547d\u540d\u5173\u7cfb\u6a21\u5f0f\u548c\u5173\u7cfb \u5173\u7cfb\u662f \u65e0\u5e8f \u7684\uff0c\u5173\u7cfb\u4e2d\u884c\u548c\u5217\u7684\u987a\u5e8f\u662firrelevant\u7684","title":"1.2  \u57fa\u672c\u6982\u5ff5\u548c\u7ed3\u6784"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#13-keys","text":"super key\u8d85\u952e\uff1a\u80fd\u591f \u552f\u4e00\u6807\u8bc6 \u5143\u7ec4\u7684\u5c5e\u6027\u96c6\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e00\u6761\u5173\u7cfb\u800c\u8a00\u8d85\u952e\u7684\u503c\u662f\u552f\u4e00\u7684 \u8d85\u952e\u53ef\u4ee5\u662f\u591a\u4e2a\u5c5e\u6027\u7684\u7ec4\u5408 \u5982\u679cA\u662f\u5173\u7cfbR\u7684\u4e00\u4e2a\u8d85\u952e\uff0c\u90a3\u4e48(A, B)\u4e5f\u662f\u5173\u7cfbR\u7684\u4e00\u4e2a\u8d85\u952e \u8d85\u952e\u7684\u201c\u552f\u4e00\u6807\u8bc6\u201d\u5404\u4e2a\u5143\u7ec4\u662f\u53ef\u4ee5\u6709\u5197\u4f59\u4fe1\u606f\u7684 candidate key\u5019\u9009\u952e\uff1a \u4e0d\u542b\u591a\u4f59\u5c5e\u6027 \u7684\u8d85\u952e \u5982\u679cK\u662fR\u7684\u4e00\u4e2a\u8d85\u952e\uff0c\u800c\u4efb\u4f55K\u7684\u771f\u5b50\u96c6\u4e0d\u662fR\u7684\u4e00\u4e2a\u8d85\u952e\uff0c\u90a3\u4e48K\u5c31\u662fR\u7684\u4e00\u4e2a\u5019\u9009\u952e primary key\u4e3b\u952e\uff1a \u6570\u636e\u5e93\u7ba1\u7406\u5458 \u6307\u5b9a \u7684\u5143\u7ec4\u6807\u8bc6\u7684\u4e00\u4e2a\u5019\u9009\u952e\uff0c\u4e0d\u80fd\u662fnull\u503c foreign key\u5916\u952e\uff1a\u7528\u6765\u63cf\u8ff0\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u6709\u7a7a\u503c \u5982\u679c\u5173\u7cfb\u6a21\u5f0fR1\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u662f\u53e6\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0fR2\u4e2d\u7684\u4e00\u4e2a \u4e3b\u952e \uff0c\u90a3\u4e48\u8fd9\u4e2a\u5c5e\u6027\u5c31\u662fR1\u7684\u4e00\u4e2a\u5916\u952e a foreign key from r1 referencing r2","title":"1.3 Keys\u952e"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#14-relational-algebra","text":"Select \u9009\u62e9\uff1a$\\sigma_{p}(r)={t|t\\in r \\and p(t) }$ \u7b5b\u9009\u51fa\u6240\u6709\u6ee1\u8db3\u6761\u4ef6p(t)\u7684\u5143\u7d20t Project\u6295\u5f71\uff1a$\\prod_{A_1,A_2,\\cdots,A_k}(r)$ \u8fd0\u7b97\u7684\u7ed3\u679c\u662f\u539f\u6765\u7684\u5173\u7cfbr\u4e2d\u5404\u5217\u53ea\u4fdd\u7559\u5c5e\u6027$A_1,A_2,\\dots,A_k$ \u540e\u7684\u5173\u7cfb \u4f1a \u81ea\u52a8\u53bb\u6389\u91cd\u590d \u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u53ef\u80fd\u6295\u5f71\u7684\u65f6\u5019\u820d\u5f03\u7684\u5c5e\u6027\u662f\u53ef\u4ee5\u6807\u8bc6\u5173\u7cfb\u552f\u4e00\u6027\u7684\u5c5e\u6027 Union \u5e76\u64cd\u4f5c\uff1a$r \\cup s={t|t\\in r \\or t \\in s}$ \u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u4e2a\u6570\u5fc5\u987b\u76f8\u540c \u5404\u5c5e\u6027\u7684domain\u5fc5\u987b\u662f\u53ef\u4ee5\u6bd4\u8f83\u5927\u5c0f\u7684 Set difference \u5dee\u64cd\u4f5c\uff1a$r-s={t| t\\in r \\and t \\notin s}$ Cartesian-Product\u7b1b\u5361\u5c14\u79ef\uff1a$r\\times s={tq| t\\in r\\and q\\in s}$ \u4e24\u4e2a\u5173\u7cfb\u5fc5\u987b\u662f\u4e0d\u76f8\u4ea4\u7684\uff0c\u5982\u679c\u76f8\u4ea4\u5219\u9700\u8981\u5bf9\u7ed3\u679c\u4e2d\u91cd\u590d\u7684\u5c5e\u6027\u540d\u8fdb\u884c\u91cd\u547d\u540d \u7b1b\u5361\u513f\u79ef\u8fd0\u7b97\u7684\u7ed3\u679c\u5173\u7cfb\u4e2d\u5143\u7ec4\u7684\u4e2a\u6570\u5e94\u8be5\u662frs\u7684\u4e2a\u6570\u4e4b\u4e58\u79ef Renaming\u91cd\u547d\u540d\uff1a$\\rho_{X}(E)$ \u5c06E\u91cd\u547d\u540d\u4e3ax, \u8ba9\u4e00\u4e2a\u5173\u7cfb\u62e5\u6709\u591a\u4e2a\u522b\u540d\uff0c\u540c\u65f6X\u53ef\u4ee5\u5199\u4e3a$X(A_1,A_2,\\dots,A_n)$ \u8868\u793a\u5bf9\u5c5e\u6027\u4e5f\u8fdb\u884c\u91cd\u547d\u540d \u7c7b\u4f3c\u4e8eC++\u4e2d\u7684\u5f15\u7528 \u6269\u5c55\u8fd0\u7b97: \u53ef\u4ee5\u7528\u524d\u9762\u7684\u516d\u79cd\u57fa\u672c\u8fd0\u7b97\u5f97\u5230 Intersection \u4ea4\u8fd0\u7b97$r \\cap s={t|t\\in r \\and t \\in s}=r-(r-s)$ Natual-Join \u81ea\u7136\u8fde\u63a5\uff1a$r\\Join s$ \u4e24\u4e2a\u5173\u7cfb\u4e2d\u540c\u540d\u5c5e\u6027\u5728\u81ea\u7136\u8fde\u63a5\u7684\u65f6\u5019\u5f53\u4f5c \u540c\u4e00\u4e2a\u5c5e\u6027 \u6765\u5904\u7406 Theta join \u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u5408\u5e76\uff1a$r\\Join_{\\theta} s=\\sigma_{\\theta}(r\\Join s)$ Outer-Join\u5916\u90e8\u8fde\u63a5\uff0c\u5206\u4e3a\u5de6\u5916\u8fde\u63a5\uff0c\u53f3\u5916\u8fde\u63a5\uff0c\u5168\u5916\u8fde\u63a5 \u7528\u4e8e\u5e94\u5bf9\u4e00\u4e9b \u4fe1\u606f\u7f3a\u5931 \u7684\u60c5\u51b5(\u6709null\u503c) \u5de6\u5916\u8fde\u63a5$\\ltimes $ \u5de6\u8fb9\u7684\u8868\u53d6\u5168\u90e8\u503c\u6309\u7167\u5173\u7cfb\u548c\u53f3\u8fb9\u8fde\u63a5\uff0c\u53f3\u8fb9\u4e0d\u5b58\u5728\u65f6\u4e3a\u7a7a\u503c \u53f3\u5916\u8fde\u63a5$\\rtimes $ \u53f3\u8fb9\u7684\u8868\u53d6\u5168\u90e8\u503c\u6309\u7167\u5173\u7cfb\u548c\u53f3\u8fb9\u8fde\u63a5\uff0c\u4e0d\u5b58\u5728\u4e3a\u7a7a\u503c Full join\u5de6\u53f3\u5168\u4e0a\uff0c\u4e0d\u5b58\u5728\u5bf9\u5e94\u7684\u5c31\u5199\u6210\u7a7a\u503c Division\u9664\u6cd5\uff1a$r\\div s={t|t\\in\\prod_{R-S}(r)\\and \\forall u \\in s (tu\\in r)}$ \u5982\u679c$R=(A_1,A_2,\\dots,A_m,B_1,\\dots,B_n)\\and S=(B_1,\\dots,B_n)$ \u5219\u6709$R- S=(A_1,A_2,\\dots,A_m)$ Assignment\u58f0\u660e\u64cd\u4f5c\uff0c\u7c7b\u4f3c\u4e8e\u53d8\u91cf\u547d\u540d\u7528$\\leftarrow$ \u53ef\u4ee5\u628a\u4e00\u4e2a\u5173\u7cfb\u4ee3\u6570\u64cd\u4f5c\u8fdb\u884c\u547d\u540d Aggregation operations\u805a\u5408\u64cd\u4f5c \u57fa\u672c\u5f62\u5f0f\uff1a$ {G_1,G_2,\\dots,G_n}{\\cal {G}} {F_1(A_1),\\dots,F_n(A_n)}(E)$ G\u662f\u805a\u5408\u7684\u6807\u51c6\uff0c\u5bf9\u4e8e\u5173\u7cfb\u4e2d\u6240\u6709G\u503c\u76f8\u540c\u7684\u5143\u7d20\u8fdb\u884c\u805a\u5408\uff0cF( )\u662f\u805a\u5408\u7684\u8fd0\u7b97\u51fd\u6570 \u5e38\u89c1\u7684\u6709SUM/MAX/MIN/AVG/COUNT","title":"1.4 Relational algebra\u5173\u7cfb\u4ee3\u6570"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#sql","text":"","title":"\u7b2c\u4e8c\u90e8\u5206\uff1aSQL"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#21-sql","text":"SQL\uff1a\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 \uff0c\u5206\u4e3aDDL,DML,DCL\u51e0\u79cd\u7c7b\u578b\uff0c\u7528\u7684\u6bd4\u8f83\u591a\u7684\u6807\u51c6\u662fSQL-92 \u975e\u8fc7\u7a0b\u5f0f\u7684\u8bed\u8a00","title":"2.1 SQL\u57fa\u672c\u6982\u5ff5"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#22-sql","text":"SQL\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b char, varchar, int, numeric(p,d), null-value, date, time, timestamp \u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u90fd\u652f\u6301null\u4f5c\u4e3a\u5c5e\u6027\u503c\uff0c\u53ef\u4ee5\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u58f0\u660e\u4e00\u4e2a\u5c5e\u6027\u7684\u503cnot null \u521b\u5efa\u6570\u636e\u8868create table \u521b\u5efa\u8868\u7684\u8bed\u6cd5 sql create table table_name( variable_name1 type_name1, variable_name2 type_name2, (integrity-contraints) \u2026\u2026,) integrity-contraint \u5b8c\u6574\u6027\u7ea6\u675f\uff1a\u53ef\u4ee5 \u6307\u5b9aprimary key , foreign key references xxx, not null \u5220\u9664\u6570\u636e\u8868 drop table \u66f4\u65b0\u6570\u636e\u8868\u7684\u680f\u76ee alter table alter table R add A D \u6dfb\u52a0\u4e00\u6761\u65b0\u5c5e\u6027 \u5176\u4e2dA\u662f\u5c5e\u6027\u540d\uff0cD\u662fA\u7684domain alter table R drop A \u5220\u9664A\u5c5e\u6027","title":"2.2 SQL \u521b\u5efa\uff0c\u66f4\u65b0\uff0c\u5220\u9664"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#23-sql","text":"\u4e8b\u5b9e\u4e0a\u7684\u6700\u91cd\u8981SQL\u8bed\u53e5\uff0c\u8003\u8bd5\u8003\u7684\u4e00\u822c\u90fd\u662f\u67e5\u8be2\u8bed\u53e5 SQL\u67e5\u8be2\u7684\u57fa\u672c\u5f62\u5f0f\uff1aselect\u8bed\u53e5 sql select A1,A2,\u2026,An from r1,r2,\u2026,rn where P \u4e0a\u8ff0\u67e5\u8be2\u7b49\u4ef7\u4e8e$\\prod_{A_1,A_2,\\cdots,A_k}(\\sigma_{p}(r_1\\times r_2\\times \\dots\\times r_m))$ SQL\u67e5\u8be2\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5173\u7cfb select\u5b50\u53e5\u7684\u4e00\u4e9b \u7ec6\u8282 select * from xxx \u8868\u793a\u83b7\u53d6 \u6240\u6709\u5c5e\u6027 \uff0c\u4e8b\u5b9e\u4e0a\u6211\u6000\u7591*\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u53ef\u80fd\u6709\u7684\u6240\u6709\u5185\u5bb9\uff0c\u4ece\u540e\u9762\u7684\u5185\u5bb9\u6765\u770b\uff0cselect\u8bed\u53e5\u786e\u5b9e\u662f\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f SQL\u4e2d\u7684 \u4fdd\u7559\u5b57 \u5bf9\u4e8e \u5927\u5c0f\u5199\u4e0d\u654f\u611f \u53bb\u9664\u91cd\u590d\uff1a select distinct \uff0c\u9632\u6b62\u91cd\u590d\u4e22\u5931\u7684\u529e\u6cd5 select all select\u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u652f\u6301\u57fa\u672c\u7684 \u56db\u5219\u8fd0\u7b97 (\u52a0\u51cf\u4e58\u9664)\uff0c\u6bd4\u5982 SQL select ID, name, salary/2 from instructor; where\u5b50\u53e5\u4e2d\uff1a \u652f\u6301 and or not \u7b49\u903b\u8f91\u8fd0\u7b97 \u652f\u6301 between and \u6765\u67e5\u8be2\u8303\u56f4 from \u5b50\u53e5\uff1a \u91cd\u547d\u540d\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7 old_name as new_name \u8fdb\u884c\u91cd\u547d\u540d from \u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u8868\uff0c\u6b64\u65f6\u4f1a\u5148\u5c06\u8fd9\u4e9b\u8868\u8fdb\u884c\u7b1b\u5361\u513f\u79ef\u7684\u8fd0\u7b97\uff0c\u518d\u8fdb\u884cselect \u5143\u7ec4\u53d8\u91cf\uff1a\u53ef\u4ee5\u4ece\u591a\u4e2a\u8868\u4e2dselect\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u51e0\u4e2a\u4e0d\u540c\u5c5e\u6027\u503c\u7684\u5143\u7ec4 sql select instructor.name as teacher-name, course.title as course-title from instructor, teaches, course where instructor.ID = teaches.ID and teaches.course_id = course.course_id and instructor.dept_name = 'Art'; \u5b57\u7b26\u4e32\u652f\u6301 \u6b63\u5219\u8868\u8fbe\u5f0f \u5339\u914d\uff0c\u7528 like regrex \u7684\u65b9\u5f0f\u53ef\u4ee5\u8fdb\u884c\u5c5e\u6027\u503c\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7528\u6cd5\u6ca1\u600e\u4e48\u8bb2 sql select name from teacher where name like '%hihci%'; \u5c06\u8f93\u51fa\u7684\u7ed3\u679c\u6392\u5e8f order by \u5c5e\u6027\u540d asc/desc \u96c6\u5408\u64cd\u4f5c\uff1a \u53ef\u4ee5\u7528 union/intersect/except \u7b49\u96c6\u5408\u8fd0\u7b97\u6765 \u8fde\u63a5\u4e24\u6761\u4e0d\u540c\u7684\u67e5\u8be2 \u805a\u5408\u64cd\u4f5c\uff1a \u652f\u6301\u7684\u64cd\u4f5c\u6709avg/min/max/sum/count\uff0c\u83b7\u53d6\u7684\u662f\u8868\u4e2d\u7684\u7edf\u8ba1\u91cf sql select dept_name,avg(salary) as avg_salary from instructor group by dept_name; \u4e8b\u5b9e\u4e0aSQL\u8bed\u53e5\u7684\u805a\u5408\u64cd\u4f5c\u548c\u5173\u7cfb\u4ee3\u6570\u4e2d\u7684\u805a\u5408\u8fd0\u7b97\u662f\u5b8c\u5168\u5bf9\u5e94\u7684\uff0c\u5173\u7cfb\u4ee3\u6570\u4e2d\u7684\u805a\u5408\u8fd0\u7b97\u8868\u8fbe\u5f0f$ {G_1,G_2,\\dots,G_n}{\\cal G} {F_1(A_1),\\dots,F_n(A_n)}(E)$\u5bf9\u5e94\u7684SQL\u8bed\u53e5\u662f sql select G1,G2,\u2026,Gn,F1(A1),\u2026,Fn(An) from E group by G1,G2,\u2026,Gn; \u805a\u5408\u64cd\u4f5c\u7684SQL\u8bed\u53e5\u4e66\u5199\u53ef\u4ee5\u5728\u672b\u5c3e\u7528 having xxx \u6765\u8868\u793a\u4e00\u4e9b\u9700\u8981\u805a\u5408\u64cd\u4f5c\u6765\u83b7\u5f97\u7684\u6761\u4ef6\uff0c\u6bd4\u5982 sql select cno from pos natural join detail where year(detail.cdate) = 2018 having count(distinct campus) = 1; Null values \u7a7a\u503c \u5c5e\u6027\u503c\u53ef\u4ee5\u4e3anull\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u6570\u636e\u8868\u7684\u65f6\u5019\u89c4\u5b9a\u54ea\u4e9b\u5143\u7d20\u4e0d\u80fd\u4e3a\u7a7a Nested Subquery \u5d4c\u5957\u67e5\u8be2 \u5bf9\u4e8e\u67e5\u8be2 sql select A1,A2,\u2026,An from r1,r2,\u2026,rn where P \u5176\u4e2d\u7684A\uff0cr\uff0cP\u90fd\u53ef\u4ee5\u88ab\u66ff\u6362\u4e3a\u4e00\u4e2a \u5b50\u67e5\u8be2 \u96c6\u5408\u5173\u7cfb\uff1a\u7528 in/not in +\u5b50\u67e5\u8be2 \u6765\u5224\u65ad\u5426\u4e9b\u5c5e\u6027\u662f\u5426\u5c5e\u4e8e\u7279\u5b9a\u7684\u96c6\u5408\u4e2d some+\u5b50\u67e5\u8be2 \u7528\u4e8e\u5224\u65ad\u96c6\u5408\u4e2d\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7ec4\uff0c\u7528\u6765\u5224\u65ad\u5b58\u5728\u6027 all+\u5b50\u67e5\u8be2 \u53ef\u4ee5\u7528\u6765\u7b5b\u9009\u6700\u503c exists+\u5b50\u67e5\u8be2 \u5224\u65ad\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u662f\u5426\u4e0d\u4e3a\u7a7a not exists+\u5b50\u67e5\u8be2 \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u96c6 with\u5b50\u53e5\uff1a\u5bf9\u5b50\u67e5\u8be2\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c\u53ef\u4ee5\u5728\u4e4b\u540e\u8c03\u7528 scalar\u5b50\u67e5\u8be2\uff1a\u7528\u4e8e\u9700\u8981\u4e00\u4e2a\u503c\u4f5c\u4e3a\u67e5\u8be2\u7ed3\u679c\u7684\u65f6\u5019 join\u5b50\u53e5\uff1a\u53ef\u4ee5\u5bf9\u82e5\u5e72\u5f20\u8868\u8fdb\u884c\u5404\u79cdjoin\u4e4b\u540e\u518d\u67e5\u8be2 natural join \u81ea\u7136\u8fde\u63a5 A join B on(xxx)","title":"2.3 SQL\u67e5\u8be2"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#24-sql","text":"\u63d2\u5165: insert into table_name values( ); \u53ef\u4ee5\u7528select\u67e5\u8be2\u5b50\u53e5\u5f97\u5230\u7684\u7ed3\u679c\u4f5c\u4e3avalues\uff0c\u6b64\u65f6\u53ef\u4ee5\u540c\u65f6\u63d2\u5165\u591a\u6761\u7ed3\u679c \u5220\u9664\uff1a delete from table_name where xxxxxx \u66f4\u65b0\uff1a update table_name set xxx where xxxxx case \u5b50\u53e5\uff1a\u7528\u4e8e\u5206\u7c7b\u8ba8\u8bba sql update instructor set salary = case when salary <= 100000 then salary*1.05 else salary *1.03 end","title":"2.4 SQL\u63d2\u5165\uff0c\u5220\u9664\uff0c\u66f4\u65b0"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#25-sql-view-index","text":"\u89c6\u56fe\uff1a\u4e00\u79cd \u53ea\u663e\u793a\u6570\u636e\u8868\u4e2d\u90e8\u5206\u5c5e\u6027\u503c \u7684\u673a\u5236 \u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e00\u5f20\u65b0\u7684\u8868\uff0c\u800c\u662f\u9690\u85cf\u4e86\u4e00\u4e9b\u6570\u636e \u521b\u5efa\u89c6\u56fe\u7684\u5b9a\u4e49\u8bed\u53e5\uff1a xxx\u662f\u89c6\u56fe\u7684\u540d\u79f0\uff0c\u5185\u5bb9\u662f\u4ece\u67d0\u4e2atable\u4e2dselect\u51fa\u7684 sql create view xxx as (a subquery) \u89c6\u56fe\u7684\u66f4\u65b0 \u4e5f\u9700\u8981\u4f7f\u7528insert\u8bed\u53e5\u66f4\u65b0\u89c6\u56fe \u53ef\u4ee5\u66f4\u65b0\u7684\u6761\u4ef6 \u521b\u5efa\u65f6\u53ea\u4f7f\u7528\u4e86\u4e00\u5f20\u8868\u7684\u6570\u636e \u521b\u5efa\u65f6\u6ca1\u6709\u8fdb\u884cdistinct\u548c\u805a\u5408\u64cd\u4f5c \u6ca1\u6709\u51fa\u73b0\u7a7a\u503c\u548cdefault Domain\u521b\u5efa\u65b0\u7c7b\u578b create domain new_name + data type (\u6bd4\u5982 char(20)) domain\u53ef\u4ee5\u8bbe\u7f6e\u7ea6\u675f\u6761\u4ef6\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e00\u6bb5domain\u5b9a\u4e49\u8868\u793adegree_level\u53ea\u80fd\u5728\u8fd9\u4e09\u4e2a\u4e2d\u8fdb\u884c\u9009\u62e9 sql create domain degree_level varvhar(10) constraint degree_level_test check(value in ('Bachelors', 'Masters', 'Doctorate')); Large-Object Types \u5927\u5bf9\u8c61\u7c7b\u578b\uff0c\u5206\u4e3ablob(\u4e8c\u8fdb\u5236\u5927\u5bf9\u8c61)\u548cclob(\u6587\u672c\u5927\u5bf9\u8c61)\u4e24\u79cd\uff0c\u5f53\u67e5\u8be2\u9700\u8981\u8fd4\u56de\u5927\u5bf9\u8c61\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u4e2a\u4ee3\u8868\u5927\u5bf9\u8c61\u7684\u6307\u9488 Index\u7d22\u5f15 \u8bed\u6cd5 create index index_name on table_name(attribute) \u5728\u5bf9\u5e94\u7684\u8868\u548c\u5c5e\u6027\u4e2d\u5efa\u7acb\u7d22\u5f15\uff0c\u52a0\u5feb\u67e5\u8be2\u7684\u901f\u5ea6 Transactions \u4e8b\u52a1 \u4e00\u7cfb\u5217\u67e5\u8be2\u7b49\u64cd\u4f5c\u7684\u96c6\u5408 Atomic transaction \u539f\u5b50\u4e8b\u52a1\uff1a\u53ea\u80fd\u88ab\u5b8c\u5168\u6267\u884c\u6216\u8005\u56de\u6eda(roll back)","title":"2.5 SQL view \u89c6\u56fe, index \u7d22\u5f15"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#26-integrity","text":"\u5355\u4e2a\u5173\u7cfb\u4e0a\u7684\u7ea6\u675f \u4e3b\u952e primary key\uff0c unique \uff0c not null check\u5b50\u53e5\uff1a\u5199\u5728\u6570\u636e\u8868\u7684\u5b9a\u4e49\u4e2d check(P) \u68c0\u67e5\u67d0\u4e2a\u5c5e\u6027\u662f\u5426\u4e3a\u7279\u5b9a\u7684\u4e00\u4e9b\u503c Domain constraints \u503c\u57df\u7684\u7ea6\u675f \u5728domain\u7684\u5b9a\u4e49\u4e2d\u52a0\u5165check \u8bed\u6cd5 create domain domain_name constraints check_name check(P) Referential Integrity \u5f15\u7528\u5b8c\u6574\u6027 \u88ab\u5f15\u7528\u8868\u4e2d\u4e3b\u952e\u548c\u5916\u952e\u7684\u5173\u7cfb \u5176\u5b9ePPT\u91cc\u8fd9\u4e00\u6bb5\u8bb2\u4e86\u534a\u5929\u5c31\u662f\u5728\u8bf4\u8981\u5728\u5b9a\u4e49\u8868\u7684\u65f6\u5019\u5b9a\u4e49\u4e3b\u952e\u548c\u5916\u952e\u8fdb\u884c\u7ea6\u675f Cascading action(\u4e0d\u77e5\u9053\u8fd9\u4e00\u6bb5\u5728\u8bb2\u4ec0\u4e48\u72d7\u5c41) on update on delete \u5bf9\u4e8e\u6574\u4e2a\u6570\u636e\u5e93\u7684\u7ea6\u675f Assertions(Mysql\u4e0d\u652f\u6301) \u5bf9\u4e8e\u6570\u636e\u5e93\u4e2d\u9700\u8981\u6ee1\u8db3\u7684\u5173\u7cfb\u7684\u4e00\u79cd \u9884\u5148\u5224\u65ad create assertion <assertion-name> check <predicate> \u4e0b\u9762\u662f\u4e00\u6bb5\u4f8b\u5b50 sql create assertion credits_constaint check ( not exists( select * from student S where total_cred <>( select sum(credits) from takes nature join course where takes.ID = S.ID and grade is not null and grade <> 'F' ) ) ) Trigger\u89e6\u53d1\u5668 \u5728\u4fee\u6539\u4e86\u6570\u636e\u5e93\u65f6\u4f1a\u81ea\u52a8\u6267\u884c\u7684\u4e00\u4e9b\u8bed\u53e5 \u65f6\u95f4\u8282\u70b9\u7684\u9009\u62e9 referencing old row as \u5bf9\u65e7\u7684\u884c\u8fdb\u884c\u64cd\u4f5c\uff0c\u7528\u4e8e\u5220\u9664\u548c\u66f4\u65b0 referencing new row as \u5bf9\u65b0\u7684\u884c\u8fdb\u884c\u64cd\u4f5c\uff0c\u7528\u4e8e\u63d2\u5165\u548c\u66f4\u65b0 trigger event\u89e6\u53d1\u4e8b\u4ef6 insert/delete/update\u7b49\u64cd\u4f5c\u90fd\u53ef\u4ee5\u89e6\u53d1\u8bbe\u7f6e\u597d\u7684trigger \u89e6\u53d1\u7684\u65f6\u95f4\u70b9\u53ef\u4ee5\u662fbefore\u548cafter\uff0c\u89e6\u53d1\u5668\u7684\u8bed\u6cd5\u5982\u4e0b sql create trigger trigger_name before/after trigger_event of table_name on attribute referencing xxx for each row when xxxx begin xxxx(SQL operation) end","title":"2.6 Integrity \u5b8c\u6574\u6027\u63a7\u5236"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#27-authorization","text":"\u6570\u636e\u5e93\u4e2d\u7684\u56db\u79cd\u6743\u9650 read,insert,update,delete Security specification in SQL \u5b89\u5168\u89c4\u8303 grant\u8bed\u53e5\u53ef\u4ee5\u8d4b\u4e88\u7528\u6237\u6743\u9650 grant <privilege list> on <relation name or view name> to <user list> <user list> \u53ef\u4ee5\u662f\u7528\u6237\u540d\uff0c\u4e5f\u53ef\u4ee5\u662fpublic(\u5141\u8bb8\u6240\u6709\u6709\u6548\u7528\u6237\u62e5\u6709\u8fd9\u9879\u6743\u9650) grant\u8bed\u53e5\u540e\u9762\u53ef\u4ee5\u52a0 with grant option \uff0c\u8868\u793a\u8be5\u7528\u6237\u62e5\u6709\u8d4b\u4e88\u5176\u4ed6\u7528\u6237\u8fd9\u9879\u6743\u9650\u7684\u6743\u529b revoke \u6743\u529b\u56de\u6536 revoke <privilege list> on <relation/view name> from <user list> [restrict|cascade] \u4ece\u7528\u6237\u4e2d\u56de\u6536\u6743\u529b role\u8bed\u53e5 create role role_name \u5141\u8bb8\u4e00\u7c7b\u7528\u6237\u6301\u6709\u76f8\u540c\u7684\u6743\u9650","title":"2.7 Authorization"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#ernormal-form","text":"","title":"\u7b2c\u4e09\u90e8\u5206\uff1aER\u6a21\u578b\u548cNormal Form(\u8303\u5f0f)"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#31-e-r","text":"E-R\u6a21\u578b\u7531enitites(\u5b9e\u4f53)\u548crelation(\u5173\u7cfb)\u7ec4\u6210 Entity set \u5b9e\u4f53\u96c6 \u5b9e\u4f53\u662f\u4e00\u7cfb\u5217\u72ec\u7279\u7684\u5bf9\u8c61\uff0c\u7528\u4e00\u7cfb\u5217\u5c5e\u6027\u6765\u8868\u793a \u540c\u4e00\u7c7b\u5b9e\u4f53\u5171\u4eab\u76f8\u540c\u7684Properties\uff0c\u5b9e\u4f53\u96c6\u5c31\u662f\u7531\u540c\u7c7b\u578b\u7684\u5b9e\u4f53\u7ec4\u6210\u7684\u96c6\u5408 \u8868\u793a\u65b9\u6cd5 \u957f\u65b9\u5f62\u4ee3\u8868\u5b9e\u4f53\u96c6\u5408 \u5c5e\u6027\u5199\u5728\u957f\u65b9\u5f62\u4e2d\uff0c primary key\u7528\u4e0b\u5212\u7ebf \u6807\u6ce8 \u5b9e\u4f53\u96c6\u4e2d\u5bf9\u4e8e\u5c5e\u6027\u7684\u5b9a\u4e49\u548c\u4e4b\u524d\u7684\u51e0\u4e4e\u4e00\u6837 \u5b9e\u4f53\u96c6\u4e2d\u5c5e\u6027\u5b9a\u4e49\u53ef\u4ee5\u5b58\u5728\u7ec4\u5408\u4e0e\u7ee7\u627f\u7684\u5173\u7cfb\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u6837\u4f8b Instructor ID name \u200b first_name \u200b last_name address \u200b street \u200b street_number \u200b street_name \u200b apt_number \u200b city \u200b state - Relationship set \u5173\u7cfb\u96c6 - \u4e00\u4e2arelationship\u662f\u51e0\u4e2a\u5b9e\u4f53\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u5173\u7cfb\u96c6\u5c31\u662f\u540c\u7c7b\u5173\u7cfb\u4e4b\u95f4\u6784\u6210\u7684\u96c6\u5408 - \u4e00\u4e2arelationship\u81f3\u5c11\u9700\u8981\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u5b9e\u4f53\uff0c\u4e00\u4e2a\u5173\u7cfb\u96c6\u81f3\u5c11\u548c\u4e24\u4e2a\u5b9e\u4f53\u96c6\u6709\u5173\u8054 - \u4e00\u4e2a\u5173\u7cfb\u96c6\u6240\u5173\u8054\u7684\u5b9e\u4f53\u96c6\u7684\u4e2a\u6570\u79f0\u4e3adegree\uff0c\u5176\u4e2d\u4ee5\u4e8c\u5143\u5173\u7cfb\u96c6\u4e3a\u4e3b - E-R model constraints \u7ea6\u675f - mapping cardinalities \u6620\u5c04\u57fa\u6570 - \u4e8c\u5143\u5173\u7cfb\u4e2d\u6620\u5c04\u57fa\u6570\u53ea\u6709\u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u4e00\uff0c\u591a\u5bf9\u591a - E-R\u6a21\u578b\u4e2d\u8868\u793a\u6620\u5c04\u5173\u7cfb\uff1a\u7bad\u5934\u8868\u793a\u4e00\uff0c\u76f4\u7ebf\u8868\u793a\u591a - \u4e09\u5143\u5173\u7cfb\u4e2d\uff1a \u7bad\u5934\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21 \uff0c\u5426\u5219\u4f1a\u51fa\u73b0 \u4e8c\u4e49\u6027 - \u53c2\u4e0e\u5ea6\u7ea6\u675f - total participation\uff1a \u82e5\u4e00\u4e2a\u5b9e\u4f53\u96c6\u5168\u90e8\u53c2\u4e0e\u5230\u5173\u7cfb\u4e2d\uff0c\u8981\u7528\u4e24\u6761\u7ebf - partical participation \u90e8\u5206\u53c2\u4e0e - key\u7ea6\u675f\uff1a\u548c\u524d\u9762\u7684\u57fa\u672c\u4e00\u6837 - \u5f31\u5b9e\u4f53\u96c6weak entity set\uff1a\u4e00\u4e9b\u5b9e\u4f53\u96c6\u7684\u5c5e\u6027\u4e0d\u8db3\u4ee5\u5f62\u6210\u4e3b\u952e\uff0c\u5c31\u662f\u5f31\u5b9e\u4f53\u96c6\uff0c\u4e0e\u4e4b\u76f8\u5bf9\u7684\u662f\u5f3a\u5b9e\u4f53\u96c6 - \u7528\u4e8e\u8868\u793a\u4e00\u4e9b\u5173\u7cfb\u4e2d\u7684\u4f9d\u8d56\u6027\uff0c\u5f31\u5b9e\u4f53\u96c6\u9700\u8981\u548c\u5f3a\u5b9e\u4f53\u96c6\u5173\u8054\u624d\u6709\u610f\u4e49 - \u7ecf\u5e38\u51fa\u73b0\u5728\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u4e2d\uff0c\u5728ER\u56fe\u4e2d\u9700\u8981\u7528 \u53cc\u7ebf\u65b9\u6846 \u8868\u793a\uff0c\u6bd4\u5982\u804c\u5de5\u548c\u804c\u5de5\u5bb6\u5c5e\uff0c\u804c\u5de5\u5bb6\u5c5e\u4e0d\u80fd\u8131\u79bb\u4e8e\u804c\u5de5\u5b58\u5728\uff0c\u6240\u4ee5\u804c\u5de5\u5bb6\u5c5e\u5c31\u662f\u4e00\u4e2a\u5f31\u5b9e\u4f53\u96c6 - Aggregation \u805a\u5408 \u53ef\u4ee5\u628a\u4e00\u90e8\u5206E-R\u5173\u7cfb\u805a\u5408\u6210\u4e00\u4e2aEntity\u8fdb\u884c\u64cd\u4f5c \u5728ER\u56fe\u4e2d\u7528\u65b9\u6846\u5c06\u4e00\u4e9b\u5173\u7cfb\u96c6\u548c\u5b9e\u4f53\u96c6\u62ec\u8d77\u6765\u8868\u793a\u4e00\u4e2a\u805a\u5408\u540e\u7684\u5b9e\u4f53\u96c6 Specialization \u7279\u6b8a\u5316 \u81ea\u9876\u5411\u4e0b\u7684\u8bbe\u8ba1\u8fc7\u7a0b Attribute inheritance\uff1aoverlapping\uff0cdisjoint \u753b\u56fe\u7684\u65b9\u5f0f\u5c31\u662f\u4ece\u4e0a\u5f80\u4e0b\u753b\uff0cEntity\u7684\u5185\u5bb9\u9010\u6e10\u7ec6\u5206\uff0c\u4f46\u662f\u90fd\u7ee7\u627f\u4e86\u4e0a\u4e00\u9636\u7684\u6240\u6709attribute Generalization \u6cdb\u5316 \u81ea\u5e95\u5411\u4e0a\u7684\u8bbe\u8ba1\u8fc7\u7a0b \u4ece\u4e0b\u5f80\u4e0a\uff0c\u4e0b\u5c42\u7684\u5185\u5bb9\u5408\u6210\u4e0a\u5c42\u7684\u5185\u5bb9","title":"3.1 E-R\u6a21\u578b"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#32-e-r-diagram","text":"E-R\u56fe\u4e2d\u7684\u5404\u79cd\u8868\u8ff0","title":"3.2 E-R Diagram"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#33-normal-form","text":"","title":"3.3 Normal Form \u8303\u5f0f"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#331","text":"\u5b58\u50a8\u4fe1\u606f\u65f6\u6ca1\u6709\u4e0d\u5fc5\u8981\u7684\u5197\u4f59\uff0c\u68c0\u7d22\u4fe1\u606f\u7684\u6548\u7387\u9ad8 \u8fd9\u4e9b\u8bbe\u8ba1\u65b9\u5f0f\u901a\u8fc7\u5404\u79cd\u8303\u5f0f(normal form)\u6765\u5b9e\u73b0","title":"3.3.1 \u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u76ee\u6807"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#332-first-normal-form","text":"\u539f\u5b50\u6027atomic \uff1a\u4e0d\u80fd\u518d\u7ee7\u7eed\u62c6\u5206\uff0c\u5c5e\u6027\u4e0d\u80fd\u518d\u5411\u4e0b\u62c6\u5206 \u7b2c\u4e00\u8303\u5f0f\u7684\u5b9a\u4e49\uff1a\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0fR\u7684 \u6240\u6709\u5c5e\u6027\u90fd\u662fatomic\u7684 \uff0c\u8fd9\u4e2a\u5173\u7cfb\u6a21\u5f0fR\u5c31\u662f \u7b2c\u4e00\u8303\u5f0f \u5b58\u5728\u7684\u95ee\u9898 redundancy \u5197\u4f59 complicates updates \u66f4\u65b0\u6570\u636e\u5f88\u590d\u6742 null-values---difficult to insert/remove Decomposition \u5206\u89e3 Lossy Decomposition \u6709\u635f\u7684\u5206\u89e3\uff1a\u4e0d\u80fd\u7528\u5206\u89e3\u540e\u7684\u51e0\u4e2a\u5173\u7cfb\u91cd\u5efa\u539f\u672c\u7684\u5173\u7cfb Lossless join \u65e0\u635f\u5206\u89e3\u7684\u5b9a\u4e49\uff1a R \u88ab\u5206\u89e3\u4e3a(R1, R2)\u5e76\u4e14$R=R_1\\cup R_2$ \u5bf9\u4e8e\u4efb\u4f55\u5173\u7cfb\u6a21\u5f0fR\u4e0a\u7684\u5173\u7cfbr\u6709 $r=\\prod_{R_1}(r)\\Join \\prod_{R_2}(r)$","title":"3.3.2 First Normal Form \u7b2c\u4e00\u8303\u5f0f"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#333-functional-dependency","text":"\u51fd\u6570\u4f9d\u8d56 \u7684\u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0fR\uff0c\u5982\u679c$\\alpha \\subset R$ \u5e76\u4e14$\\beta\\subset R$ \u5219\u51fd\u6570\u4f9d\u8d56$\\alpha \\rightarrow\\beta$ \u5b9a\u4e49\u5728R\u4e0a\uff0c\u5f53\u4e14\u4ec5\u5f53 \u5982\u679c\u5bf9\u4e8eR\u7684\u4efb\u610f\u5173\u7cfbr(R) \u5f53\u5176\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u5143\u7ec4t1\u548ct2\uff0c\u5982\u679c\u4ed6\u4eec\u7684$\\alpha$\u5c5e\u6027\u503c\u76f8\u540c\u53ef\u4ee5\u63a8\u51fa\u4ed6\u4eec\u7684$\\beta$\u5c5e\u6027\u503c\u4e5f\u76f8\u540c \u5982\u679c\u67d0\u4e2a\u5c5e\u6027\u96c6A\u53ef\u4ee5\u51b3\u5b9a\u53e6\u4e00\u4e2a\u5c5e\u6027\u96c6B\u7684\u503c\uff0c\u5c31\u79f0$A\\rightarrow B$\u662f\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56 \u51fd\u6570\u4f9d\u8d56\u548c\u952e\u7684\u5173\u7cfb\uff1a\u51fd\u6570\u4f9d\u8d56\u5b9e\u9645\u4e0a\u662f\u952e\u7684\u6982\u5ff5\u7684\u4e00\u79cd\u6cdb\u5316 K\u662f\u5173\u7cfb\u6a21\u5f0fR\u7684 \u8d85\u952e \u5f53\u4e14\u4ec5\u5f53 $K\\rightarrow R$ K \u662fR\u4e0a\u7684 \u5019\u9009\u4e3b\u952e \u5f53\u4e14\u4ec5\u5f53 $K\\rightarrow R$ \u5e76\u4e14\u4e0d\u5b58\u5728 $\\alpha\\sub K, \\alpha\\rightarrow R$ \u4e00\u4e2a\u5e73\u51e1\u7684\u7684\u7ed3\u8bba\uff1a\u5b50\u96c6\u4e00\u5b9a\u5bf9\u81ea\u5df1\u51fd\u6570\u4f9d\u8d56","title":"3.3.3 Functional dependency \u51fd\u6570\u4f9d\u8d56"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#334","text":"Closure \u95ed\u5305 \u95ed\u5305, \u5bf9\u4e8e\u539f\u59cb\u7684\u51fd\u6570\u4f9d\u8d56\u96c6\u5408F\u53ef\u4ee5\u63a8\u51fa\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u4ea7\u751f\u7684\u96c6\u5408\u5c31\u662f F\u7684\u95ed\u5305 \u7b26\u53f7\u7528$F^+$\u8868\u793a \u51fd\u6570\u4f9d\u8d56\u7684\u6027\u8d28 reflexity\uff1a$\\alpha$\u7684\u5b50\u96c6\u4e00\u5b9a\u5173\u4e8e$\\alpha$\u51fd\u6570\u4f9d\u8d56 augmentation\uff1a\u5982\u679c$\\alpha\\rightarrow \\beta$ \u5219\u6709$\\lambda\\alpha\\rightarrow \\lambda\\beta$ transitivity\uff1a\u5982\u679c$a\\rightarrow \\beta \\and \\beta\\rightarrow\\gamma$ \u5219\u6709$a\\rightarrow \\gamma$ union\uff1a\u5982\u679c$\\alpha\\rightarrow \\beta\\and \\alpha\\rightarrow \\gamma$ \u5219\u6709$\\alpha \\rightarrow \\beta\\gamma$ decomposition\uff1a\u5982\u679c$\\alpha \\rightarrow \\beta\\gamma$ \u5219\u6709$\\alpha\\rightarrow \\beta\\and \\alpha\\rightarrow \\gamma$ pseudotransitivity\uff1a\u5982\u679c$\\alpha\\rightarrow \\beta\\and \\beta\\gamma\\rightarrow \\delta$ \u5219\u6709$\\gamma\\alpha\\rightarrow\\delta$ \u8ba1\u7b97\u95ed\u5305\u7684\u65b9\u6cd5 \u6839\u636e\u521d\u59cb\u7684\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u96c6\u5408F\u548c\u51fd\u6570\u4f9d\u8d56\u7684\u6027\u8d28\uff0c\u8ba1\u7b97\u51fa\u6240\u6709\u7684\u51fd\u6570\u4f9d\u8d56\u6784\u6210\u95ed\u5305 \u53ef\u4ee5\u7528\u6709\u5411\u56fe\u8868\u793a\u5c5e\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u901a\u8fc7\u56fe\u6765\u5199\u51fa\u6240\u6709\u7684\u51fd\u6570\u4f9d\u8d56 \u5c5e\u6027\u96c6\u7684\u95ed\u5305 \u95ed\u5305\u4e2d\u6240\u6709\u5173\u4e8e$\\alpha$\u51fd\u6570\u4f9d\u8d56\u7684\u5c5e\u6027\u96c6\u6784\u6210\u7684\u96c6\u5408 \u5373\u5982\u679c$(\\alpha\\rightarrow \\beta)\\in F^+$\u5219\u6709$\\beta\\in\\alpha^{+}$ \u8ba1\u7b97 \u5c5e\u6027\u96c6\u95ed\u5305 \u7684\u7b97\u6cd5 pseudocode result={a} while result is changed do for each b->c in F do begin if b is in result then push c into result end \u5c5e\u6027\u96c6\u95ed\u5305\u7684\u4f5c\u7528 \u6d4b\u8bd5\u662f\u5426\u4e3a\u4e3b\u952e\uff1a\u5982\u679c$\\alpha$\u7684\u95ed\u5305\u5305\u542b\u4e86\u6240\u6709\u5c5e\u6027\uff0c\u5219\u03b1\u5c31\u662f\u4e3b\u952e \u6d4b\u8bd5\u51fd\u6570\u72ec\u7acb\uff1a\u4e3a\u4e86\u9a8c\u8bc1$\\alpha\\rightarrow \\beta$\u662f\u5426\u5b58\u5728\u53ea\u9700\u8981\u9a8c\u8bc1\u03b2\u662f\u5426\u5728\u03b1\u7684\u95ed\u5305\u4e2d \u8ba1\u7b97$F^+$\uff1a\u901a\u8fc7\u6bcf\u4e2a\u5c5e\u6027\u7684\u95ed\u5305\u53ef\u4ee5\u5f97\u5230\u6574\u4e2a\u5173\u7cfb\u6a21\u5f0f\u7684\u95ed\u5305 \u5224\u5b9a\u662f\u5426\u4e3aLossless Join\u7684\u529e\u6cd5 \u5f53\u4e14\u4ec5\u5f53$R_1\\cap R_2\\rightarrow R_1$ \u6216\u8005$R_1\\cap R_2\\rightarrow R_2$\u81f3\u5c11\u6709\u4e00\u4e2a$F^+$\u4e2d","title":"3.3.4 \u95ed\u5305"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#335-bcnf3nf","text":"BC \u8303\u5f0f(Boyee-Codd Normal Form) BC\u8303\u5f0f\u7684\u6761\u4ef6\u662f\uff1a\u95ed\u5305$F^+$\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56$\\alpha \\rightarrow \\beta$ \u81f3\u5c11\u6ee1\u8db3\u4e0b\u9762\u7684\u4e00\u6761 $\\alpha \\rightarrow \\beta$ \u662f\u5e73\u51e1\u7684(\u4e5f\u5c31\u662f\u03b2\u662f\u03b1\u7684\u5b50\u96c6) \u03b1\u662f\u5173\u7cfb\u6a21\u5f0fR\u7684\u4e00\u4e2a \u8d85\u952e \uff0c\u5373$\\alpha \\rightarrow R$ \u5982\u4f55\u9a8c\u8bc1BCNF\uff1a \u68c0\u6d4b\u4e00\u4e2a\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56$\\alpha\\rightarrow\\beta$\u662f\u5426\u8fdd\u80cc\u4e86BCNF\u7684\u539f\u5219 \u8ba1\u7b97\u03b1\u7684\u5c5e\u6027\u95ed\u5305 \u5982\u679c\u8fd9\u4e2a\u5c5e\u6027\u95ed\u5305\u5305\u542b\u4e86\u6240\u6709\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u03b1\u5c31\u662f\u4e00\u4e2a \u8d85\u952e \u5982\u679c\u03b1\u4e0d\u662f\u8d85\u952e\u800c\u8fd9\u4e2a\u51fd\u6570\u4f9d\u8d56\u53c8\u4e0d\u5e73\u51e1\uff0c\u5c31\u6253\u7834\u4e86BCNF\u7684\u539f\u5219 \u7b80\u5316\u7684\u68c0\u6d4b\u65b9\u6cd5\uff1a \u53ea\u9700\u8981\u770b\u5173\u7cfb\u6a21\u5f0fR\u548c\u5df2\u7ecf\u7ed9\u5b9a\u7684\u51fd\u6570\u4f9d\u8d56\u96c6\u5408 F\u4e2d\u7684\u5404\u4e2a\u51fd\u6570\u4f9d\u8d56 \u662f\u5426\u6ee1\u8db3BCNF\u7684\u539f\u5219 \u4e0d\u9700\u8981\u68c0\u67e5F\u95ed\u5305\u4e2d\u6240\u6709\u7684\u51fd\u6570\u72ec\u7acb \u53ef\u4ee5\u8bc1\u660e\u5982\u679cF\u4e2d\u6ca1\u6709\u8fdd\u80ccBCNF\u539f\u5219\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u90a3\u4e48F\u7684\u95ed\u5305\u4e2d\u4e5f\u6ca1\u6709 \u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u80fd\u7528\u4e8e\u68c0\u6d4bR\u7684\u5206\u89e3 BC\u8303\u5f0f\u7684\u5206\u89e3\u7b97\u6cd5\u4f2a\u4ee3\u7801 pseudocode result={R} done=false compute F+ by F while (!done) do if exist Ri in result that is not a BCNF then begin let a->b be a non-trivial function dependency that holds on Ri such that a->Ri is not in F+ and (a and b)=empty set result=(result-Ri)or(Ri-b)or(a,b); end else done=true \u5f53\u6211\u4eec\u5bf9\u5173\u7cfb\u6a21\u5f0fR\u8fdb\u884c\u5206\u89e3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f \u6ca1\u6709\u5197\u4f59\uff0c\u6bcf\u4e2a\u5173\u7cfb\u90fd\u662f\u4e00\u4e2agood form \u65e0\u635f\u5206\u89e3 Denpendency preservation \u72ec\u7acb\u6027\u4fdd\u62a4,\u628aR\u548cF\u7684\u95ed\u5305\u6309\u7167\u5173\u7cfb\u7684\u5bf9\u5e94\u8fdb\u884c\u5212\u5206 \u7528$F_i$\u8868\u793a\u53ea\u5305\u542b\u5728$R_i$\u4e2d\u51fa\u73b0\u7684\u5143\u7d20\u7684\u51fd\u6570\u4f9d\u8d56\u6784\u6210\u7684\u96c6\u5408 \u6211\u4eec\u5e0c\u671b\u7684\u7ed3\u679c\u662f $(F_1\\cup F_2\\cup\\dots\\cup F_n)^+=F^+$ BCNF\u7684\u5206\u89e3\u4e00\u5b9a\u662f\u6709\u72ec\u7acb\u6027\u4fdd\u62a4\u7684 \u72ec\u7acb\u6027\u4fdd\u62a4\u7684\u9a8c\u8bc1\u7b97\u6cd5 \u5982\u679c\u6700\u7ec8\u7684\u7ed3\u679cresult\u5305\u542b\u4e86\u6240\u6709\u5c5e\u6027\uff0c\u90a3\u4e48\u51fd\u6570\u4f9d\u8d56$\\alpha\\rightarrow \\beta$ \u5c31\u662f\u88ab\u4fdd\u62a4\u7684 pseudocode result = \u03b1 while result changed do for each Ri in the composition t = (result and Ri)+ and Ri result = result or t Third normal form \u7b2c\u4e09\u8303\u5f0f \u7b2c\u4e09\u8303\u5f0f\u7684\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u51fd\u6570\u4f9d\u8d56\u7684\u95ed\u5305$F^+$\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56$\\alpha\\rightarrow\\beta$ \u4e0b\u9762\u4e09\u6761\u81f3\u5c11\u6ee1\u8db3\u4e00\u6761 $\\alpha\\rightarrow\\beta$ \u662f\u5e73\u51e1\u7684 $\\alpha$\u662f\u5173\u7cfb\u6a21\u5f0fR\u7684\u8d85\u952e \u6bcf\u4e00\u4e2a$\\beta-\\alpha$ \u4e2d\u7684 \u5c5e\u6027A\u90fd\u5305\u542b\u5728\u4e00\u4e2aR\u7684\u5019\u9009\u4e3b\u952e\u4e2d BCNF\u4e00\u5b9a\u662f3NF\uff0c\u5b9e\u9645\u4e0a3NF\u662f\u4e3a\u4e86\u4fdd\u8bc1\u72ec\u7acb\u6027\u4fdd\u62a4\u7684BCNF 3NF\u6709\u5197\u4f59\uff0c\u67d0\u4e9b\u60c5\u51b5\u9700\u8981\u8bbe\u7f6e\u4e00\u4e9b\u7a7a\u503c 3NF\u7684\u5224\u5b9a \u4e0d\u9700\u8981\u5224\u65ad\u95ed\u5305\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\uff0c\u53ea\u9700\u8981\u5bf9\u5df2\u6709\u7684F\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\u8fdb\u884c\u5224\u65ad \u7528\u95ed\u5305\u53ef\u4ee5\u68c0\u67e5$\\alpha\\rightarrow \\beta$\u4e2d\u7684\u03b1\u662f\u4e0d\u662f\u8d85\u952e \u5982\u679c\u4e0d\u662f\uff0c\u5c31\u9700\u8981\u68c0\u67e5\u03b2\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u5305\u542b\u5728R\u7684\u5019\u9009\u952e\u4e2d","title":"3.3.5 BCNF/3NF"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#336","text":"Canonical conver \u6700\u5c0f\u8986\u76d6\u95ee\u9898 \u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u7684\u6700\u5c0f\u96c6\u5408(\u4e5f\u5c31\u662f\u6ca1\u6709\u5197\u4f59\uff0c\u548cF\u7b49\u4ef7\u53ef\u4ee5\u63a8\u5bfc\u51faF+\u7684\u5173\u7cfb\u96c6\u5408) \u65e0\u5173\u5c5e\u6027Extraneous Attributes\uff1a \u5b9a\u4e49\uff1a\u5bf9\u4e8e\u51fd\u6570\u4f9d\u8d56\u96c6\u5408F\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56$\\alpha\\rightarrow\\beta$ \u03b1\u4e2d\u7684\u5c5e\u6027A\u662f\u591a\u4f59\u7684\uff0c\u5982\u679cF\u903b\u8f91\u4e0a\u53ef\u4ee5\u63a8\u51fa$(F-{\\alpha\\rightarrow\\beta})\\or {(\\alpha-A)\\rightarrow\\beta}$ \u03b2\u4e2d\u7684\u5c5e\u6027A\u662f\u591a\u4f59\u7684\uff0c\u5982\u679c$(F-{\\alpha\\rightarrow\\beta})\\or {\\alpha\\rightarrow(\\beta-A)}$ \u903b\u8f91\u4e0a\u53ef\u4ee5\u63a8\u51faF \u66f4\u5f3a\u7684\u51fd\u6570\u903b\u8f91\u4e0a\u53ef\u4ee5\u63a8\u5bfc\u51fa\u66f4\u5f31\u7684\u51fd\u6570 \u5224\u65ad$\\alpha\\rightarrow\\beta$\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u662f\u4e0d\u662f\u591a\u4f59\u7684 \u6d4b\u8bd5\u03b1\u4e2d\u7684\u5c5e\u6027A\u662f\u5426\u4e3a\u591a\u4f59\u7684 \u8ba1\u7b97$(\\alpha-A)^+$ \u68c0\u67e5\u7ed3\u679c\u4e2d\u662f\u5426\u5305\u542b\u03b2\uff0c\u5982\u679c\u6709\u5c31\u8bf4\u660eA\u662f\u591a\u4f59\u7684 \u6d4b\u8bd5\u03b2\u4e2d\u7684\u5c5e\u6027A\u662f\u5426\u4e3a\u591a\u4f59\u7684 \u53ea\u7528$(F-{\\alpha\\rightarrow\\beta})\\or {\\alpha\\rightarrow(\\beta-A)}$\u4e2d\u4f18\u7684\u4f9d\u8d56\u5173\u7cfb\u8ba1\u7b97$\\alpha^+$ \u5982\u679c\u7ed3\u679c\u5305\u542bA\uff0c\u5c31\u8bf4\u660eA\u662f\u591a\u4f59\u7684 \u6700\u5c0f\u8986\u76d6$F_c$\u7684\u5b9a\u4e49 \u548cF\u53ef\u4ee5\u4e92\u76f8\u4ece\u903b\u8f91\u4e0a\u63a8\u5bfc\u51fa\uff0c\u5e76\u4e14\u6700\u5c0f\u8986\u76d6\u4e2d\u6ca1\u6709\u591a\u4f59\u7684\u4fe1\u606f \u6700\u5c0f\u8986\u76d6\u4e2d\u7684\u6bcf\u4e2a\u51fd\u6570\u4f9d\u8d56\u4e2d\u5de6\u8fb9\u7684\u5185\u5bb9\u90fd\u662funique\u7684 \u5982\u4f55\u8ba1\u7b97\u6700\u5c0f\u8986\u76d6\uff1aPPT-8\u768453\u9875\u6709\u4e00\u4e2a\u4f8b\u5b50 \u5148\u4ee4Fc=F \u7528Union rule\u5c06Fc\u4e2d\u6240\u6709\u6ee1\u8db3$\\alpha\\rightarrow\\beta_1 \\and \\alpha\\rightarrow\\beta_2$\u7684\u51fd\u6570\u4f9d\u8d56\u66ff\u6362\u4e3a$\\alpha\\rightarrow\\beta_1\\beta_2$ \u627e\u5230Fc\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\u53bb\u6389\u91cc\u9762\u91cd\u590d\u7684\u5c5e\u6027 \u91cd\u590d2\uff0c3\u4e24\u4e2a\u6b65\u9aa4\u76f4\u5230Fc\u4e0d\u518d\u53d8\u5316 \u4e0b\u9762\u8fd9\u4e9b\u90e8\u5206\u770b\u8d77\u6765\u4e0d\u592a\u4f1a\u8003\uff0c\u5148\u4e0d\u7ba1\u4e86\uff0c\u6709\u7a7a\u518d\u770b 3NF decomposition algorithm Multivalued denpendency \u591a\u503c\u4f9d\u8d56 a->->b\uff0c\u8bb0\u4f5cD\uff0c\u95ed\u5305\u8bb0\u4e3aD+ Fourth Normal Form \u5bf9\u4e8eD+\u4e2d\u7684\u6240\u6709a->->b\u6709\u2460\u662f\u5e73\u51e1\u7684\u6216\u8005\u2461a\u662f\u4e00\u4e2a\u8d85\u952e 4NF\u4e00\u5b9a\u662fBCNF","title":"3.3.6 \u6700\u5c0f\u8986\u76d6"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#_4","text":"","title":"\u7b2c\u56db\u90e8\u5206: \u6570\u636e\u5e93\u8bbe\u8ba1\u7406\u8bba"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#41","text":"\u8fd9\u4e00\u90e8\u5206\u597d\u50cf\u4e0d\u600e\u4e48\u4f1a\u8003\u8bd5\uff0c\u7406\u8bba\u6027\u7684\u4e1c\u897f\u6bd4\u8f83\u591a\uff0c\u8ddf\u8ba1\u539f\u7684\u5b58\u50a8\u5668\u90e8\u5206\u597d\u50cf\u8fd8\u6709\u4e00\u90e8\u5206\u4ea4\u96c6 \u5b58\u50a8\u7684\u7ed3\u6784 storage hierarchy primary\u4e3b\u5b58\u50a8\u5668 \u5feb\u800c\u6613\u5931\uff0c\u5e38\u89c1\u7684\u6709\u4e3b\u5b58\u548ccache cache\u7684\u5b58\u53d6\u6548\u7387\u6700\u9ad8\uff0c\u4f46\u662fcostly\uff0c\u4e3b\u5b58\u8bbf\u95ee\u5feb\u4f46\u662f\u5bf9\u4e8e\u6570\u636e\u5e93\u800c\u8a00\u7a7a\u95f4\u592a\u5c0f secondary \u4e8c\u7ea7\u5b58\u50a8\u5668 \u4e0d\u5bb9\u6613\u4e22\u5931\uff0c\u8bbf\u95ee\u8f83\u5feb\uff0c\u53c8\u53eb\u5728\u7ebf\u5b58\u50a8 \u5e38\u89c1\u7684\u662f\u95ea\u5b58\u548c\u78c1\u76d8 tertiary\u4e09\u7ea7\u5b58\u50a8\u5668 \u4e0d\u5bb9\u6613\u4e22\u5931\uff0c\u8bbf\u95ee\u6162\uff0c\u4f46\u662f\u5bb9\u91cf\u5927\u800ccheap\uff0c\u79bb\u7ebf\u5b58\u50a8 \u78c1\u5e26\uff0c\u5149\u5b58\u50a8\u5668 \u603b\u4f53\u7684\u5b58\u50a8\u67b6\u6784\uff1acache--\u4e3b\u5b58--\u95ea\u5b58--\u78c1\u76d8--\u5149\u76d8--\u78c1\u5e26","title":"4.1 \u5b58\u50a8\u548c\u6587\u4ef6\u7ed3\u6784"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#411-magnetic-disks","text":"\u7ec4\u6210\u7ed3\u6784 read-write head \u8bfb\u5199\u5934 \u548c\u78c1\u76d8\u8868\u9762\u9760\u5f97\u5f88\u8fd1 \u7528\u4e8e\u8bfb\u5199\u78c1\u76d8\u4e2d\u7684\u6587\u4ef6\u4fe1\u606f tracks \u78c1\u9053, \u7531\u78c1\u76d8\u8868\u9762\u5212\u5206\uff0c\u6bcf\u4e2a\u786c\u76d8\u5927\u6982\u670950k\u5230100k\u4e2a\u78c1\u9053 sectors \u6247\u533a\uff0c\u7531\u78c1\u9053\u5212\u5206\u800c\u6210 \u6247\u533a\u662f\u6570\u636e\u8bfb\u5199\u7684\u6700\u5c0f\u5355\u4f4d \u6bcf\u4e2a\u6247\u533a\u7684\u5927\u5c0f\u662f512\u5b57\u8282\uff0c\u6bcf\u4e2a\u78c1\u9053\u6709500-1000\u4e2a\u6247\u533a \u78c1\u76d8\u63a7\u5236\u5668\uff1a\u8ba1\u7b97\u673a\u7cfb\u7edf\u548c\u78c1\u76d8\u4e4b\u95f4\u7684\u63a5\u53e3 Disk subsystem \u78c1\u76d8\u5b50\u7cfb\u7edf\uff1a\u7531disk controller\u64cd\u7eb5\u82e5\u5e72\u4e2a\u78c1\u76d8\u7ec4\u6210\u7684\u5b57\u7cfb\u7edf \u78c1\u76d8\u7684\u6027\u80fd\u8bc4\u4ef7\u6807\u51c6 access time\uff1a \u8bbf\u95ee\u65f6\u95f4\uff0c\u5305\u62ec seek time\uff1a\u8bfb\u5199\u5934\u7684arm\u6b63\u786e\u627e\u5230track\u7684\u65f6\u95f4\uff0c\u5e73\u5747\u7684seek time\u662f\u6700\u574f\u60c5\u51b5\u7684\u4e00\u534a rotational latency\uff1a\u65cb\u8f6c\u9020\u6210\u7684\u5ef6\u8fdf\uff0c\u5e73\u5747\u65f6\u95f4\u662f\u6700\u574f\u7684\u4e00\u534a data-transfer rate \u6570\u636e\u4ece\u78c1\u76d8\u8bfb\u5199\u7684\u901f\u5ea6 MTTF\uff1a\u51fa\u73b0failure\u4e4b\u524d\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4 \u78c1\u76d8\u8bbf\u95ee\u7684\u4f18\u5316 block \uff1a\u4e00\u4e2a\u78c1\u9053\u4e2d\u7684\u82e5\u5e72\u8fde\u7eed\u6247\u533a\u7ec4\u6210\u7684\u5e8f\u5217 buffering read-ahead disk-arm-scheduling file organization: \u901a\u8fc7\u6309\u7167\u8bbf\u95ee\u6570\u636e\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7block\u4f18\u5316\u8bbf\u95ee\u65f6\u95f4","title":"4.1.1 \u78c1\u76d8 Magnetic Disks"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#412-file-organization","text":"\u6570\u636e\u5e93\u5b58\u50a8\u5728\u4e00\u7cfb\u5217\u7684\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e2a\u6587\u4ef6\u662f\u4e00\u7cfb\u5217\u7684\u8bb0\u5f55\uff0c\u6bcf\u6761\u8bb0\u5f55\u5305\u542b\u4e00\u7cfb\u5217\u7684fields \u6bcf\u4e2a\u6587\u4ef6\u88ab\u5212\u5206\u4e3a\u56fa\u5b9a\u957f\u5ea6\u7684block\uff0cblock\u662f\u6570\u636e\u5b58\u53d6/\u5b58\u50a8\u7a7a\u95f4\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d \u4e00\u4e2ablock\u6709\u591a\u6761\u8bb0\u5f55\uff0c\u5728\u4f20\u7edf\u7684\u6570\u636e\u5e93\u4e2d \u8bb0\u5f55\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7block \u6bcf\u6761\u8bb0\u5f55\u4e00\u5b9a\u90fd\u662f\u5b8c\u6574\u7684 Free List \u7528\u94fe\u8868\u7684\u5f62\u5f0f\u6765\u5b58\u50a8records Variable-length records \u53d8\u957f\u8bb0\u5f55 \u5178\u578b\u7684\u53d8\u957f\u8bb0\u5f55 \u5c5e\u6027\u6309\u7167\u987a\u5e8f\u5b58\u50a8 \u53d8\u957f\u7684\u53d8\u91cf\u7528offset+data\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u7a7a\u503c\u7528null-value bitmap\u5b58\u50a8 slotted page\u7ed3\u6784\uff0c\u5b83\u7684header\u5305\u542b \u8bb0\u5f55\u7684\u603b\u6570 block\u4e2d\u7684\u7a7a\u95f2\u533a\u57df\u7684end \u6bcf\u6761\u8bb0\u5f55\u6240\u5728\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f \u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u7ec4\u7ec7\u65b9\u5f0f heap sequential hashing nulti-table clustering file organization \u5b58\u50a8\u7f13\u51b2\u533a\u7684\u7ba1\u7406 \u901a\u8fc7\u5c06\u6570\u636e\u653e\u5230\u4e3b\u5b58\u4e2d\u6765\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387 buffer manager\uff1a\u7528\u4e8e\u7ba1\u7406\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5b58\u5206\u914d \u5f53\u9700\u8981\u4ece\u78c1\u76d8\u8bfb\u53d6block\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u4f1a\u8c03\u7528buffer mananger\u7684\u529f\u80fd \u5982\u679cblock\u5df2\u7ecf\u5728buffer\u4e2d\u4e86\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2ablock\u7684\u5730\u5740 \u5982\u679c\u4e0d\u5728\uff0c\u5219buffer manager \u4f1a\u52a8\u6001\u5206\u914dbuffer\u4e2d\u7684\u5185\u5b58\u7ed9block\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u8986\u76d6\u522b\u7684block\uff0c\u7136\u540e\u5c06\u78c1\u76d8\u4e2dblock\u4e2d\u7684\u5185\u5bb9\u5199\u5165buffer\u4e2d \u6d89\u53ca\u5230buffer\u7684\u66ff\u6362\u7b97\u6cd5LRU strategy \u5373\u66ff\u6362\u6389\u6700\u8fd1\u4f7f\u7528\u9891\u7387\u6700\u4f4e\u7684block pinned block \u5185\u5b58\u4e2d\u7684\u4e0d\u5141\u8bb8\u5199\u56de\u78c1\u76d8\u7684block\uff0c\u8868\u793a\u6b63\u5728\u5904\u7406\u4e8b\u52a1\u6216\u8005\u5904\u4e8e\u6062\u590d\u63a5\u65ad","title":"4.1.2 File organization \u6587\u4ef6\u7ec4\u7ec7"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#42-b","text":"","title":"4.2 B+\u6811\u7d22\u5f15"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#421","text":"\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u5f15\u5165\u7d22\u5f15\u673a\u5236\uff0c\u7528\u4e8e\u52a0\u5feb\u67e5\u8be2\u548c\u8bbf\u95ee\u9700\u8981\u7684\u6570\u636e search key \u901a\u8fc7\u4e00\u4e2a\u5c5e\u6027\u503c\u67e5\u627e\u4e00\u7cfb\u5217\u5c5e\u6027\u503c\uff0c\u7528\u4e8e\u6587\u4ef6\u4e2d\u67e5\u8be2 Index file \u7d22\u5f15\u6587\u4ef6\u5305\u542b\u4e00\u7cfb\u5217\u7684search key\u548cpointer(\u4e24\u8005\u7684\u7ec4\u5408\u88ab\u79f0\u4e3aindex entry)\uff0c\u67e5\u8be2\u65b9\u5f0f\u662f\u901a\u8fc7search key\u5728index file\u4e2d\u67e5\u8be2data\u7684\u5730\u5740(pointer)\uff0c\u7136\u540e\u518d\u4ecedata file\u4e2d\u67e5\u8be2\u6570\u636e \u4e24\u79cdsearch key\u7684\u6392\u5e8f\u65b9\u5f0f\uff1aordered index\uff0chash index ordered index \u987a\u5e8f\u7d22\u5f15 index entry\u6309\u7167search key\u7684\u503c\u6765\u8fdb\u884c\u6392\u5217 primary key \u6307\u5b9a\u6587\u4ef6\u987a\u5e8f\u7684\u7d22\u5f15 secondary key \u6b21\u5173\u952e\u5b57 \u7d22\u5f15\u7684\u4e0d\u540c\u65b9\u5f0f Dense index \u5bc6\u96c6\u7684\u7d22\u5f15\uff1a\u6bcf\u4e00\u6761\u8bb0\u5f55\u90fd\u6709\u5bf9\u5e94\u7684\u7d22\u5f15 Sperse index \u7a00\u758f\u7684\u7d22\u5f15 \u9700\u8981\u7684\u7a7a\u95f4\u548c\u63d2\u5165\u5220\u9664\u65b0\u7d22\u5f15\u7684\u5f00\u9500\u8f83\u5c0f\uff0c\u4f46\u662f\u6bd4\u5bc6\u96c6\u7684\u7d22\u5f15\u8981\u6162 Secondary indice\u7d22\u5f15\u901a\u8fc7\u4e00\u4e2a\u5927\u7684bucket\u6765\u5bfb\u627e\u6240\u6307\u5411\u7684\u5730\u65b9 Multilevel index \u591a\u7ea7\u7d22\u5f15\uff0c\u5206\u4e3aouter index\u548cinner index","title":"4.2.1 \u7d22\u5f15"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#422-b","text":"B+\u6811\u6587\u4ef6\u7d22\u5f15 \u901a\u8fc7B+\u6811\u7684\u7d22\u5f15\u65b9\u5f0f\u6765\u5bfb\u627e\u6587\u4ef6\u4e2d\u6570\u636e\u7684\u5730\u5740\uff0cB+\u6811\u7684\u5b9a\u4e49\u548cads\u4e2d\u7684B+\u6811\u57fa\u672c\u76f8\u540c\uff0c \u6811\u7684\u975e\u53f6\u8282\u70b9\u7531\u6307\u5411\u513f\u5b50\u7684\u6307\u9488\u548csearch-key\u76f8\u95f4\u7ec4\u5408\u800c\u6210 \u4e24\u4e2asearch-key\u4e4b\u95f4\u7684\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u7684\u503c\u5728\u8fd9\u4e24\u4e2asearch-key\u4e4b\u95f4 B+\u6811\u4e0a\u7684\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662flogN\u7ea7\u522b\uff0cN\u662fsearch key\u7684\u603b\u4e2a\u6570 \u67e5\u8be2\u7684\u8def\u5f84\u957f\u5ea6\uff1a\u4e0d\u4f1a\u8d85\u8fc7$\\log_{n/2}(K)$ + 1\u5176\u4e2dK\u662fB+\u6811\u4e2d\u7684\u7d22\u5f15\u7684\u4e2a\u6570(\u5373\u89c4\u6a21N) B+\u6811\u7684\u4e00\u4e2a\u8282\u70b9\u7684\u5927\u5c0f\u548c\u4e00\u4e2a\u78c1\u76d8\u533a\u5757\u4e00\u6837\u5927(\u5f80\u5f80\u662f4KB)\u800c\u5728n\u7684\u89c4\u6a21\u4e00\u822c\u5728100\u5de6\u53f3 B+\u6811\u7684\u66f4\u65b0\uff1a\u63d2\u5165\u548c\u5220\u9664 \u63d2\u5165\u7684\u7b97\u6cd5\uff1a\u5148\u627e\u5230\u8be5\u63d2\u5165\u7684\u4f4d\u7f6e\u76f4\u63a5\u63d2\u5165\uff0c\u5982\u679c\u5f53\u524d\u7684\u8282\u70b9\u6570\u91cf\u8d85\u8fc7\u4e86\u9636\u6570M\u5219\u62c6\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5e76\u5411\u4e0a\u66f4\u65b0\u7d22\u5f15 \u5220\u9664\u7684\u7b97\u6cd5: \u76f4\u63a5\u628a\u8981\u5220\u9664\u7684\u8282\u70b9\u5220\u9664\uff0c\u7136\u540e\u628a\u6ca1\u6709\u7d22\u5f15key\u4e86\u7684\u975e\u53f6\u8282\u70b9\u5220\u9664\uff0c\u4ece\u65c1\u8fb9\u627e\u4e00\u4e2a\u53f6\u8282\u70b9\u6765\u5408\u5e76\u51fa\u65b0\u7684\u975e\u53f6\u8282\u70b9 B+\u6811\u7684\u76f8\u5173\u8ba1\u7b97 \u9ad8\u5ea6\u7684\u4f30\u8ba1\uff1a B+\u6811\u9ad8\u5ea6\u6700\u5c0f\u7684\u60c5\u51b5\uff1a\u6240\u6709\u7684\u53f6\u8282\u70b9\u90fd\u6ee1\uff0c\u6b64\u65f6\u7684$h = \\lceil \\log_{N}(M)\\rceil$ \u6700\u5927\u7684\u60c5\u51b5\uff0c\u6240\u6709\u7684\u53f6\u8282\u70b9\u90fd\u534a\u6ee1\uff0c\u6b64\u65f6\u7684$h=\\lfloor \\log_{[N/2]}(\\frac{M}{2})\\rfloor+1$ size\u5927\u5c0f\u7684\u4f30\u8ba1\uff1a\u4e5f\u662f\u4e24\u79cd\u6781\u7aef\u60c5\u51b5","title":"4.2.2 B+\u6811\u7d22\u5f15"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#423","text":"Hash\u6587\u4ef6\u7d22\u5f15 \u9759\u6001\u54c8\u5e0c \u4f7f\u7528\u4e00\u7cfb\u5217buckets\u6765\u5b58\u50a8\u4e00\u7cfb\u5217\u7684records\uff0c\u901a\u8fc7hash\u51fd\u6570\u548csearch-key\u7684\u8fd0\u7b97\u6765\u67e5\u627e\u6587\u4ef6 hash\u51fd\u6570\uff1a\u5c06\u4e0d\u540c\u7684search key\u6620\u5c04\u5230\u4e0d\u540c\u7684bucket\u91cc\u9762\u53bb Hash indices \u5c06hash\u7528\u4e8e\u7d22\u5f15\u7ed3\u6784\u4e2d A hash index organizes the search keys, with their associated record pointers, into a hash file structure. hash indices are always secondary indices \u52a8\u6001\u54c8\u5e0c \u54c8\u5e0c\u51fd\u6570\u4f1a\u88ab\u52a8\u6001\u5730\u4fee\u6539 \u53ef\u6269\u5c55\u7684\u54c8\u5e0c","title":"4.2.3 \u6587\u4ef6\u7d22\u5f15"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#424-b","text":"\u8bb0\u5f55\u7684\u5b58\u50a8\uff1a \u6570\u636e\u5e93\u7684\u8bb0\u5f55\u5728block\u4e2d\u5b58\u50a8\uff0c\u4e00\u4e2ablock\u4e2d\u6709\u5927\u91cf\u7684\u8bb0\u5f55\u5b58\u50a8\uff0c\u6709\u7ebf\u6027\u5b58\u50a8\u7684\uff0c\u4e5f\u6709\u4f7f\u7528B+\u6811\u7d22\u5f15\u7684 \u7ebf\u6027\u5b58\u50a8\u7684\u8bb0\u5f55\uff1a \u5047\u8bbe\u4e00\u6761\u8bb0\u5f55\u7684\u957f\u5ea6\u4f4dL\uff0cblock\u7684\u5927\u5c0f\u4e3aB\uff0c\u90a3\u4e48\u4e00\u6761\u8bb0\u5f55\u4e2d\u6700\u591a\u6709$\\lfloor \\frac{B}{L}\\rfloor$ \u6761\u8bb0\u5f55 \u5982\u679c\u4e00\u5171\u6709N\u6761\u8bb0\u5f55\uff0c\u4e00\u4e2ablock\u4e2d\u6709M\u6761\u8bb0\u5f55\uff0c\u90a3\u4e48\u4e00\u5171\u9700\u8981$\\lceil\\frac{N}{M}\\rceil$ \u4e2ablock\uff0c\u800c $M=\\lfloor \\frac{B}{L}\\rfloor$ B+\u6811\u7d22\u5f15block\u7684\u8ba1\u7b97\uff0c\u5047\u8bbeblock\u7684\u5927\u5c0f\u4e3aB\uff0c\u6307\u9488\u7684\u5927\u5c0f\u662fa\uff0c\u88ab\u7d22\u5f15\u7684\u5c5e\u6027\u503c\u5927\u5c0f\u662fb \u8981\u6ce8\u610f\u6307\u9488\u8282\u70b9\u6bd4\u5c5e\u6027\u503c\u591a\u4e00\u4e2a\uff0c\u6240\u4ee5\u4e00\u4e2a\u5757\u4e0a\u7684\u6247\u51fa\u7387n(fan-out rate)\u662f$\\lfloor \\frac{B-a}{a+b}\\rfloor+1$ n\u4e5f\u5c31\u662f\u8fd9\u4e2aB+\u6811\u7684\u9636\u6570\uff0c\u7136\u540e\u6839\u636e\u516c\u5f0f\u6765\u4f30\u7b97B+\u6811\u7684\u9ad8\u5ea6\uff0c\u5176\u4e2dM\u5e94\u8be5\u662f\u4f5c\u4e3a\u7d22\u5f15\u7684\u503c\u53ef\u4ee5\u53d6\u5230\u7684\u4e2a\u6570","title":"4.2.4 \u603b\u7ed3\uff1a\u5b58\u50a8\u7ed3\u6784\u548cB+\u6811\u7684\u8ba1\u7b97"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#43-queryprocess","text":"\u5370\u8c61\u4e2d\u8fd9\u4e00\u90e8\u5206\u7684\u4f5c\u4e1a\u9898\u4ee5\u5957\u516c\u5f0f\u7b97\u4e3a\u4e3b \u67e5\u8be2\u5904\u7406\u7684\u57fa\u672c\u6b65\u9aa4 Parsing and translation \u89e3\u6790\u548c\u7ffb\u8bd1 Optimization \u4f18\u5316 \u4e00\u79cdSQL\u67e5\u8be2\u53ef\u80fd\u5bf9\u5e94\u4e86\u591a\u79cd\u7b49\u4ef7\u7684\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f \u53ef\u4ee5\u901a\u8fc7\u4f30\u8ba1\u6bcf\u79cd\u65b9\u5f0f\u7684cost\u6765\u8bc4\u5224\u65b9\u6cd5\u7684\u597d\u574f \u67e5\u8be2\u4f18\u5316\u4f1a\u9009\u62e9\u6700\u8282\u7ea6\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2 Evaluation Query cost\u7684\u8ba1\u7b97 \u4e3b\u8981\u7684cost\u6765\u6e90\uff1adisk access seeks block read block written cost\u8ba1\u7b97\u7684\u65b9\u5f0f\uff1a\u5728B\u4e2ablocks\u4e2d\u67e5\u8be2S\u6b21\u6240\u6d88\u8017\u7684\u65f6\u95f4=B*\u8f6c\u79fb\u5230\u4e00\u4e2ablock\u7684\u65f6\u95f4+S*\u4e00\u6b21\u67e5\u8be2\u7684\u65f6\u95f4\uff1a$B\\times t_T+S\\times t_S$ \u5176\u4e2d$t_T$ \u8868\u793a\u4e00\u6b21block transfer\u7684\u65f6\u95f4 cost\u4f9d\u8d56\u4e8e\u4e3b\u5b58\u4e2d \u7f13\u51b2\u533a\u7684\u5927\u5c0f \uff1a\u66f4\u591a\u7684\u5185\u5b58\u53ef\u4ee5\u51cf\u5c11disk access \u901a\u5e38\u8003\u8651\u6700\u574f\u7684\u60c5\u51b5\uff1a\u53ea\u63d0\u4f9b\u6700\u5c11\u7684\u5185\u5b58\u6765\u5b8c\u6210\u67e5\u8be2\u5de5\u4f5c","title":"4.3 \u67e5\u8be2\u5904\u7406 QueryProcess"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#431-selectcost","text":"Select \u64cd\u4f5c\u7684cost\u8ba1\u7b97 Algorithm1:\u7ebf\u6027\u641c\u7d22\uff0c\u67e5\u8be2\u6bcf\u4e2ablock\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u67e5\u8be2\u6761\u4ef6 Cost = br block transfers + 1 seek\uff0c\u5176\u4e2d$b_r$ \u662f\u5173\u7cfbr\u4e2d \u5b58\u50a8\u4e86\u8bb0\u5f55\u7684block\u7684\u6570\u91cf \u5982\u679c\u901a\u8fc7\u952e\u6765\u641c\u7d22\uff0c\u5728\u627e\u5230\u7684\u65f6\u5019\u5c31\u505c\u6b62\uff0c\u5219 cost = (br /2) block transfers + 1 seek \u4e8c\u5206\u641c\u7d22\u6b64\u65f6\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u6570\u636e\u4e0d\u662f\u8fde\u7eed\u5b58\u50a8\u7684 Index scan--\u4f7f\u7528\u7d22\u5f15\u8fdb\u884c\u641c\u7d22 Algorithm2: primary index\uff0cequality on key\uff0c\u641c\u7d22\u4e00\u6761\u8bb0\u5f55 $cost = (h_i+1)\\times(t_T+t_S)$ --- hi\u662f\u7d22\u5f15\u7684\u9ad8\u5ea6 Algorithm3: primary index, equality on non-key \u9700\u8981\u641c\u7d22\u591a\u6761\u8bb0\u5f55 \u60f3\u8981\u7684\u7ed3\u679c\u4f1a\u5b58\u50a8\u5728\u8fde\u7eed\u7684block\u4e2d(\u56e0\u4e3a\u6709\u4e3b\u7d22\u5f15) $cost =h_i (t_T + t_S) + t_S + t_T * b$ \u5176\u4e2db\u8868\u793a\u5305\u542b\u5339\u914d\u8bb0\u5f55\u7684block\u603b\u6570 \u5f53\u4f7f\u7528B+\u6811\u4f5c\u4e3a\u7d22\u5f15\u65f6\u53ef\u4ee5\u8282\u7ea6\u4e00\u6b21seek\u7684\u65f6\u95f4\uff0c$cost =h_i (t_T + t_S)+ t_T * b$ \u7b97\u6cd54\uff1aSecondary index \u7528\u5019\u9009\u4e3b\u952e\u4f5c\u4e3a\u7d22\u5f15\u68c0\u7d22\u5355\u6761\u8bb0\u5f55 $cost = (h_i + 1) \\times (t_T + t_S)$ \u7528\u5019\u9009\u4e3b\u952e\u68c0\u7d22\u4e86n\u6761\u8bb0\u5f55(\u4e0d\u4e00\u5b9a\u5728\u540c\u4e00\u4e2ablock\u4e0a\u9762) $Cost = (h_i + n) \\times (t_T + t_S)$ \u6709\u65f6\u5019\u4f1a\u975e\u5e38\u8017\u65f6","title":"4.3.1 select\u7684cost\u4f30\u8ba1"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#432-sortjoincost","text":"Sort\uff1a external sort-merge \u5176\u5b9e\u7c7b\u4f3c\u4e8eads\u91cc\u9762\u7684\u5916\u90e8\u5f52\u5e76\u6392\u5e8f M\u8868\u793a\u5185\u5b58\u7684\u5927\u5c0f\uff0c$b_r$\u8868\u793ablock\u7684\u6570\u91cf \u57fa\u672c\u6b65\u9aa4\u5982\u4e0b create sorted runs merge the runs \u9700\u8981\u7684merge pass\u603b\u6570 $[ \\log_{M-1}(b_r/M)]$ \u521b\u5efa\u548c\u6bcf\u6b21run\u8fc7\u7a0b\u4e2d\u7684disk access\u6570\u91cf 2 br \u5916\u90e8\u6392\u5e8f\u4e2d\u603b\u7684disk access\u6b21\u6570 $(2[ \\log_{M-1}(b_r/M)]+1)b_r$ Join \u64cd\u4f5c\u7684cost\u4f30\u8ba1 nested-loop join \u8ba1\u7b97theta-join\u8868\u8fbe\u5f0f\uff1a$r\\Join_{\\theta} s$ \u7b97\u6cd5\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b c for each tuple tr in r do begin for each tuple ts in s do begin test pair (tr,ts) to see if they satisfy the join condition if they do, add tr \u2022 ts to the result end end block transfer\u6b21\u6570: $n_r\\times b_s+b_r$ seeks\u7684\u6b21\u6570 $n_r+b_r$ block nested-loop join $r\\Join_{\\theta} s$ c for each block Br of r do begin for each block Bs of s do begin for each tuple tr in Br do begin for each tuple ts in Bs do begin Check if (tr,ts) satisfy the join condition if they do, add tr \u2022 ts to the result. \u6700\u574f\u60c5\u51b5\u7684cost block transfer $b_r\\times b_s+b_r$ seeks $2b_r$ \u6700\u597d\u60c5\u51b5\u7684cost block transfers $b_r+b_s$ with 2 seeks \u4f18\u5316\uff1a\u4f7f\u7528M-2\u4e2ablock\u4f5c\u4e3ablocking unit(M\u662f\u5185\u5b58\u53ef\u4ee5\u5bb9\u7eb3\u7684block\u6570\u91cf)\uff0c\u6b64\u65f6\u7684 block transfer\u6b21\u6570=$\\frac{b_r}{M-2}\\times b_s+b_r$ seek\u6b21\u6570= $\\frac{2b_r}{M-2}$ Index nested-loop join \u7d22\u5f15\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u4ee3\u66fffile scan $cost=b_r(t_T+t_s)+c\\times n_r$ \u5176\u4e2dc\u8868\u793a\u904d\u5386\u7d22\u5f15\u548c\u627e\u5230\u6240\u6709\u5339\u914d\u7684s\u4e2d\u7684tuple\u6240\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u53ef\u4ee5\u7528 \u4e00\u6b21s\u4e0a\u7684\u5355\u4e2aselection\u6765\u4f30\u8ba1s\u7684\u503c Merge-Join \u53ea\u80fd\u5728natural-join\u548cequal-join\u4e2d\u4f7f\u7528 block transfer\u7684\u6b21\u6570=$b_r+b_s$\uff0cseek\u7684\u6b21\u6570=$[b_r/b_b]+[b_s/b_b]$ Hash join\uff1a\u4f7f\u7528hash\u51fd\u6570\u8fdb\u884cjoin h maps JoinAttrs values to {0, 1, ..., $n_h$}, \u5c06\u4e24\u4e2a\u5173\u7cfb\u8fdb\u884c\u6bd4\u8f83\u548c\u540c\u7c7b\u578b\u7684\u5339\u914d cost of hash-join block transfer: $3(b_r+b_s)+4n_h$ partition: \u8bfb $b_r+b_s$ blocks \u5199 $(b_r+b_s)+2n_h$ blocks join: \u8bfb$(b_r+b_s)+2n_h$ seeks: $2([b_r/b_b]+[b_s/b_b])$ \u5982\u679c\u6240\u6709\u4e1c\u897f\u90fd\u80fd\u653e\u8fdb\u4e3b\u5b58\u91cc\uff0c\u5219$n_h=0$ \u5e76\u4e14\u4e0d\u9700\u8981partition \u9700\u8981partition\u7684\u65f6\u5019 $cost=2(b_r+b_s[\\log_{M-1}(b_s)-1])+b_r+b_s$ Evaluation of Expression \u8868\u8fbe\u5f0f\u6c42\u503c Materialization \u5b9e\u4f53\u5316 \u4f9d\u6b21\u8fdb\u884c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\uff0c\u6784\u5efa\u524d\u7f00\u6811\u9012\u5f52\u8fdb\u884c Pipelining \u6d41\u6c34\u7ebf\uff0c\u540c\u65f6\u8bc4\u4f30\u591a\u4e2a\u64cd\u4f5c evaluate several operations simultaneously , passing the results of one operation on to the next.","title":"4.3.2 sort\u548cjoin\u7684cost\u4f30\u8ba1"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#44-query-optimization","text":"\u4e24\u79cd\u67e5\u8be2\u4f18\u5316\u7684\u529e\u6cd5 \u627e\u5230\u7b49\u4ef7\u7684\u67e5\u8be2\u6548\u7387\u6700\u9ad8\u7684\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f \u6307\u5b9a\u8be6\u7ec6\u7684\u7b56\u7565\u6765\u5904\u7406\u67e5\u8be2","title":"4.4 \u67e5\u8be2\u4f18\u5316 Query Optimization"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#441","text":"Equivalent Expressions \u7b49\u4ef7\u7684\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f evaluation plan \uff1a\u7c7b\u4f3c\u4e8e\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u524d\u7f00\u6811\uff0c\u8868\u793a\u4e86\u6bcf\u90e8\u64cd\u4f5c\u8fdb\u884c\u7684\u8fc7\u7a0b Cost-based optimization\u57fa\u4e8ecost\u7684\u4f18\u5316 \u57fa\u672c\u6b65\u9aa4 \u7528\u8fd0\u7b97\u6cd5\u5219\u627e\u5230\u903b\u8f91\u4e0a\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f \u6ce8\u91ca\u7ed3\u679c\u8868\u8fbe\u5f0f\u6765\u83b7\u5f97\u67e5\u8be2\u8ba1\u5212 \u9009\u62e9cost\u6700\u4f4e\u7684\u8868\u8fbe\u5f0f cost\u7684\u4f30\u7b97 \u7edf\u8ba1\u4fe1\u606f\u91cf\u7684\u5927\u5c0f\uff0c\u6bd4\u5982tuples\u7684\u6570\u91cf\uff0c\u4e00\u4e2a\u5c5e\u6027\u4e0d\u540c\u53d6\u503c\u7684\u4e2a\u6570 \u4e2d\u95f4\u7ed3\u679c\u7684\u6570\u91cf\uff0c\u7528\u4e8e\u590d\u6742\u8868\u8fbe\u5f0f\u7684\u4f18\u5316 \u7b97\u6cd5\u7684\u6d88\u8017 \u7b49\u4ef7\u8868\u8fbe\u5f0f\u7684\u89c4\u5219 \u5408\u53d6\u9009\u62e9\u548c\u9009\u4e24\u6b21\u7b49\u4ef7\uff1a$\\sigma_{\\theta_1\\and\\theta_2}(E)=\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E))$ \u9009\u62e9\u4e24\u6b21\u7684\u987a\u5e8f\u53ef\u4ee5\u4ea4\u6362\uff1b$\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E))=\\sigma_{\\theta_2}(\\sigma_{\\theta_1}(E))$ \u5d4c\u5957\u7684\u6295\u5f71\u53ea\u9700\u8981\u770b\u6700\u5916\u5c42\u7684\uff1a$\\prod_{L_1}(\\prod_{L_2}(\\dots(E)))=\\prod_{L_1}(E)$ \u9009\u62e9\u53ef\u4ee5\u53d8\u6210\u7b1b\u5361\u5c14\u79ef\u548ctheta join $\\sigma_{\\theta}(E_1\\times E_2)=E_1\\Join_{\\theta}E_2$ $\\sigma_{\\theta_1}(E_1\\Join_{\\theta_2}E_2)=E_1\\Join_{\\theta_1\\and\\theta_2}E_2$ Theta-join\u548c\u81ea\u7136\u8fde\u63a5\u53ef\u4ee5\u6539\u53d8\u8fde\u63a5\u7684\u4e24\u5f20\u8868\u7684\u987a\u5e8f\uff1a$E_1\\Join_{\\theta}E_2=E_2\\Join_{\\theta}E_1$ \u81ea\u7136\u8fde\u63a5\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff1a$(E_1\\Join E_2)\\Join E_3=E_1\\Join (E_2\\Join E_3)$ Theta-join\u7684\u7ed3\u5408\u89c4\u5219 $(E_1\\Join_{\\theta_1} E_2)\\Join_{\\theta_2\\and\\theta_3} E_3=E_1\\Join_{\\theta_1\\and\\theta_3} (E_2\\Join_{\\theta_2} E_3)$ \u9009\u62e9\u64cd\u4f5c\u7684\u4f18\u5316 \u5f53$\\theta_1$ \u4e2d\u7684\u5c5e\u6027\u90fd\u53ea\u51fa\u73b0\u5728E1\u4e2d\u7684\u65f6\u5019\uff1a$\\sigma_{\\theta_1}(E_1\\Join_{\\theta_2}E_2)=\\sigma_{\\theta_1}(E_1)\\Join_{\\theta_2}E_2$ \u5f53$\\theta_1,\\theta_2$ \u5206\u522b\u53ea\u5305\u542bE1,E2\u4e2d\u7684\u5c5e\u6027\u65f6\uff1a$\\sigma_{\\theta_1\\and\\theta_2}(E_1\\Join_{\\theta}E_2)=\\sigma_{\\theta_1}(E_1)\\Join\\sigma_{\\theta_2}(E_2)$ \u6295\u5f71\u64cd\u4f5c\u548cTheta-join\u7684\u6df7\u5408\u8fd0\u7b97 \u5f53\u03b8\u53ea\u5305\u542b$L_1\\or L_2$ \u4e2d\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff1a$\\prod_{L_1\\or L_2}(E_1\\Join_{\\theta}E_2)=(\\prod_{L_1}(E_1))\\Join_{\\theta}(\\prod_{L_2}(E_2))$ \u96c6\u5408\u8fd0\u7b97\u4e2d\u7684\u4ea4\u8fd0\u7b97\u548c\u5e76\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b \u9009\u62e9\u64cd\u4f5c\u4e2d\u6709\u96c6\u5408\u7684\u8fd0\u7b97\u65f6\u6ee1\u8db3\u5206\u914d\u5f8b(\u6bd4\u5982\u8fdb\u884c\u5dee\u8fd0\u7b97\u518d\u9009\u62e9\u7b49\u4ef7\u4e8e\u5206\u522b\u9009\u62e9\u518d\u5dee\u8fd0\u7b97) \u6295\u5f71\u64cd\u4f5c\u4e2d\u6709\u5e76\u8fd0\u7b97\u65f6\u6ee1\u8db3\u5206\u914d\u5f8b Join\u7684\u987a\u5e8f\u4f18\u5316\uff1a\u5f53\u6709\u82e5\u5e72\u5f20\u8868\u9700\u8981join\u7684\u65f6\u5019\uff0c \u5148\u4ecejoin\u540e\u6570\u636e\u91cf\u6700\u5c0f\u7684\u5f00\u59cb \u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u76f8\u540c\u7684\u5b50\u8868\u8fbe\u5f0f\u6765\u51cf\u5c11\u8868\u8fbe\u5f0f\u8f6c\u5316\u65f6\u7684\u7a7a\u95f4\u6d88\u8017\uff0c\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u51cf\u5c11\u65f6\u95f4\u6d88\u8017","title":"4.4.1 \u7b49\u4ef7\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#442-cost","text":"\u57fa\u672c\u7684\u53d8\u91cf\u5b9a\u4e49 $n_r$ \u8868\u793a\u5173\u7cfbr\u4e2d\u5143\u7ec4\u7684\u6570\u91cf(\u4e5f\u5c31\u662f\u5173\u7cfbr\u7684size) $b_r$ \u5305\u542br\u4e2d\u5143\u7ec4\u7684block\u6570\u91cf $l_r$ r\u4e2d\u4e00\u4e2a\u5143\u7ec4\u7684size $f_r$ block factor of r \u6bd4\u5982\u53ef\u4ee5\u9009\u53d6\u4e00\u4e2ablock\u80fd\u5bb9\u7eb3\u7684r\u4e2d\u5143\u7ec4\u7684\u5e73\u5747\u6570\u91cf V(A, r) \u5173\u7cfbr\u4e2d\u5c5e\u6027A\u53ef\u80fd\u53d6\u5230\u7684\u4e0d\u540c\u7684\u503c\u7684\u6570\u91cf \u5f53\u5173\u7cfbr\u4e2d\u7684\u5143\u7ec4\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u65f6\u5019 $b_r=\\frac{n_r}{f_r}$ \u9009\u62e9\u7684\u4f30\u8ba1 \u4ecer\u4e2d\u9009\u62e9A\u5c5e\u6027=x\u7684$cost = \\frac{n_r}{V(A,r)}$ \u9009\u62e9A\u5c5e\u6027\u5c0f\u4e8ex\u7684cost $cost=0$ if x < min(A,r) $cost=n_r\\times \\frac{x-min(A,r)}{max(A,r)-min(A,r)}$ \u9009\u62e9A\u5c5e\u6027\u5927\u4e8ex\uff0c\u548c\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u662f\u5bf9\u79f0\u7684 complex selection \u591a\u91cd\u9009\u62e9 \u5047\u8bbe$s_i$\u662f\u6ee1\u8db3\u6761\u4ef6$\\theta_i$\u7684\u5143\u7ec4\u7684\u4e2a\u6570 conjunction $cost=n_r\\times\\frac{s_1\\times s_2\\times \u2026\\times s_n}{n_r^n}$ disjunction $cost=n_r\\times(1-(1-\\frac{s_1}{n_r})\\times\u2026\\times(1-\\frac{s_n}{n_r}))$ negation $cost=n_r-size(\\delta_{\\theta}(r))$ join \u7684\u4f30\u8ba1 \u7b1b\u5361\u5c14\u79ef\u7684\u60c5\u51b5\u4e0b\uff0c\u5173\u7cfbR,S\u7684join\u6700\u7ec8\u5143\u7ec4\u7684\u4e2a\u6570\u4e3a$n_r\\times n_s$ \u5982\u679cR\u2229S\u4e3a\u7a7a\uff0c\u5219\u81ea\u7136\u8fde\u63a5\u7684\u7ed3\u679c\u548c\u7b1b\u5361\u5c14\u79ef\u7684\u7ed3\u679c\u76f8\u540c \u5982\u679c\u975e\u7a7a\uff0c\u4e14R\u2229S\u662fR\u7684key\uff0c\u5219R,S\u7684\u81ea\u7136\u8fde\u63a5\u6700\u7ec8\u7ed3\u679c\u4e2d\u7684\u5143\u7ec4\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7r \u5982\u679cR\u2229S\u7684\u7ed3\u679c\u662fS\u5230R\u7684\u5916\u952e\uff0c\u5219\u6700\u540e\u7684\u5143\u7ec4\u6570\u548cs\u4e2d\u7684\u5143\u7ec4\u6570\u76f8\u540c \u4e00\u822c\u60c5\u51b5 \u81ea\u7136\u8fde\u63a5\u7684\u6700\u7ec8\u7ed3\u679c\u7684size\u4f30\u8ba1\u503c\u4e3a$\\frac{n_r\\times n_s}{max(V(A,r),V(A,s))}$ \u5176\u4ed6\u64cd\u4f5c\u7684\u4f30\u8ba1 \u6295\u5f71\u7684size=V(A,r) \u805a\u5408\u64cd\u4f5c\u7684size=V(A,r) \u96c6\u5408\u64cd\u4f5c\uff1a\u6839\u636eDNA\u91cc\u7684\u9ad8\u4e2d\u6570\u5b66\u77e5\u8bc6\u81ea\u5df1\u7f16 \u5916\u90e8\u8fde\u63a5\uff1a \u5de6\u5916\u8fde\u63a5\u7684size = \u81ea\u7136\u8fde\u63a5\u7684size + r\u7684size \u53f3\u5916\u8fde\u63a5\u7684size = \u81ea\u7136\u8fde\u63a5\u7684size + s\u7684size \u5168\u8fde\u63a5\u7684size = \u81ea\u7136\u8fde\u63a5\u7684size + r\u7684size + s \u7684size \u4e0d\u540c\u503c\u4e2a\u6570\u7684\u4f30\u8ba1 \u57fa\u4e8ecost\u7684join\u987a\u5e8f\u4f18\u5316 n\u4e2a\u5173\u7cfb\u8fdb\u884c\u81ea\u7136\u8fde\u63a5\u6709$\\frac{(2n-2)!}{(n-1)!}$\u79cd\u4e0d\u540c\u7684join\u987a\u5e8f \u627e\u5230\u6700\u5408\u9002\u7684join-tree\u7684\u529e\u6cd5\uff1a\u9012\u5f52\u5730\u5c1d\u8bd5,\u5c40\u90e8\u641c\u7d22\u7684\u529e\u6cd5 Left Deep Join Trees\u5de6\u503e\u6811\uff0c\u5f53\u7ed3\u5408\u65b9\u5f0f\u53ea\u8003\u8651\u5de6\u503e\u6811\u7684\u65f6\u5019\uff0c\u627e\u5230\u6700\u4f18\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n2^n)$ Heuristic Optimization \u63a2\u7d22\u5f0f\u7684\u4f18\u5316 \u5c3d\u65e9\u8fdb\u884cselection \u5c3d\u65e9\u8fdb\u884cprojection \u9009\u62e9\u6700\u4e25\u683c\u7684selection\u548coperations\u64cd\u4f5c \u7528\u4e8e\u67e5\u8be2\u4f18\u5316\u7684\u7ed3\u6784 pipelined evaluation plan optimization cost budget plan catching","title":"4.4.2 cost\u7684\u4f30\u8ba1"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#_5","text":"\u8fd9\u4e00\u90e8\u5206\u611f\u89c9\u548c\u64cd\u4f5c\u7cfb\u7edf\u5173\u7cfb\u6bd4\u8f83\u5bc6\u5207","title":"\u7b2c\u4e94\u90e8\u5206\uff1a\u4e8b\u52a1\u5904\u7406"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#51","text":"","title":"5.1 \u4e8b\u52a1\u548c\u5e76\u53d1\u63a7\u5236"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#511","text":"\u4e8b\u52a1\u7684\u6982\u5ff5 \u4e8b\u52a1\u65f6\u7a0b\u5e8f\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4f1a\u5f15\u8d77\u4e00\u4e9b\u6570\u636e\u9879\u7684\u66f4\u65b0\uff0c\u9700\u8981\u89e3\u51b3\u7684\u4e24\u4e2a\u95ee\u9898\uff1a \u6570\u636e\u5e93\u7cfb\u7edf\u7684\u786c\u4ef6\u95ee\u9898\u548c\u7cfb\u7edf\u5954\u6e83 \u591a\u4e8b\u52a1\u7684\u5e76\u884c\u6267\u884c \u4e8b\u52a1\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u65f6\u5019\u6570\u636e\u5e93\u90fd\u5fc5\u987b\u662fconsistent\u7684 \u4e8b\u7269\u7684\u56db\u4e2a\u6027\u8d28ACDI\uff1a \u4e8b\u52a1\u7684\u539f\u5b50\u6027 Atomicity \u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u6b65\u9aa4\u53ea\u80fd\u5b8c\u5168\u6267\u884c(commit)\u6216\u8005\u56de\u6eda(rollback) \u4e8b\u52a1\u7684\u6301\u4e45\u6027 Durability \u66f4\u65b0\u4e4b\u540e\u54ea\u6015\u8f6f\u786c\u4ef6\u51fa\u4e86\u95ee\u9898\uff0c\u66f4\u65b0\u7684\u6570\u636e\u4e5f\u5fc5\u987b\u5b58\u5728 \u4e8b\u52a1\u7684\u4e00\u81f4\u6027 Consistency \u5355\u72ec\u6267\u884c\u4e8b\u52a1\u53ef\u4ee5\u4fdd\u6301\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027 \u4e8b\u52a1\u7684\u72ec\u7acb\u6027 Isolation \u4e8b\u52a1\u5728\u5e76\u884c\u6267\u884c\u7684\u65f6\u5019\u4e0d\u80fd\u611f\u77e5\u5230\u5176\u4ed6\u4e8b\u52a1\u6b63\u5728\u6267\u884c\uff0c\u6267\u884c\u4e2d\u95f4\u7ed3\u679c\u5bf9\u4e8e\u5176\u4ed6\u5e76\u53d1\u6267\u884c\u7684\u4e8b\u52a1\u662f\u9690\u85cf\u7684 \u4e8b\u52a1\u7684\u72b6\u6001 active \u521d\u59cb\u72b6\u6001\uff0c\u6267\u884c\u4e2d\u7684\u4e8b\u52a1\u90fd\u5904\u4e8e\u8fd9\u4e2a\u72b6\u6001 partially committed \u5728\u6700\u540e\u4e00\u53e5\u6307\u4ee4\u88ab\u6267\u884c\u4e4b\u540e failed \u5728\u53d1\u73b0\u6267\u884c\u5931\u8d25\u4e4b\u540e aborted \u56de\u6eda\u7ed3\u675f\uff0c\u4f1a\u9009\u62e9\u662f \u91cd\u65b0\u6267\u884c\u4e8b\u52a1 \u8fd8\u662f\u7ed3\u675f committed \u4e8b\u52a1\u88ab\u5b8c\u6574\u7684\u6267\u884c","title":"5.1.1 \u57fa\u672c\u7684\u6982\u5ff5"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#512","text":"\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4e8b\u52a1\uff0c\u53ef\u4ee5\u63d0\u9ad8\u8fd0\u884c\u7684\u6548\u7387\uff0c\u51cf\u5c11\u5e73\u5747\u6267\u884c\u65f6\u95f4 \u5e76\u53d1\u63a7\u5236\u5904\u7406\u673a\u5236\uff1a\u8ba9\u5e76\u53d1\u7684\u4e8b\u52a1\u72ec\u7acb\u8fdb\u884c\uff0c\u63a7\u5236\u5e76\u53d1\u4e8b\u52a1\u4e4b\u95f4\u7684\u4ea4\u6d41 Schedules \u8c03\u5ea6 \u4e00\u7cfb\u5217\u7528\u4e8e\u6307\u5b9a\u5e76\u53d1\u4e8b\u52a1\u7684\u6267\u884c\u987a\u5e8f\u7684\u6307\u4ee4 \u9700\u8981\u5305\u542b\u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u6307\u4ee4 \u9700\u8981\u4fdd\u8bc1\u5355\u4e2a\u4e8b\u52a1\u4e2d\u7684\u6307\u4ee4\u7684\u76f8\u5bf9\u987a\u5e8f \u4e8b\u52a1\u7684\u6700\u540e\u4e00\u6b65 \u6210\u529f\u6267\u884c\uff0c\u6700\u540e\u4e00\u6b65\u662fcommit instruction \u6267\u884c\u5931\u8d25\u6700\u540e\u4e00\u6b65\u662fabort instruction serial schedule \u4e32\u884c\u8c03\u5ea6\uff1a\u4e00\u4e2a\u4e8b\u52a1\u8c03\u5ea6\u5b8c\u6210\u4e4b\u540e\u518d\u8fdb\u884c\u4e0b\u4e00\u4e2a equivalent schedule \u7b49\u4ef7\u8c03\u5ea6\uff1a\u6539\u53d8\u5904\u7406\u7684\u987a\u5e8f\u4f46\u662f\u548c\u539f\u6765\u7b49\u4ef7 Serializability \u53ef\u4e32\u884c\u5316 \u57fa\u672c\u5047\u8bbe\uff1a\u4e8b\u52a1\u4e0d\u4f1a\u7834\u574f\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u53ea\u8003\u8651\u8bfb\u5199\u4e24\u79cd\u64cd\u4f5c \u51b2\u7a81\u53ef\u4e32\u884c\u5316 conflict serializability \u540c\u65f6\u8bfb\u4e0d\u5f15\u53d1\u51b2\u7a81\uff0c\u800c\u8bfb\u5199\u5e76\u884c\u6216\u8005\u540c\u65f6\u5199\u4f1a\u5f15\u53d1\u51b2\u7a81 conflict equivalent \uff1a\u4e24\u4e2a\u8c03\u5ea6\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u4e00\u4e9b\u4e0d\u51b2\u7a81\u7684\u6307\u4ee4\u6765\u8f6c\u6362\uff0c\u5c31\u53eb\u505a\u51b2\u7a81\u7b49\u4ef7 conflict serializable \uff1a\u51b2\u7a81\u53ef\u4e32\u884c\u5316\uff1a\u5f53\u4e14\u4ec5\u5f53\u4e00\u4e2a\u8c03\u5ea6S\u53ef\u4ee5\u548c\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\u7b49\u4ef7 Precedence graph \u524d\u9a71\u56fe \u56fe\u4e2d\u7684\u9876\u70b9\u662f\u5404\u4e2a\u4e8b\u52a1\uff0c\u5f53\u4e8b\u52a1$T_i, T_j$ \u51b2\u7a81\u5e76\u4e14$T_i$ \u5148\u8bbf\u95ee\u51fa\u73b0\u51b2\u7a81\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u5c31\u753b\u4e00\u6761\u8fb9$T_i\\rightarrow T_j$ \u4e00\u4e2a\u8c03\u5ea6\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u5f53\u4e14\u4ec5\u5f53\u524d\u9a71\u56fe\u662f\u65e0\u73af\u56fe \u5bf9\u4e8e\u65e0\u73af\u56fe\uff0c\u53ef\u4ee5\u4f7f\u7528 \u62d3\u6251\u903b\u8f91\u6392\u5e8f \u83b7\u5f97\u4e00\u4e2a\u5408\u9002\u7684\u6267\u884c\u987a\u5e8f Recoverable Schedules \u53ef\u6062\u590d\u8c03\u5ea6 database must ensure that schedules are recoverable. \u4e0d\u7136\u4f1a\u51fa\u73b0dirty read \u5982\u679c\u4e00\u4e2a\u4e8b\u52a1$T_1$\u8981\u8bfb\u53d6\u67d0\u4e00\u90e8\u5206\u6570\u636e\uff0c\u800c$T_2$\u8981\u5199\u5165\u540c\u4e00\u90e8\u5206\u7684\u6570\u636e\uff0c\u5219$T_1$\u5fc5\u987b\u5728$T_2$commit\u4e4b\u524d\u5c31commit\uff0c\u5426\u5219\u5c31\u4f1a\u9020\u6210dirty read Cascading Rollbacks \u7ea7\u8054\u56de\u6eda \u5355\u4e2a\u4e8b\u52a1\u7684fail\u9020\u6210\u4e86\u4e00\u7cfb\u5217\u7684\u4e8b\u52a1\u56de\u6eda Cascadeless Schedules \u907f\u514d\u7ea7\u8054\u56de\u6eda\u7684\u8c03\u5ea6 \u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u4e8b\u52a1a\u548cb\u5e76\u4e14b\u9700\u8981\u8bfb\u5165\u4e00\u4e2aa\u5199\u5165\u7684\u6570\u636e\uff0c\u90a3\u4e48a\u5fc5\u987b\u5728b\u7684\u8bfb\u64cd\u4f5c\u5f00\u59cb\u4e4b\u524dcommit Cascadeless Schedules \u4e5f\u662f\u53ef\u6062\u590d\u7684\u8c03\u5ea6","title":"5.1.2 \u4e8b\u52a1\u7684\u5e76\u53d1\u6267\u884c"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#513-concurrency-control","text":"Lock-Based Protocols \u57fa\u4e8e\u9501\u7684\u534f\u8bae lock\u662f\u4e00\u79cd\u63a7\u5236\u5e76\u53d1\u8bbf\u95ee\u540c\u4e00\u6570\u636e\u9879\u7684\u673a\u5236 \u4e24\u79cdlock mode exclusive(X) \uff1a\u8868\u793a\u6570\u636e\u9879\u53ef\u4ee5\u8bfb\u548c\u5199\uff0c\u7528lock-X\u8868\u793a shared(S) \uff1a\u8868\u793a\u6570\u636e\u9879\u53ea\u80fd\u8bfb\uff0c\u7528lock-S \u8868\u793a \u4e24\u4e2a\u4e8b\u52a1\u7684\u51b2\u7a81\u77e9\u9635\uff1a S X S true flase X false false \u5982\u679c\u8bf7\u6c42\u7684\u9501\u548c\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8fd9\u4e2a\u6570\u636e\u9879\u5df2\u7ecf\u6709\u7684\u9501\u4e0d\u51b2\u7a81\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u4e8b\u52a1\u6279\u51c6\u4e00\u4e2a\u9501 \u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e\u9879\uff0c\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u7684\u4e8b\u52a1\u6301\u6709S\u9501\uff0c\u4f46\u662f\u5982\u679c\u6709\u4e00\u4e2a\u4e8b\u52a1\u6301\u6709X\u9501\uff0c\u5176\u4ed6\u7684\u4e8b\u52a1\u90fd\u4e0d\u53ef\u4ee5\u6301\u6709\u8fd9\u4e2a\u6570\u636e\u9879\u7684\u9501 \u5982\u679c\u4e00\u4e2a\u9501\u6ca1\u6709\u88ab\u6279\u51c6\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8bf7\u6c42\u4e8b\u52a1\uff0c\u7b49\u5230\u6240\u6709\u51b2\u7a81\u7684\u9501\u88abrelease\u4e4b\u540e\u518d\u7533\u8bf7 \u9501\u534f\u8bae\u4e2d\u7684\u7279\u6b8a\u60c5\u51b5 dead lock \u6b7b\u9501\uff1a\u4e24\u4e2a\u4e8b\u52a1\u4e2d\u7684\u9501\u4e92\u76f8\u7b49\u5f85\u9020\u6210\u4e8b\u52a1\u65e0\u6cd5\u6267\u884c\uff0c\u6bd4\u5982\u4e8b\u52a12\u7684\u9501\u9700\u8981\u4e8b\u52a11\u5148release\uff0c\u4f46\u662f\u4e8b\u52a11\u7684release\u6b65\u9aa4\u518d\u4e8b\u52a12\u7684\u7533\u8bf7\u9501\u540e\u9762\uff0c\u5c31\u4f1a\u9020\u6210\u4e8b\u52a112\u7684\u6b7b\u9501 Starvation \u9965\u8352\uff1a\u4e00\u4e2a\u4e8b\u52a1\u5728\u7b49\u4e00\u4e2a\u6570\u636e\u9879\u7684Xlock\uff0c\u4e00\u7fa4\u522b\u7684\u4e8b\u52a1\u5728\u7b49\u4ed6release\uff0c\u9020\u6210\u9965\u8352 Two-Parse Locking Protocol \u4e8c\u9636\u6bb5\u9501\u534f\u8bae\uff1a\u786e\u4fdd\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u8c03\u5ea6 \u4e24\u4e2a\u9636\u6bb5 growing\u548cshrinking\uff0cgrowing\u53ea\u63a5\u53d7\u9501\u800c\u4e0d\u91ca\u653e\uff0cshrinking\u53cd\u4e4b \u65e0\u6cd5\u89e3\u51b3\u6b7b\u9501\u7684\u95ee\u9898 strict two-phase locking \u6bcf\u4e2a\u4e8b\u52a1\u90fd\u8981\u4fdd\u6301\u6240\u6709\u7684exclusive\u9501\u76f4\u5230\u7ed3\u675f \u4e3a\u4e86\u89e3\u51b3\u7ea7\u8054\u56de\u6eda\u7684\u95ee\u9898 Rigorous two-phase locking \u6240\u6709\u7684\u9501\u5fc5\u987b\u4fdd\u6301\u5230\u4e8b\u52a1commit\u6216\u8005abort Lock Conversions\u9501\u8f6c\u6362\uff1a\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06S\u9501\u5347\u7ea7\u4e3aX\u9501\u7684\u673a\u5236 \u4e24\u4e2a\u9636\u6bb5 \u7b2c\u4e00\u4e2a\u9636\u6bb5\u53ef\u4ee5\u8bbe\u7f6eS\u548cX\u9501\uff0c\u4e5f\u53ef\u4ee5\u5347\u7ea7S\u9501 \u7b2c\u4e8c\u4e2a\u9636\u6bb5\u53ef\u4ee5\u91ca\u653eS\u548cX\u9501\uff0c\u4e5f\u53ef\u4ee5\u964d\u7ea7X\u9501 \u4e8b\u52a1\u4e0d\u9700\u8981\u663e\u5f0f\u8c03\u7528\u6240\u5f97\u8bf7\u6c42\uff0c\u6bd4\u5982read\u548cwrite\u7684\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b \u6240\u6709\u7684\u9501\u5728\u4e8b\u52a1commit\u6216\u8005abort\u4e4b\u540e\u518d\u88ab\u91ca\u653e c if Ti has a lock on D then read(D) else begin if necessary wait until no other transaction has a lock-X on D grant Ti a lock-S on D; read(D) end c if Ti has a lock-X on D then write(D) else begin if necessary wait until no other trans. has any lock on D, if Ti has a lock-S on D then upgrade lock on D to lock-X else grant Ti a lock-X on D write(D) end; \u9501\u7684\u5b9e\u73b0\uff1aLock Manager\u53ef\u4ee5\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\u6765\u63a5\u6536\u4e8b\u52a1\u53d1\u51fa\u7684\u9501\u548c\u89e3\u9501\u8bf7\u6c42 Lock Manager\u4f1a\u56de\u590d\u7533\u8bf7\u9501\u7684\u8bf7\u6c42 \u53d1\u51fa\u8bf7\u6c42\u7684\u4e8b\u52a1\u4f1a\u7b49\u5f85\u8bf7\u6c42\u88ab\u56de\u590d\u518d\u7ee7\u7eed\u5904\u7406 lock manager\u7ef4\u62a4\u4e00\u4e2a\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7ed3\u6784lock-table\u6765\u8bb0\u5f55\u5df2\u7ecf\u53d1\u51fa\u7684\u6279\u51c6 Lock table \u662f\u4e00\u4e2a in-memory\u7684hash\u8868 \u901a\u8fc7\u88ab\u4e0a\u9501\u7684\u6570\u636e\u9879\u4f5c\u4e3a\u7d22\u5f15\uff0c\u9ed1\u6846\u4ee3\u8868\u4e0a\u9501\uff0c\u800c\u767d\u6846\u8868\u793a\u5728\u7b49\u5f85 \u65b0\u7684\u4e0a\u9501\u8bf7\u6c42\u88ab\u653e\u5728\u961f\u5217\u7684\u672b\u7aef\uff0c\u5e76\u4e14\u5728\u548c\u5176\u4ed6\u9501\u517c\u5bb9\u7684\u65f6\u5019\u4f1a\u88ab\u6388\u6743\u4e0a\u9501 \u89e3\u9501\u7684\u8bf7\u6c42\u4f1a\u5220\u9664\u5bf9\u5e94\u7684\u8bf7\u6c42\uff0c\u68c0\u67e5\u540e\u9762\u7684\u8bf7\u6c42\u662f\u5426\u53ef\u4ee5\u88ab\u6388\u6743 \u5982\u679c\u4e00\u4e2a\u4e8b\u52a1aborts\u4e86\uff0c\u6240\u6709\u8be5\u4e8b\u52a1\u7684\u8bf7\u6c42\u90fd\u4f1a\u88ab\u5220\u9664 lock-manager\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u8bb0\u5f55\u6bcf\u4e2a\u4e8b\u52a1\u4e0a\u9501\u60c5\u51b5\u7684\u8868\u6765\u63d0\u9ad8\u64cd\u4f5c\u7684\u6548\u7387 Deadlock prevention protocols \u6b7b\u9501\u4fdd\u62a4\u534f\u8bae\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u5165\u6b7b\u9501 predeclaration \u6267\u884c\u4e4b\u524d\u5148\u68c0\u67e5\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\uff0c\u4fdd\u8bc1\u4e00\u4e2a\u4e8b\u52a1\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u5bf9\u6d89\u53ca\u5230\u7684\u6240\u6709\u7684\u6570\u636e\u9879\u90fd\u4e0a\u9501 graph-based protocol\uff1a\u4f7f\u7528\u504f\u5e8f\u6765\u786e\u5b9a\u6570\u636e\u9879\u4e0a\u9501\u7684\u987a\u5e8f wait-die scheme \u88ab\u52a8 \u8001\u7684\u4e8b\u52a1\u7b49\u5f85\u65b0\u4e8b\u52a1\u91ca\u653e\uff0c\u4f46\u662f\u65b0\u7684\u4e8b\u52a1\u4e0d\u7b49\u8001\u7684\u800c\u662f\u76f4\u63a5\u56de\u6eda wound-wait scheme \u4e3b\u52a8 \u8001\u7684\u4e8b\u52a1\u5f3a\u5236\u8ba9\u65b0\u7684\u4e8b\u52a1\u56de\u6eda\u800c\u4e0d\u7b49\u5f85\u5176\u91ca\u653e\uff0c\u65b0\u7684\u4e8b\u52a1\u4f1a\u7b49\u8001\u7684\u4e8b\u52a1\u7ed3\u675f Timeout-Based Schemes \u53ea\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fc7\u4e86\u65f6\u95f4\u5c31\u56de\u6eda \u5bb9\u6613\u5b9e\u73b0\uff0c\u4f46\u662f\u4f1a\u5bfc\u81f4starvation Deadlock Detection \u6b7b\u9501\u68c0\u6d4b wait-for \u56fe: \u6240\u6709\u7684\u4e8b\u52a1\u8868\u793a\u56fe\u4e2d\u7684\u70b9\uff0c\u5982\u679c\u4e8b\u52a1i\u9700\u8981j\u91ca\u653e\u4e00\u4e2adata item\u5219\u56fe\u4e2d\u753b\u4e00\u6761\u70b9i\u5230\u70b9j\u7684\u6709\u5411\u8fb9\uff0c\u5982\u679c\u56fe\u4e2d\u6709\u73af\uff0c\u8bf4\u660e\u7cfb\u7edf\u5b58\u5728\u4e00\u4e2a\u6b7b\u9501\u2014\u2014\u8ddf\u524d\u9a71\u56fe\u5f88\u76f8\u4f3c \u6b7b\u9501\u6062\u590d total rollback \u5c06\u4e8b\u52a1abort\u4e4b\u540e\u91cd\u542f partial rollback \u4e0d\u76f4\u63a5abort\u800c\u5b9e\u4ec5\u56de\u6eda\u5230\u80fd\u89e3\u9664\u6b7b\u9501\u7684\u72b6\u6001 \u540c\u4e00\u4e2a\u4e8b\u52a1\u7ecf\u5e38\u53d1\u751f\u6b7b\u9501\u4f1a\u5bfc\u81f4starvation\uff0c\u56e0\u6b64\u907f\u514dstarvation\u7684\u8fc7\u7a0b\u4e2dcost\u8981\u8003\u8651\u56de\u6eda\u7684\u6b21\u6570 Multiple Granularity \u591a\u7c92\u5ea6 \u5141\u8bb8\u6570\u636e\u9879\u5177\u6709\u4e0d\u540c\u7684\u5927\u5c0f\uff0c\u5e76\u5b9a\u4e49\u6570\u636e\u7c92\u5ea6\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5176\u4e2d\u5c0f\u7c92\u5ea6\u5d4c\u5957\u5728\u5927\u7c92\u5ea6\u4e2d \u53ef\u4ee5\u7528\u6811\u5f62\u7ed3\u6784\u6765\u8868\u793a \u9501\u7684\u7c92\u5ea6 (level in tree where locking is done) fine granularity(lower in tree) \u9ad8\u5e76\u53d1\uff0c\u9ad8\u5f00\u9500 coarse granularity(higher in tree) \u4f4e\u5e76\u53d1\uff0c\u4f4e\u5f00\u9500 \u6700\u9ad8\u7b49\u7ea7\u7684\u662f\u6574\u4e2aDB \u6700\u4f4e\u7b49\u7ea7\u7684\u662f\u533a\u57df\uff0c\u6587\u4ef6\u548c\u8bb0\u5f55 \u6269\u5c55\u7684Lock Modes intention-shared (IS): indicates explicit locking at a lower level of the tree but only with shared locks. intention -exclusive (IX): indicates explicit locking at a lower level with exclusive or shared locks shared and intention -exclusive (SIX): the subtree rooted by that node is locked explicitly in shared mode and explicit locking is being done at a lower level with exclusive-mode locks. \u51b2\u7a81\u77e9\u9635\u5982\u4e0b \u8fd9\u90e8\u5206\u611f\u89c9\u4e0d\u592a\u50cf\u4f1a\u8003\u7684\u6837\u5b50\uff0c\u5148\u4e0d\u7ba1\u4e86","title":"5.1.3 Concurrency Control \u5e76\u53d1\u63a7\u5236"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#52-recovery-system","text":"\u6545\u969c\u7684\u5206\u7c7b Transaction failure \u4e8b\u52a1\u9519\u8bef\uff1a\u5305\u542b\u903b\u8f91\u9519\u8bef\u548c\u7cfb\u7edf\u9519\u8bef\uff0c\u6b7b\u9501\u5c5e\u4e8e\u7cfb\u7edf\u9519\u8bef System crash \u7cfb\u7edf\u5d29\u6e83\u5bfc\u81f4\u7684\u6545\u969c(\u78c1\u76d8\u6ca1\u51fa\u4e8b) Disk failure \u78c1\u76d8\u4e2d\u7684\u95ee\u9898\u5bfc\u81f4\u78c1\u76d8\u5b58\u50a8\u88ab\u9500\u6bc1 \u6062\u590d\u7b97\u6cd5\uff1a\u4fdd\u6301\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u548c\u6301\u4e45\u6027 \u5728\u666e\u901a\u4e8b\u52a1\u5904\u7406\u4e2d\u8981\u4fdd\u8bc1\u6709\u8db3\u591f\u7684\u4fe1\u606f\u4fdd\u8bc1\u53ef\u4ee5\u4ece\u6545\u969c\u4e2d\u6062\u590d \u5728\u6545\u969c\u53d1\u751f\u4e4b\u540e\u8981\u4fdd\u6301\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u548c\u6301\u4e45\u6027 Data Access \u6570\u636e\u8bbf\u95ee\u56de\u987e \u7269\u7406block\u662f\u78c1\u76d8\u4e0a\u7684\u533a\u5206 \u7f13\u51b2block\u662f\u5728\u4e3b\u5b58\u4e2d\u7684block \u78c1\u76d8\u548c\u4e3b\u5b58\u4e4b\u95f4\u7684\u6570\u636e\u79fb\u52a8\u4f9d\u8d56input\u548coutput\u64cd\u4f5c \u6bcf\u4e2a\u4e8b\u52a1$T_i$ \u5728\u5185\u5b58\u4e2d\u6709\u81ea\u5df1\u7684work-area\uff0c\u5e76\u4e14\u62f7\u8d1d\u4e86\u4e00\u4efd\u8be5\u4e8b\u52a1\u8981\u7528\u5230\u7684\u5168\u90e8\u6570\u636e \u4e8b\u52a1\u901a\u8fc7read\u548cwrite\u64cd\u4f5c\u628a\u6570\u636e\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u533a\u57df\u548cbuffer blocks\u533a\u95f4\u4e4b\u95f4\u8fdb\u884c\u4f20\u9012 \u5982\u4f55\u5728\u4e8b\u52a1failure\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u4fdd\u8bc1\u539f\u5b50\u6027 \u5148\u628a\u6570\u636e\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5b58\u5230\u6570\u636e\u5e93\u4e2d \u7136\u540e\u5728\u63d0\u4ea4\u70b9\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\u5c31\u7acb\u9a6c\u56de\u6eda \u4f46\u8fd9\u4e2a\u65b9\u6cd5\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u662f\u4e16\u4e0a\u6ca1\u6709\u88ab\u91c7\u7528","title":"5.2 Recovery System \u4e8b\u52a1\u6062\u590d"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#521-log-based-recovery","text":"\u65e5\u5fd7(log)\u88ab\u5b58\u50a8\u5728\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d\uff0c\u5305\u542b\u4e00\u7cfb\u5217\u7684\u65e5\u5fd7\u8bb0\u5f55 \u4e8b\u52a1\u5f00\u59cb <T start> \u5199\u64cd\u4f5c\u4e4b\u524d\u4e4b\u524d\u7684\u65e5\u5fd7\u8bb0\u5f55 <Ti,X,V1,V2> (X)\u662f\u5199\u7684\u4f4d\u7f6e\uff0cV1\uff0cV2\u5206\u522b\u662f\u5199\u4e4b\u524d\u548c\u4e4b\u540e\u7684X\u5904\u7684\u503c \u4e8b\u52a1\u7ed3\u675f\u7684\u65f6\u5019\u5199\u5165 <Ti commit> \u66f4\u65b0\u4e8b\u52a1\u5bfc\u81f4\u7684\u4e0d\u4e00\u81f4\u6027 \u65b0\u7684\u6570\u636e\u5728\u63d0\u4ea4\u7684\u65f6\u5019\u4e0d\u4e00\u5b9a\u662f\u5b89\u5168\u7684\uff1a\u9519\u8bef\u53d1\u751f\u65f6\u96be\u4ee5\u4fdd\u62a4\u6539\u53d8\u540e\u7684\u503c\u4e0d\u53d8 \u65e7\u7684\u6570\u636e\u5728\u63d0\u4ea4\u4e4b\u524d\u4e0d\u4e00\u5b9a\u662f\u5b89\u5168\u7684\uff1a\u5728commit\u4e4b\u524d\u53d1\u751f\u9519\u8bef\u5c06\u65e0\u6cd5\u56de\u6eda\u5230\u539f\u6765\u7684\u503c \u5bf9\u4e8e\u66f4\u65b0\u4e8b\u52a1\u7684\u4e24\u6761\u89c4\u5219 commit rule\uff1a\u65b0\u7684\u6570\u636e\u5728commit\u4e4b\u524d\u5fc5\u987b\u88ab\u5199\u5728 \u975e\u6613\u5931\u6027 \u7684\u5b58\u50a8\u5668\u4e2d logging rule\uff1a\u65e7\u7684\u503c\u5728\u65b0\u7684\u5199\u5165\u4e4b\u524d\u9700\u8981\u88ab\u5199\u5728\u65e5\u5fd7\u91cc \u65e5\u5fd7\u4e2d\u5199\u5165commit\u7684\u65f6\u5019\u89c6\u4e3a\u4e00\u4e2a\u4e8b\u52a1\u88ab\u63d0\u4ea4\u4e86\uff0c\u4f46\u6b64\u65f6buffer\u4e2d\u53ef\u80fd\u8fd8\u5728\u8fdb\u884cwrite\u64cd\u4f5c\uff0c\u56e0\u4e3alog\u7684\u5199\u5165\u5148\u4e8e\u64cd\u4f5c deferred database modification \u5ef6\u8fdf\u6570\u636e\u5e93\u66f4\u65b0\uff1a\u5148\u628a\u6240\u6709\u7684\u66f4\u65b0\u5199\u5728\u65e5\u5fd7\u91cc\uff0c\u5728\u5199\u5165commit\u4e4b\u540e\u518d\u5f00\u59cb\u5199\u5165\u6570\u636e\u5e93 \u5047\u8bbe\u4e8b\u52a1\u662f\u4e32\u884c\u6267\u884c\u7684 \u4e8b\u52a1\u5f00\u59cb\u7684\u65f6\u5019\u8981\u5199\u5165 <Ti start> write ( X ) \u64cd\u4f5c\u5bf9\u5e94\u7684\u65e5\u5fd7\u662f <Ti, X, V> \uff0cV\u8868\u793aX\u65b0\u7684\u503c \u4e8b\u52a1partially commits\u7684\u65f6\u5019\u9700\u8981\u5199\u5165commit \u7136\u540e\u6839\u636e\u65e5\u5fd7\u6765\u5b9e\u9645\u6267\u884c\u4e00\u4e9bwrite\u7684\u64cd\u4f5c \u5f53\u9519\u8bef\u53d1\u751f\u65f6\uff0c\u5f53\u4e14\u4ec5\u5f53\u65e5\u5fd7\u4e2dstart\u548ccommit\u90fd\u6709\u7684\u65f6\u5019\uff0c\u4e8b\u52a1\u9700\u8981redo immediate database modification \u76f4\u63a5\u4fee\u6539\u6570\u636e\u5e93 \u5148\u8981\u5199\u597d\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5047\u8bbe\u65e5\u5fd7\u8bb0\u5f55\u76f4\u63a5output\u5230\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d block\u7684\u8f93\u51fa\u53ef\u4ee5\u53d1\u751f\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\uff0c\u5305\u62ec\u4e8b\u52a1commit\u524d\u548ccommit\u540e\uff0cblock\u8f93\u51fa\u7684\u987a\u5e8f\u548cwrite\u7684\u987a\u5e8f\u4e0d\u4e00\u5b9a\u76f8\u540c \u6062\u590d\u7684\u8fc7\u7a0b\u4e2d\u6709\u4e24\u79cd\u64cd\u4f5c undo\uff1a\u64a4\u56de\uff0c\u5c06\u4e8b\u52a1$T_i$ \u4e2d\u5df2\u7ecf\u66f4\u65b0\u7684\u503c\u53d8\u56de\u539f\u672c\u7684\u503c redo\uff1a\u4ece\u4e8b\u52a1$T_i$ \u7684\u7b2c\u4e00\u6b65\u5f00\u59cb\u91cd\u65b0\u505a\uff0c\u5c06\u6240\u6709\u503c\u8bbe\u5b9a\u4e3a\u65b0\u7684\u503c \u4e24\u79cd\u64cd\u4f5c\u90fd\u9700\u8981 idempotent \u2014\u2014\u4e5f\u5c31\u662f\u64cd\u4f5c\u6267\u884c\u591a\u6b21\u548c\u6267\u884c\u4e00\u6b21\u7684\u6548\u679c\u76f8\u540c undo\u7684\u6761\u4ef6\uff1a\u65e5\u5fd7\u4e2d\u5305\u542b\u8fd9\u4e2a\u4e8b\u52a1\u7684start\u800c\u4e0d\u5305\u542bcommit\uff0c\u5373\u4e8b\u52a1\u8fdb\u884c\u5230\u4e00\u534a\u4e2d\u65ad\u4e86 redo\u7684\u6761\u4ef6\uff1a\u65e5\u5fd7\u4e2d\u5305\u542b\u8fd9\u4e2a\u4e8b\u52a1\u7684start\u548ccommit \u5e76\u884c\u63a7\u5236\u548c\u6062\u590d \u6240\u6709\u4e8b\u52a1\u5171\u7528\u4e00\u4e2a\u65e5\u5fd7\u548cdisk buffer \u57fa\u672c\u7684\u5047\u8bbe \u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\u6539\u53d8\u4e86\u67d0\u4e2a\u6570\u636e\u9879\uff0c\u5176\u4ed6\u7684\u4e8b\u52a1\u76f4\u5230\u8fd9\u4e2a\u4e8b\u52a1commit\u6216\u8005abort\u4e4b\u524d\u90fd\u4e0d\u80fd\u6539\u53d8\u8fd9\u4e2a\u6570\u636e\u9879\u7684\u503c \u6ca1\u6709commited\u7684\u4e8b\u52a1\u5f15\u8d77\u7684\u66f4\u65b0\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u66f4\u65b0 \u65e5\u5fd7\u4e2d\u4e0d\u540c\u4e8b\u52a1\u7684\u65e5\u5fd7\u53ef\u80fd\u4f1a\u76f8\u4ea4 check point \u901a\u8fc7\u5b9a\u671f\u6267\u884ccheckpoint\u64cd\u4f5c\u6765\u5b8c\u6210\u7b80\u5316\u7684\u6062\u590d 1.\u5c06\u5185\u5b58\u4e2d\u7684\u8bb0\u5f55\u90fd\u5199\u5230\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d 2.\u5c06\u6240\u6709\u66f4\u6539\u8fc7\u7684block\u5199\u5165\u78c1\u76d8\u4e2d 3.\u5199\u5165\u65e5\u5fd7\u8bb0\u5f55< checkpoint L > \uff0c\u5176\u4e2dL\u662f\u4e00\u4e2a\u5728checkpoint\u65f6\u4f9d\u7136\u5904\u4e8e\u8fdb\u884c\u72b6\u6001\u7684\u4e8b\u52a1 \u901a\u8fc7checkpoint\uff0c\u5728\u65e5\u5fd7\u5904\u7406\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u5904\u7406\u6240\u6709\u7684\u65e5\u5fd7\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u5f02\u5e38\u65f6\u6b63\u5728\u6d3b\u8dc3\u7684\u4e8b\u52a1\uff0c\u6062\u590d\u7684\u6b65\u9aa4\u5982\u4e0b \u4ece\u65e5\u5fd7\u7684\u672b\u5c3e\u5411\u524d\u626b\u63cf\uff0c\u76f4\u5230\u53d1\u73b0\u6700\u8fd1\u7684checkpoint\u8bb0\u5f55 \u53ea\u6709L\u4e2d\u8bb0\u5f55\u7684\uff0c\u6216\u8005\u5728L\u4e4b\u540e\u53d1\u751f\u7684\u4e8b\u52a1\u9700\u8981redo\u6216\u8005undo checkpoint\u4e4b\u524d\u7684\u8bb0\u5f55\u5df2\u7ecf\u751f\u6548\u5e76\u4fdd\u5b58\u5728\u4e86\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d \u65e5\u5fd7\u4e2d\u66f4\u65e9\u7684\u90e8\u5206 \u6216\u8bb8\u9700\u8981 undo\uff0c\u4f46\u4e00\u5b9a\u4e0d\u9700\u8981redo \u7ee7\u7eed\u5411\u524d\u626b\u63cf\u76f4\u5230\u53d1\u73b0\u4e00\u4e2a\u4e8b\u52a1\u7684start\u65e5\u5fd7 \u6700\u65e9\u7684start\u4e4b\u524d\u7684\u65e5\u5fd7\u4e0d\u9700\u8981\u8fdb\u884c\u6062\u590d\u64cd\u4f5c\uff0c\u5e76\u4e14\u53ef\u4ee5\u6e05\u9664 \u5728\u4e0a\u9762\u8fd9\u4e2a\u56fe\u4e2d T1 ignored\uff0cT2\uff0cT3\u9700\u8981redo\uff0cT4 undo \u6062\u590d\u7b97\u6cd5 \u5355\u4e2a\u4e8b\u52a1\u56de\u6eda\u65f6\u7684\u57fa\u672c\u64cd\u4f5c \u4ece\u540e\u5f80\u524d\u626b\u63cf\uff0c\u5f53\u53d1\u73b0\u8bb0\u5f55$ $ \u7684\u65f6\u5019 \u5c06X\u7684\u503c\u4fee\u6539\u4e3a\u539f\u672c\u7684\u503c \u5728\u65e5\u5fd7\u7684\u672b\u5c3e\u5199\u5165\u8bb0\u5f55$ $ \u53d1\u73b0start\u8bb0\u5f55\u7684\u65f6\u5019\uff0c\u505c\u6b62\u626b\u63cf\u5e76\u5728\u65e5\u5fd7\u4e2d\u5199\u5165abort\u8bb0\u5f55 \u6062\u590d\u7684\u4e24\u4e2a\u9636\u6bb5\uff1aredo\u548cundo redo\u9700\u8981\u5148\u627e\u5230\u6700\u540e\u4e00\u4e2acheck point\u5e76\u4e14\u8bbe\u7f6eundo-list 1.\u4ececheckpoint\u5f00\u59cb\u5f80\u4e0b\u8bfb 2.\u5f53\u53d1\u73b0\u4fee\u6539\u503c\u7684\u8bb0\u5f55\u7684\u65f6\u5019\uff0credo\u4e00\u6b21\u5c06X\u8bbe\u7f6e\u4e3a\u65b0\u7684\u503c 3.\u5f53\u53d1\u73b0start\u7684\u65f6\u5019\u5c06\u8fd9\u4e2a\u4e8b\u52a1\u52a0\u5165undo-list 4.\u5f53\u53d1\u73b0commit\u6216\u8005abort\u7684\u65f6\u5019\u5c06\u5bf9\u5e94\u7684\u4e8b\u52a1\u4eceundo-list\u4e2d\u79fb\u9664 undo 1.\u4ece\u65e5\u5fd7\u7684\u672b\u5c3e\u5f00\u59cb\u5f80\u56de\u8bfb 2.\u5f53\u53d1\u73b0\u8bb0\u5f55 \u5e76\u4e14Ti\u5728undo-list\u4e2d\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u4e00\u6b21\u56de\u6eda 3.\u5f53\u53d1\u73b0Ti start\u5e76\u4e14Ti\u5728undo-list\u4e2d\u7684\u65f6\u5019\uff0c\u5199\u5165abort\u65e5\u5fd7\u5e76\u4e14\u4eceundo-list\u4e2d\u79fb\u9664Ti 4.\u5f53undo-list\u7a7a\u4e86\u7684\u65f6\u5019\u505c\u6b62undo log record buffering \u7f13\u51b2\u65e5\u5fd7\u8bb0\u5f55 \u65e5\u5fd7\u8bb0\u5f55\u4e00\u5f00\u59cb\u5728\u4e3b\u5b58\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u5f53\u65e5\u5fd7\u5728block\u4e2d\u6ee1\u4e86\u7684\u65f6\u5019\u6216\u8005\u8fdb\u884c\u4e86log force\u64cd\u4f5c(\u4e0a\u9762\u63d0\u5230\u7684checkpoint)\u65f6\u5199\u5165\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d \u9700\u8981\u9075\u5b88\u7684\u89c4\u5219 \u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u4e2d\u7684\u65f6\u5019\u65e5\u5fd7\u8bb0\u5f55\u6309\u7167\u539f\u672c\u7684\u987a\u5e8f\u5199\u5165 \u5728commit\u8bb0\u5f55\u88ab\u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u7684\u65f6\u5019\uff0cTi\u624d\u7b97\u8fdb\u5165commit\u72b6\u6001 WAL(write-ahead logging)\u89c4\u5219\uff1a\u5728\u6570\u636eblock\u5199\u5165\u6570\u636e\u5e93\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u628a\u65e5\u5fd7\u5199\u5165\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d \u4e2d\u95f4\u6709\u51e0\u9875\u5148\u7559\u7740\u6162\u6162\u5b66\u4e60\uff0c\u8fd9\u51e0\u9875\u770b\u8d77\u6765\u4e0d\u592a\u50cf\u8003\u8bd5\u5185\u5bb9\uff0cbuffer\u8fd9\u4e00\u90e8\u5206\u5e94\u8be5\u4e86\u89e3\u5c31\u597d","title":"5.2.1 log-based Recovery\u57fa\u4e8e\u65e5\u5fd7\u7684\u6062\u590d"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#522-aries-recovery-algorithmaries","text":"\u548c\u666e\u901a\u6062\u590d\u7b97\u6cd5\u7684\u533a\u522b\uff1a \u6700\u6838\u5fc3\u7684\u533a\u522b\u2014\u2014Aries\u7b97\u6cd5\u8003\u8bd5\u8003\u5230\u7684\u6982\u7387\u5f88\u9ad8 \u4f7f\u7528LSN(log sequence number)\u6765\u6807\u6ce8\u65e5\u5fd7 \u4ee5\u9875\u7684\u5f62\u5f0f\u6765\u5b58\u50a8LSN\u6765\u6807\u6ce8\u6570\u636e\u5e93\u9875\u8868\u4e2d\u8fdb\u884c\u4e86\u54ea\u4e9b\u66f4\u65b0 \u751f\u7406redo(?) \u4f7f\u7528\u810f\u9875\u8868(dirty page table) \u6765\u907f\u514d\u4e0d\u5fc5\u8981\u7684redo \u6a21\u7cca\u7684checkpoint\u673a\u5236\uff0c\u53ea\u8bb0\u5f55\u810f\u9875\u4fe1\u606f\u548c\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4e0d\u9700\u8981\u628a\u810f\u9875\u5199\u5165\u78c1\u76d8 ARIES\u4e2d\u7684\u6570\u636e\u7ed3\u6784 Log sequence number (LSN) \u7528\u4e8e\u6807\u8bc6 \u6bcf\u4e00\u6761\u8bb0\u5f55 \uff0c\u9700\u8981\u662f\u7ebf\u6027\u589e\u957f\u7684 \u5176\u5b9e\u662f\u4e00\u4e2aoffset\uff0c\u65b9\u4fbf\u4ece\u6587\u4ef6\u7684\u8d77\u70b9\u5f00\u59cb\u8bbf\u95ee Page LSN \u6bcf\u4e00\u9875\u7684LSN \u662f\u6bcf\u4e00\u9875\u4e2d \u6700\u540e\u4e00\u6761 \u8d77\u4f5c\u7528 \u7684\u65e5\u5fd7\u8bb0\u5f55\u7684LSN\u7f16\u53f7 \u6bcf\u5f53\u4e00\u4e2a\u66f4\u65b0\u7684\u64cd\u4f5c\u5728\u67d0\u4e00\u9875\u53d1\u751f\u7684\u65f6\u5019\uff0cPage LSN\u5c31\u53d8\u6210\u5bf9\u5e94\u7684Page LSN \u5728\u6062\u590d\u7684\u64a4\u9500\u9636\u6bb5\uff0cLSN\u503c\u4e0d\u8d85\u8fc7PageLSN\u7684\u65e5\u5fd7\u8bb0\u5f55\u5c06 \u4e0d\u4f1a\u5728\u8be5\u9875\u4e0a\u6267\u884c \uff0c\u56e0\u4e3a\u5176\u52a8\u4f5c\u5df2\u7ecf\u5728\u8be5\u9875\u4e0a\u4e86 \u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7684redo log record \u65e5\u5fd7\u8bb0\u5f55 \u6bcf\u4e00\u6761\u65e5\u5fd7\u8bb0\u5f55\u5305\u542b\u81ea\u5df1\u7684LSN\u548c \u540c\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u524d\u4e00\u6b65\u64cd\u4f5c \u7684LSN\u2014\u2014PreLSN CLR\uff1a\u5728\u6062\u590d\u671f\u95f4\u4e0d\u9700\u8981undo\uff0c\u662fredo-only\u7684\u65e5\u5fd7\u8bb0\u5f55 \u6709\u4e00\u4e2aUndoNextLSN\u533a\u57df\u7528\u4e8e\u8bb0\u5f55\u4e0b\u4e00\u4e2a(\u66f4\u65e9,\u5f80\u524d\u641c\u7d22)\u7684\u9700\u8981undo\u7684\u8bb0\u5f55 \u5728\u8fd9\u4e4b\u95f4\u7684\u8bb0\u5f55\u5e94\u8be5\u65e9\u5c31\u5df2\u7ecfundo\u4e86 Dirty Page Table \u810f\u9875\u8868 \u5b58\u50a8\u5728\u7f13\u51b2\u533a\u7684\uff0c\u8bb0\u5f55\u5df2\u7ecf\u88ab\u66f4\u65b0\u8fc7\u7684page\u7684\u8868 \u5305\u542b\u4ee5\u4e0b\u5185\u5bb9 \u6bcf\u4e2a\u9875\u7684PageLSN \u6bcf\u4e2a\u9875\u7684RecLSN\uff0c\u8868\u793a\u8fd9\u4e00\u9875\u7684\u65e5\u5fd7\u8bb0\u5f55\u4e2d\uff0cLSN\u5728\u8fd9\u4e4b\u524d\u7684\u8bb0\u5f55\u5df2\u7ecf \u90fd\u88ab\u5199\u5165\u78c1\u76d8\u4e2d \u4e86 \u5f53page\u88ab\u63d2\u5165\u810f\u9875\u8868\u7684\u65f6\u5019\uff0c \u521d\u59cb\u5316\u4e3a\u5f53\u524d\u7684PageLSN \u8bb0\u5f55\u5728checkpoint\u4e2d\uff0c\u7528\u4e8e\u51cf\u5c11redo\u7684\u6b21\u6570 \u53ea\u8981\u9875\u88ab\u5199\u5165\u78c1\u76d8\uff0c\u5c31\u4ece\u810f\u9875\u8868\u4e2d\u79fb\u9664\u8be5\u9875 checkpoint\u5904\u7684\u65e5\u5fd7\u8bb0\u5f55 \u5305\u542b\uff1a\u810f\u9875\u8868\u548c\u5f53\u524d\u6d3b\u8dc3\u7684\u6240\u6709\u4e8b\u52a1 \u5bf9\u6bcf\u4e00\u4e2a\u6d3b\u8dc3\u7684\u4e8b\u52a1\uff0c\u8bb0\u5f55\u4e86LastLSN\uff0c\u5373\u8fd9\u4e2a\u4e8b\u52a1\u5728\u65e5\u5fd7\u4e2d\u5199\u4e0b\u7684 \u6700\u540e\u4e00\u6761\u8bb0\u5f55 \u5728checkpoint\u7684\u65f6\u95f4\u70b9\uff0c\u810f\u9875\u7684\u4fe1\u606f\u4e0d\u4f1a\u5199\u5165\u78c1\u76d8 ARIES\u7b97\u6cd5\u7684\u6062\u590d\u64cd\u4f5c \u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a\u5206\u6790\u9636\u6bb5\uff0credo\u9636\u6bb5\u548cundo\u9636\u6bb5 RedoLSN \u8bb0\u5f55\u4e86\u4ece\u54ea\u4e00\u6761\u5f00\u59cb\u9700\u8981redo \u5206\u6790\u9636\u6bb5\uff1a\u9700\u8981\u51b3\u5b9a\u54ea\u4e9b\u4e8b\u52a1undo\uff0c\u54ea\u4e9b\u9875\u662f\u810f\u9875 \u4ece \u6700\u540e\u4e00\u6761\u5b8c\u6574\u7684checkpoint\u65e5\u5fd7\u8bb0\u5f55 \u5f00\u59cb \u8bfb\u53d6\u810f\u9875\u8868\u7684\u4fe1\u606f \u8bbe\u7f6eRedoLSN = min RecLSN(\u810f\u9875\u8868\u4e2d\u7684)\uff0c\u5982\u679c\u810f\u9875\u8868\u662f\u7a7a\u7684\u5c31\u8bbe\u7f6e\u4e3acheckpoint\u7684LSN \u8bbe\u7f6eundo-list\uff1acheckpoint\u4e2d\u8bb0\u5f55\u7684\u4e8b\u52a1 \u8bfb\u53d6undo-list\u4e2d\u6bcf\u4e00\u4e2a\u4e8b\u52a1\u7684\u6700\u540e\u4e00\u6761\u8bb0\u5f55\u7684LSN \u4ececheckpoint\u5f00\u59cb\u6b63\u5411\u626b\u63cf \u5982\u679c\u53d1\u73b0\u4e86\u4e0d\u5728undo-list\u4e2d\u7684\u8bb0\u5f55\u5c31\u5199\u5165undo-list \u5f53\u53d1\u73b0\u4e00\u6761 \u66f4\u65b0\u8bb0\u5f55 \u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u4e00\u9875 \u4e0d\u5728\u810f\u9875\u8868 \u4e2d\uff0c\u7528\u8be5\u8bb0\u5f55\u7684LSN\u4f5c\u4e3aRecLSN\u5199\u5165\u810f\u9875\u8868\u4e2d \u5982\u679c\u53d1\u73b0\u4e86\u6807\u5fd7\u4e8b\u52a1 \u7ed3\u675f \u7684\u65e5\u5fd7\u8bb0\u5f55(commit, abort) \u5c31\u4eceundo-list\u4e2d \u79fb\u9664 \u8fd9\u4e2a\u4e8b\u52a1 \u641c\u7d22\u76f4\u5230undo-list\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4e8b\u52a1\u90fd\u5230\u4e86\u6700\u540e\u4e00\u6761 \u5206\u6790\u7ed3\u675f\u4e4b\u540e RedoLSN\u51b3\u5b9a\u4e86\u4ece\u54ea\u91cc\u5f00\u59cbredo \u6240\u6709undo-list\u4e2d\u7684\u4e8b\u52a1\u90fd\u9700\u8981\u56de\u6eda Redo\u9636\u6bb5 \u4eceRedoLSN\u5f00\u59cb \u6b63\u5411\u626b\u63cf \uff0c\u5f53\u53d1\u73b0\u66f4\u65b0\u8bb0\u5f55\u7684\u65f6\u5019 \u5982\u679c\u8fd9\u4e00\u9875\u4e0d\u5728\u810f\u9875\u8868\u4e2d\u3002\u6216\u8005\u8fd9\u4e00\u6761\u8bb0\u5f55\u7684LSN\u5c0f\u4e8e\u9875\u9762\u7684RecLSN\u5c31\u5ffd\u7565\u8fd9\u4e00\u6761 \u5426\u5219\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u8fd9\u4e00\u9875\uff0c\u5982\u679c\u78c1\u76d8\u4e2d\u5f97\u5230\u7684\u8fd9\u4e00\u9875\u7684PageLSN\u6bd4\u8fd9\u4e00\u6761\u8981\u5c0f\uff0c\u5c31redo\uff0c\u5426\u5219\u5c31\u5ffd\u7565\u8fd9\u4e00\u6761\u8bb0\u5f55 Undo\u9636\u6bb5 \u4ece\u65e5\u5fd7\u672b\u5c3e\u5148\u524d\u5411\u524d\u641c\u7d22\uff0cundo\u6240\u6709undo-list\u4e2d\u6709\u7684\u4e8b\u52a1 \u7b26\u5408\u5982\u4e0b\u6761\u4ef6\u7684\u8bb0\u5f55\u53ef\u4ee5 \u8df3\u8fc7 \u7528\u5206\u6790\u9636\u6bb5\u7684\u6700\u540e\u4e00\u4e2aLSN\u6765\u627e\u5230\u6bcf\u4e2a\u65e5\u5fd7\u6700\u540e\u7684\u8bb0\u5f55 \u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u6700\u5927\u7684LSN\u5bf9\u5e94\u7684\u4e8b\u52a1undo \u5728undo\u4e00\u6761\u8bb0\u5f55\u4e4b\u540e \u5bf9\u4e8e\u666e\u901a\u7684\u8bb0\u5f55\uff0c\u5c06NextLSN\u8bbe\u7f6e\u4e3aPrevLSN \u5bf9\u4e8eCLR\u8bb0\u5f55\uff0c\u5c06NextLSN\u8bbe\u7f6e\u4e3aUndoNextLSN \u5982\u4f55undo\uff1a\u5f53\u4e00\u6761\u8bb0\u5f55undo\u7684\u65f6\u5019 \u751f\u6210\u4e00\u4e2a\u5305\u542b\u6267\u884c\u64cd\u4f5c\u7684CLR \u8bbe\u7f6eCLR\u7684UndoNextLSN \u4e3a\u66f4\u65b0\u8bb0\u5f55\u7684LSN Aries\u7b97\u6cd5\u7684\u5176\u4ed6\u7279\u6027 Recovery Independence \u6062\u590d\u7684\u72ec\u7acb\u6027 Savepoints \u5b58\u6863\u70b9 Fine-grained locking \u7ec6\u7c92\u5ea6\u7684\u9501 Recovery optimizations \u6062\u590d\u7684\u4f18\u5316","title":"5.2.2 ARIES Recovery Algorithm\u2014\u2014Aries\u6062\u590d\u7b97\u6cd5"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#xml","text":"","title":"\u7b2c\u516d\u90e8\u5206 XML"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#61-xml","text":"XML\uff1aExtensible Markup Language \u4e00\u79cd\u53ef\u6269\u5c55\u7684\u6807\u8bb0\u8bed\u8a00 \u533a\u522b\u4e8eHTML(Hyper-Text Markup Language) XML\u53ef\u4ee5\u6709\u4efb\u610f\u540d\u79f0\u7684\u6807\u8bb0\uff0cHTML\u7684\u6807\u8bb0\u540d\u662f\u6709\u9650\u7684 XML\u5df2\u7ecf\u6210\u4e3a\u4e00\u79cd\u4fe1\u606f\u4ea4\u4e92\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u9002\u5408\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u4ea4\u4e92 XML\u7684\u7ed3\u6784 Tag \u6807\u7b7e\uff0c\u8868\u660e\u4e00\u79cd\u6570\u636e\u7c7b\u578b Element \u88ab\u6807\u7b7e\u6240\u62ec\u8d77\u6765\u7684\u5185\u5bb9\uff0c\u6b63\u786e\u7684\u683c\u5f0f\u5e94\u8be5\u662f <tag>element</tag> \u6807\u7b7e\u5fc5\u987b\u8981\u6b63\u786e\u5d4c\u5957\uff0c\u53ef\u4ee5\u5d4c\u5957\u662fXML\u76f8\u6bd4\u4e8e\u5173\u7cfb\u4ee3\u6570\u7684\u4f18\u52bf XML\u6587\u6863\u9700\u8981\u6709\u4e00\u4e2aroot \u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u6709\u591a\u4e2a \u5c5e\u6027 \uff0c\u4f46\u662f \u5c5e\u6027\u540d\u4e0d\u80fd\u91cd\u590d \uff0c\u7528 attr_name=value \u7684\u5f62\u5f0f\u5185\u5d4c\u5728\u8d77\u59cbtag\u4e0a\u9762 \u547d\u540d\u7a7a\u95f4namespaces \u540c\u4e00\u4e2a\u6807\u7b7e\u540d\u5728\u4e0d\u540c\u7684\u5730\u65b9\u53ef\u80fd\u4ee3\u8868\u4e0d\u540c\u7684\u610f\u601d\uff0c\u9700\u8981\u5728tag\u524d\u9762\u52a0\u4e0a namespace: \u6807\u8bc6\u8fd9\u4e2atag\u662f\u88ab\u8c01\u5b9a\u4e49\u7684 \u6ca1\u6709\u5b50\u5143\u7d20\u7684\u5143\u7d20\u53ef\u4ee5\u53ea\u7528\u4e00\u4e2atag\u6807\u8bc6\uff1a <tag /> \u5f53tag\u8868\u793a\u5b57\u7b26\u4e32\u65f6\u53ef\u4ee5\u7528 CDATA[ ] \u62ec\u8d77\u6765\u8868\u793a","title":"6.1 XML\u7684\u5b9a\u4e49\u548c\u57fa\u672c\u7ed3\u6784"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#62-xml-document-schema","text":"Document Type Definition (DTD) \u4f7f\u7528\u8f83\u4e3a\u5e7f\u6cdb\uff0c\u5b9a\u4e49\u4e86XML\u6587\u6863\u7ed3\u6784\u7684\u4e00\u79cd\u6807\u51c6 \u4e0d\u9650\u5236\u6570\u636e\u7684\u79cd\u7c7b \uff0c\u6807\u7b7e\u4e0d\u9884\u5148\u89c4\u5b9a\u6709\u591a\u5c11\u79cd\uff0c\u53ef\u4ee5\u81ea\u7531\u5b9a\u4e49\uff0c\u4f46\u662f\u9650\u5236XML\u4e2d\u6570\u636e\u7684\u7ed3\u6784 \u6709\u4ec0\u4e48\u5143\u7d20\u53ef\u4ee5\u51fa\u73b0 \u5143\u7d20\u5fc5\u987b\u6709\u54ea\u4e9b\u5c5e\u6027 \u6bcf\u4e2a\u5143\u7d20\u4e2d\u53ef\u4ee5\u51fa\u73b0\u54ea\u4e9b\u5b50\u5143\u7d20 \u57fa\u672c\u7684\u8bed\u6cd5\u7ed3\u6784 xml-dtd <!ELEMENT element (subelements-specification) > <!ATTLIST element (attributes) > \u5b50\u5143\u7d20\u53ef\u4ee5\u58f0\u660e\u4e3a \u5b50\u5143\u7d20\u7684\u540d\u79f0 #PCDATA(parsed character data) \u88ab\u89e3\u6790\u7684\u5b57\u7b26\u6570\u636e EMPTY \u6216\u8005 ANY \u8868\u793a\u6ca1\u6709\u5b50\u5143\u7d20\u6216\u8005\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u5b50\u5143\u7d20 \u5b50\u5143\u7d20\u7684\u58f0\u660e\u53ef\u4ee5\u4f7f\u7528 \u6b63\u5219\u8868\u8fbe\u5f0f \u201c | \u201d \u8868\u793a\u53ef\u4ee5\u4e92\u76f8\u66ff\u4ee3 \u201c + \u201d \u81f3\u5c11\u51fa\u73b0\u4e00\u4e2a \u201c * \u201d \u51fa\u73b00\u4e2a\u6216\u591a\u4e2a \u201c \uff1f\u201d \u4e0d\u51fa\u73b0\u6216\u8005\u51fa\u73b0\u4e00\u4e2a \u6bd4\u5982\u8bf4\u4e0b\u9762\u8fd9\u4e00\u6bb5 xml-dtd <!DOCTYPE note [ <!ELEMENT note (to,from,heading,body)> <!ELEMENT to (#PCDATA)> <!ELEMENT from (#PCDATA)> <!ELEMENT heading (#PCDATA)> <!ELEMENT body (#PCDATA)> ]> \u8fd9\u4e00\u6bb5DTD\u4e2d\uff0c\u7b2c\u4e00\u884c\u8868\u793a\u6587\u6863\u7c7b\u578b\u53ebnote\uff0c\u91cc\u9762\u6709\u82e5\u5e72\u4e2a\u5143\u7d20\uff0c\u5176\u4e2dnote\u5143\u7d20\u6709\u56db\u4e2a\u5b50\u5143\u7d20\uff0c\u90fd\u662f\u88ab\u89e3\u6790\u7684\u5b57\u7b26\u6570\u636e Attribute\u58f0\u660e\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5c5e\u6027\uff0c\u58f0\u660e \u5c5e\u6027\u540dname \u5c5e\u6027\u79cd\u7c7btype CDATA ID or IDREF(id\u7684\u7d22\u5f15) or IDREFS(\u591a\u91cdid\u7d22\u5f15) \u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u4e00\u4e2a\u5c5e\u6027\u4f5c\u4e3aID\uff0c\u5e76\u4e14\u5fc5\u987b\u662f\u4e0d\u540c\u7684\u503c IDREF\u7c7b\u578b\u7684\u5c5e\u6027\u5fc5\u987b\u5305\u542bID\u7684\u503c \u5176\u4ed6\u5185\u5bb9 #REQUIED \u5c5e\u6027\u662f\u5fc5\u987b\u7684 \u662f\u5426\u6709\u9ed8\u8ba4\u503c #IMPLIED \u5c5e\u6027\u4e0d\u662f\u5fc5\u987b\u7684 xml-dtd <!ATTLIST course course_id CDATA #REQUIRED>, \u6216\u8005 <!ATTLIST course course_id ID #REQUIRED dept_name IDREF #REQUIRED instructors IDREFS #IMPLIED > DTD\u7684\u4e00\u4e9b\u9650\u5236 \u5143\u7d20\u548c\u5c5e\u6027\u6ca1\u6709\u7c7b\u578b IDs\u548cIDREFs\u662funtyped\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684ID\u5c5e\u6027\u503c\u5fc5\u987b\u662f\u552f\u4e00\u7684 XML Schema\u2014\u2014\u4e0d\u5e38\u7528 \u89e3\u51b3\u4e86DTD\u7684\u7f3a\u70b9\uff0c\u66f4\u590d\u6742\uff0c\u652f\u6301 \u503c\u7684\u7c7b\u578b\uff0c\u5305\u62ecinteger\uff0cstring\u7b49 \u7528\u6237\u5b9a\u4e49\u7c7b\u578b\uff0c\u66f4\u590d\u6742\u7684\u7c7b\u578b \u66f4\u591a\u529f\u80fd\u5305\u62ec unique\u548cforeign key\u7684\u9650\u5236 \u4f46\u6bd4DTD\u6a21\u5f0f\u66f4\u52a0\u5197\u4f59 \u8bed\u6cd5\u89c4\u5219 \u53ef\u4ee5\u4f7f\u7528xs\u7684namespace \u5c5e\u6027\u88abxs:attribute\u7684tag\u6240\u5b9a\u4e49 \u952e\u7ea6\u675f\uff0c \u5916\u952e\u7ea6\u675f\uff1a\u901a\u8fc7xpath\u8fdb\u884c\u67e5\u8be2","title":"6.2 XML Document Schema"},{"location":"DBS%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86.html#63-xml","text":"XML \u6570\u636e\u7684\u67e5\u8be2\u548c\u4f20\u8f93 \u53ef\u4ee5\u7528\u4e8eXML\u67e5\u8be2\u548c\u4f20\u8f93\u7684\u8bed\u8a00 XPath XSLT XQuery \u67e5\u8be2\u548c\u4ea4\u6362\u57fa\u4e8eXML\u7684 \u6811\u6a21\u578b \u6811\u6a21\u578b\u4e2d\u7684\u8282\u70b9\u662fXML\u6587\u6863\u4e2d\u7684\u5143\u7d20\uff0c\u8282\u70b9\u5206\u4e3a\u5143\u7d20\u3001\u5c5e\u6027\u3001\u6587\u672c\u3001\u547d\u540d\u7a7a\u95f4\u3001\u5904\u7406\u6307\u4ee4\u3001\u6ce8\u91ca\u4ee5\u53ca\u6587\u6863\uff08\u6839\uff09\u8282\u70b9\uff0c\u5143\u7d20\u4e0b\u7684\u8282\u70b9\u662f\u5c5e\u6027\u6216\u8005\u5b50\u5143\u7d20\uff0c\u4e0a\u9762\u7684\u5219\u662f\u7236\u5143\u7d20 \u6839\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u5c31\u662fXML\u6587\u6863\u7684\u6839\u5143\u7d20 XPath \u7528\u7c7b\u4f3c\u4e8e\u6587\u4ef6\u8def\u5f84\u7684\u8868\u8fbe\u5f0f\u6765\u8fdb\u884c\u67e5\u8be2\uff0c\u7528\u659c\u6760\u8fdb\u884c\u8fde\u63a5 \u7b2c\u4e00\u4e2a\u659c\u6760\u7684\u610f\u601d\u8868\u793a\u6839\u76ee\u5f55\uff0c\u8def\u5f84\u4e2d \u53ef\u4ee5\u6dfb\u52a0\u67e5\u8be2\u6761\u4ef6 \uff0c\u9700\u8981\u7528 [] \u62ec\u8d77\u6765 \u6bd4\u5982 //title[@lang] \u53ef\u4ee5\u9009\u53d6\u6240\u6709\u62e5\u6709\u5c5e\u6027\u540dlang\u7684\u5143\u7d20title \u6bd4\u5982 /bookstore/book[1] \u8868\u793a\u9009\u53d6bookstore\u4e0b\u9762\u7b2c\u4e00\u4e2a\u67e5\u8be2\u5230\u7684book\u5143\u7d20 \u8bbf\u95ee \u5c5e\u6027 \u9700\u8981\u4f7f\u7528 @ \u6807\u8bb0(\u6ce8\u610f\u6807\u7b7e\u7684\u5c5e\u6027\u548c\u503c\u7684\u533a\u522b) \u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u6765\u67e5\u8be2\uff1a *\u53ef\u4ee5\u8868\u793a\u6240\u6709\u7684\u5143\u7d20\u8282\u70b9\uff0c\u6bd4\u5982 //* \u53ef\u4ee5\u83b7\u53d6\u6587\u6863\u4e2d\u7684\u6240\u6709\u5143\u7d20 @*\u53ef\u4ee5\u8868\u793a\u6240\u6709\u7684\u5c5e\u6027\u8282\u70b9 \u53ef\u4ee5\u7528 | \u6765\u8fde\u63a5\u4e24\u4e2a\u67e5\u8be2 // \u53ef\u4ee5\u8df3\u8fc7\u591a\u5c42node\u76f4\u5954\u8981\u627e\u7684\u76ee\u6807 \u67e5\u8be2\u8def\u5f84\u4e0d\u4ec5\u80fd\u5f80\u4e0b\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u5f80\u4e0a\u67e5\u8be2\uff0c\u65e2\u53ef\u4ee5\u641c\u7d22\u5b50\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u641c\u7d22\u7236\u8282\u70b9 XPath\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53ef\u4ee5\u4f7f\u7528\u7684\u51fd\u6570 count\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u67d0\u4e2a\u8def\u5f84\u4e0b\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u6bd4\u5982 /university-2/instructor[count(./teaches/course)> 2] \u53ef\u4ee5\u8868\u793a\u83b7\u53d6\u6240\u6709\u4e0a\u8bfe\u6570\u76ee\u8d85\u8fc72\u7684\u8001\u5e08 \u5e03\u5c14\u51fd\u6570and\u548cor\u548cnot() \u53ef\u4ee5\u4f7f\u7528 IDREFs\u53ef\u4ee5\u4f7f\u7528id()\u5f15\u7528 \u4f7f\u7528doc\u6765\u8fd4\u56de\u6587\u6863\u7684\u540d\u79f0 XQuery\uff1aXML\u6587\u6863\u7684\u4fe1\u606f\u67e5\u8be2 XQuery\u4f7f\u7528\u7684\u8bed\u6cd5\u662f for xxx let xxx where xxx order by xxx return for\u76f8\u5f53\u4e8eSQL\u4e2d\u7684 select \uff0clet\u5141\u8bb8\u4f7f\u7528 \u4e34\u65f6\u53d8\u91cf \u4e00\u4e2a\u7b80\u5355\u7684\u6848\u4f8b\uff0c\u5bf9 <course_id>..</course_id> \u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u67e5\u8be2 ```xquery for $x in /university/course let %courseid:=$x/@course_id where $x/credits > 3 return {$courseid} // \u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u7684\u5316\u7b80 for $x in /university-3/course[credits > 3] return { $x/@course_id } ``` join\u64cd\u4f5c\uff1a\u5728where\u540e\u9762\u7528\u903b\u8f91\u5173\u7cfb\u8fde\u63a5\u82e5\u5e72\u4e2a\u6761\u4ef6 \u5d4c\u5957\u67e5\u8be2\uff1a\u7528\u6cd5\u662f\u5c06\u4e00\u4e2aXQeury\u8bed\u53e5\u5f53\u4f5creturn\u7684\u7ed3\u679c\u7528tags\u5305\u8d77\u6765 \u805a\u5408\u64cd\u4f5c \u53ef\u4ee5\u4f7f\u7528sum\u7b49\u805a\u5408\u51fd\u6570\uff0c\u6bd4\u5982 fu:sum() \u4f7f\u7528order by\u8fdb\u884c\u6392\u5e8f \u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6765\u8fdb\u884c\u67d0\u4e9b\u64cd\u4f5c","title":"6.3 XML \u67e5\u8be2"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/index.html","text":"\u6570\u636e\u7ed3\u6784\u57fa\u7840FDS \u9648\u7fd4\u8001\u5e08\u73ed\uff0c2019-2020\u79cb\u51ac\u5b66\u671f \u8ddf\u540e\u9762\u5176\u4ed6\u4e13\u4e1a\u5fc5\u4fee\u8bfe(ads,db,\u8ba1\u539f/\u8ba1\u7ec4)\u76f8\u6bd4\u53ef\u80fd\u662f\u6bd4\u8f83\u53cb\u597d\u7684\u4e00\u95e8\u8bfe \u867d\u7136\u5f53\u65f6\u8003\u8bd5\u70b8\u4e86\uff0c\u4f46\u662f\u5e73\u65f6\u4f5c\u4e1a\u81ea\u5df1\u5199\u4e0d\u88ab\u67e5\u91cd\uff0cproject\u4e92\u8bc4\u4e0d\u8981\u548c\u7a7a\u6c14\u6597\u667a\u6597\u52c7\uff0c\u6700\u540e\u5f97\u5206\u5e94\u8be5\u90fd\u8fd8\u884c lz\u4e0a\u7684\u662fcx\u8001\u5e08\u73ed\uff0c\u8001\u5e08\u4e0a\u8bfe\u8bb2\u7684\u5f88\u6e05\u695a\uff0c\u7ed9\u5206\u4e5f\u6bd4\u8f83\u597d\uff0clz\u4e0d\u592a\u597d\u662f\u56e0\u4e3alz\u6bd4\u8f83\u83dc\uff0c\u4e0d\u8fc7\u4f1a\u6709\u4e00\u4e9b\u70b9\u540d\u6027\u8d28\u7684quiz\uff0c\u6240\u4ee5\u4e0d\u8981\u7fd8\u8bfe\u4e0d\u7136\u635f\u5931\u5f88\u4e25\u91cd \u4e24\u4e2abonus\u7f16\u7a0b\u9898\u5fc5\u505a\uff0c\u4e0d\u7136\u5e73\u65f6\u5206\u4f1a\u6bd4\u8f83\u60e8\uff0c\u5012\u4e0d\u662f\u8001\u5e08\u7ed9\u5206\u4e0d\u597d\uff0c\u61c2\u5f97\u90fd\u61c2 \u590d\u4e60\u7684\u65f6\u5019\u8fd8\u662f\u5efa\u8bae\u770bPPT+ PTA\u6559\u80b2\u8d85\u5e02\u4e70\u5386\u5e74\u5377\u5237\u9898 \uff0c\u6216\u8bb8\u80fd\u5237\u5230\u8003\u8bd5\u65f6\u5dee\u4e0d\u591a\u7c7b\u578b\u7684\u9898\u76ee \u8fd9\u4efd\u7b14\u8bb0\u6216\u8bb8\u53ef\u4ee5\u5f53\u4f5c\u4e00\u4e2a\u63d0\u7eb2\u6765\u7528 \u53e6\u5916\u7b14\u8bb0\u4e2d \u6709\u4e00\u4e9b\u6211\u5f53\u65f6\u505a\u5386\u5e74\u5377\u65f6\u78b0\u5230\u7684\u96be\u9898 \uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u770b \u5f53\u65f6\u505a\u7684\u6bd4\u8f83\u5306\u5fd9\uff0c\u4e0d\u4fdd\u8bc1\u91cc\u9762\u7684\u4e1c\u897f\u6ca1\u6709\u9519\u8bef\uff0c\u8bf7\u5927\u5bb6\u770b\u7684\u65f6\u5019\u4ed4\u7ec6\u7504\u522b","title":"Index"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/index.html#fds","text":"\u9648\u7fd4\u8001\u5e08\u73ed\uff0c2019-2020\u79cb\u51ac\u5b66\u671f \u8ddf\u540e\u9762\u5176\u4ed6\u4e13\u4e1a\u5fc5\u4fee\u8bfe(ads,db,\u8ba1\u539f/\u8ba1\u7ec4)\u76f8\u6bd4\u53ef\u80fd\u662f\u6bd4\u8f83\u53cb\u597d\u7684\u4e00\u95e8\u8bfe \u867d\u7136\u5f53\u65f6\u8003\u8bd5\u70b8\u4e86\uff0c\u4f46\u662f\u5e73\u65f6\u4f5c\u4e1a\u81ea\u5df1\u5199\u4e0d\u88ab\u67e5\u91cd\uff0cproject\u4e92\u8bc4\u4e0d\u8981\u548c\u7a7a\u6c14\u6597\u667a\u6597\u52c7\uff0c\u6700\u540e\u5f97\u5206\u5e94\u8be5\u90fd\u8fd8\u884c lz\u4e0a\u7684\u662fcx\u8001\u5e08\u73ed\uff0c\u8001\u5e08\u4e0a\u8bfe\u8bb2\u7684\u5f88\u6e05\u695a\uff0c\u7ed9\u5206\u4e5f\u6bd4\u8f83\u597d\uff0clz\u4e0d\u592a\u597d\u662f\u56e0\u4e3alz\u6bd4\u8f83\u83dc\uff0c\u4e0d\u8fc7\u4f1a\u6709\u4e00\u4e9b\u70b9\u540d\u6027\u8d28\u7684quiz\uff0c\u6240\u4ee5\u4e0d\u8981\u7fd8\u8bfe\u4e0d\u7136\u635f\u5931\u5f88\u4e25\u91cd \u4e24\u4e2abonus\u7f16\u7a0b\u9898\u5fc5\u505a\uff0c\u4e0d\u7136\u5e73\u65f6\u5206\u4f1a\u6bd4\u8f83\u60e8\uff0c\u5012\u4e0d\u662f\u8001\u5e08\u7ed9\u5206\u4e0d\u597d\uff0c\u61c2\u5f97\u90fd\u61c2 \u590d\u4e60\u7684\u65f6\u5019\u8fd8\u662f\u5efa\u8bae\u770bPPT+ PTA\u6559\u80b2\u8d85\u5e02\u4e70\u5386\u5e74\u5377\u5237\u9898 \uff0c\u6216\u8bb8\u80fd\u5237\u5230\u8003\u8bd5\u65f6\u5dee\u4e0d\u591a\u7c7b\u578b\u7684\u9898\u76ee \u8fd9\u4efd\u7b14\u8bb0\u6216\u8bb8\u53ef\u4ee5\u5f53\u4f5c\u4e00\u4e2a\u63d0\u7eb2\u6765\u7528 \u53e6\u5916\u7b14\u8bb0\u4e2d \u6709\u4e00\u4e9b\u6211\u5f53\u65f6\u505a\u5386\u5e74\u5377\u65f6\u78b0\u5230\u7684\u96be\u9898 \uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u770b \u5f53\u65f6\u505a\u7684\u6bd4\u8f83\u5306\u5fd9\uff0c\u4e0d\u4fdd\u8bc1\u91cc\u9762\u7684\u4e1c\u897f\u6ca1\u6709\u9519\u8bef\uff0c\u8bf7\u5927\u5bb6\u770b\u7684\u65f6\u5019\u4ed4\u7ec6\u7504\u522b","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840FDS"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html","text":"Data Structure Final Review RandomStar in 2020.01 Chapter 1 Introduction and Algorithm Analysis \u7b97\u6cd5\u7684\u51e0\u4e2a\u8981\u7d20\uff1a\u8f93\u5165\uff0c\u8f93\u51fa\uff0c\u660e\u786e\u6027(Definiteness)\uff0c\u6709\u7a77\u6027(Finiteness)\uff0c\u9ad8\u6548\u6027(Effectiveness) 1.1 \u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6 \u51e0\u4e2a\u57fa\u672c\u7684\u8fd0\u7b97\u89c4\u5219 \u987a\u5e8f\u7ed3\u6784\uff1a\u76f4\u63a5\u76f8\u52a0 \u5faa\u73af\u4e2d\uff1a\u590d\u6742\u5ea6=\u4e00\u6b21\u5faa\u73af\u7684\u590d\u6742\u5ea6x\u5faa\u73af\u6b21\u6570 \u5d4c\u5957\u5faa\u73af\u4e2d\uff1a\u5faa\u73af\u89c4\u6a21\u7684\u4e58\u79efx\u4e00\u6b21\u5faa\u73af\u7684\u590d\u6742\u5ea6 if/else\u8bed\u53e5\uff1a\u9009\u5176\u4e2d\u590d\u6742\u5ea6\u6700\u9ad8\u7684 1.2 \u6700\u5927\u5b50\u5217\u548c\u95ee\u9898\u7684\u5206\u6790 \u7b97\u6cd51\uff1a\u4f7f\u75283\u5c42\u5d4c\u5957\u5faa\u73af\u76f4\u63a5\u8ba1\u7b97\uff0c\u590d\u6742\u5ea6\u4e3a$O(N^3)$ \u7b97\u6cd52\uff1a\u4f7f\u7528\u4e24\u5c42\u5faa\u73af\u5e76\u8bbe\u7f6e\u6807\u8bb0\u4f4d\uff0c\u590d\u6742\u5ea6\u4e3a$O(N^2)$ \u7b97\u6cd53\uff1a\u4f7f\u7528\u5f52\u5e76\u7684\u65b9\u6cd5(\u8fd9\u4e00\u90e8\u5206PPT\u4e0a\u7684\u4ee3\u7801\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u597d\u597d\u770b\u770b)\uff0c\u590d\u6742\u5ea6\u4e3a$O(N\\lg N)$ \u7b97\u6cd54\uff1a\u4e00\u79cd\u5728\u7ebf\u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u65f6\u7ebf\u6027\u7684\uff0c\u4ee3\u7801\u5982\u4e0b C int MaxSubsequenceSum(int A[],int N) { int ThisSum = 0,MaxSum = 0,j; for(j = 0; j < N; j++) { ThisSum += A[j]; if(ThisSum > MaxSum) MaxSum = ThisSum; else if(ThisSum < 0) ThisSum = 0; } return MaxSum; } Chapter 2 Linked List, Stacks and Queues 2.1 List\u7684\u62bd\u8c61\u6570\u636e\u7ed3\u6784(ADT) \u5305\u542b\u5982\u4e0b\u64cd\u4f5c\uff1a \u83b7\u5f97\u957f\u5ea6 \u6253\u5370\u5217\u8868 \u6e05\u7a7a \u67e5\u8be2\u4e00\u4e2a\u5143\u7d20 \u63d2\u5165\u5220\u9664 \u627e\u5230\u4e0b\u4e00\u4e2a \u627e\u6700\u503c 2.1.1 Array List \u9700\u8981\u4f30\u8ba1\u597d\u6570\u7ec4\u7684\u6700\u5927\u957f\u5ea6\uff0c\u627e\u7b2cK\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \u5e38\u6570\u7ea7\u522b \u7684\uff0c\u800c\u63d2\u5165\u548c\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(N)$ 2.1.2 Linked List \u63d2\u5165\u548c\u5220\u9664\u6d88\u8017 \u5e38\u6570\u65f6\u95f4 \uff0c\u800c\u67e5\u8be2\u7b2cK\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(N)$ \u2b50\u94fe\u8868\u7684\u5192\u6ce1\u6392\u5e8f C List BubbleSort(List L) { if(L->Next == NULL || L->Next->Next == NULL) return L; List p = L; while(p->Next->Next != NULL) { if(p->Next->key > p->Next->Next->Key) { List q = p->Next; p->Next = q->Next; q->Next = p->Next->Next; p->Next->Next = q; } } } 2.2 \u6808Stack \u662f\u4e00\u4e2aLIFO\u7684\u5217\u8868(Last-in-First-out) \u652f\u6301\u8fd9\u6837\u4e00\u4e9b\u64cd\u4f5c Push \u5c06\u4e00\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u6808\u7684\u672b\u5c3e Pop \u5f39\u51fa\u6808\u7684\u672b\u5c3e\u5143\u7d20 2.3 \u961f\u5217 Queue \u662f\u4e00\u79cdFIFO\u7684\u5217\u8868(First-in-First-out) \u652f\u6301\u5982\u4e0b\u64cd\u4f5c Enqueue \u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u672b\u5c3e Dequeue \u5c06\u4f4d\u4e8e\u961f\u5217\u6700\u524d\u9762\u7684\u5143\u7d20\u5f39\u51fa chapter 3 Trees 3.1 \u5b9a\u4e49 \u6811\u662f\u4e00\u7cfb\u5217\u7ed3\u70b9\u6784\u6210\u7684(\u4e5f\u53ef\u4ee5\u4e3a\u7a7a) \u5e76\u4e14\u5305\u542b \u4e00\u4e2a\u6839\u8282\u70b9r \u82e5\u5e72\u548cr\u76f8\u8fde\u7684\u5b50\u6811(subtree) \u4e00\u4e2aN\u4e2a\u8282\u70b9\u7684\u6811\u4e00\u5b9a\u6709N-1\u6761\u8fb9 \u51e0\u4e2a\u6811\u4e2d\u7684\u57fa\u672c\u6982\u5ff5 \u7236\u8282\u70b9\uff0c\u5b50\u8282\u70b9\uff0c\u540c\u8f88\u8282\u70b9\uff0c\u53f6\u8282\u70b9 \u8282\u70b9\u7684\u5ea6\u6570\uff1a\u8282\u70b9\u5b50\u6811\u7684\u4e2a\u6570\uff0c\u7a7a\u8282\u70b9\u7684\u5ea6\u6570\u4e3a0 \u6811\u7684\u5ea6\u6570\uff1a\u8282\u70b9\u5ea6\u6570\u7684\u6700\u5927\u503c \u7956\u5148ancestors \uff1a\u6240\u6709\u62e5\u6709\u901a\u5f80\u8fd9\u4e2a\u8282\u70b9\u8def\u5f84\u7684\u8282\u70b9 \u540e\u4ee3decendants\uff1a\u8fd9\u4e2a\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\uff0c\u4e0d\u5305\u542b\u81ea\u5df1 \u6df1\u5ea6depth \u4ece\u6839\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a0 \u9ad8\u5ea6height \u4ece\u53f6\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u8def\u5f84\u7684\u6700\u5927\u957f\u5ea6\uff0c\u53f6\u8282\u70b9\u7684\u9ad8\u5ea6\u4e3a0\uff0c\u7a7a\u8282\u70b9\u7684\u9ad8\u5ea6\u4e3a-1 3.2 \u4e8c\u53c9\u6811 Binary Tree \u6bcf\u4e00\u4e2a\u8282\u70b9\u6700\u591a\u67092\u4e2a\u5b50\u8282\u70b9\u7684\u6811\u53eb\u505a\u4e8c\u53c9\u6811 \u4e8c\u53c9\u6811\u7684\u904d\u5386\uff1a \u524d\u5e8f\u904d\u5386\uff1a\u6309\u7167\u4e0a\u5de6\u53f3\u7684\u987a\u5e8f\u9012\u5f52\u5730\u904d\u5386 \u4e2d\u5e8f\u904d\u5386\uff1a\u6309\u7167\u5de6\u4e0a\u53f3\u7684\u987a\u5e8f\u9012\u5f52\u5730\u904d\u5386 \u540e\u5e8f\u904d\u5386\uff1a\u6309\u7167\u5de6\u53f3\u4e0a\u7684\u987a\u5e8f\u9012\u5f52\u5730\u904d\u5386 ```C void PreOrder(Tree T) { if(T == NULL) return; printf(\"%d \",T->Value); PreOrder(T->Left); PreOrder(T->Right); } void InOrder(Tree T) { if(T == NULL) return; InOrder(T->Left); printf(\"%d \",T->Value); InOrder(T->Right); } void PostOrder(Tree T) { if(T == NULL) return; PostOrder(T->Left); PostOrder(T->Right); printf(\"%d \",T->Value); } ``` \u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff1a \u7b2ci\u5c42\u4e0a\u6700\u591a\u53ef\u4ee5\u7528$2^{i-1}$\u4e2a\u8282\u70b9 \u6df1\u5ea6\u4e3aK\u7684\u4e8c\u53c9\u6811\u6700\u591a\u62e5\u6709$2^k-1$\u4e2a\u8282\u70b9 3.3 \u4e8c\u53c9\u641c\u7d22\u6811BST \u5b9a\u4e49\uff1a \u5de6\u5b50\u6811\u7684\u952e\u503c\u90fd\u4e0d\u8d85\u8fc7\u6839\u8282\u70b9 \u53f3\u5b50\u6811\u7684\u952e\u503c\u90fd\u5927\u4e8e\u6839\u8282\u70b9 \u5de6\u53f3\u5b50\u6811\u90fd\u662f\u4e8c\u53c9\u641c\u7d22\u6811 \u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u6811\u548c\u7a7a\u6811\u662f\u4e8c\u53c9\u641c\u7d22\u6811 \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u51e0\u4e2a\u57fa\u672c\u64cd\u4f5c \u67e5\u627e\u4e00\u4e2a\u952e\u503c\uff1a\u9012\u5f52\u5730\u8fdb\u884c\u67e5\u8be2\uff0c\u6bd4\u8981\u67e5\u7684\u5c0f\u67e5\u53f3\u8fb9\uff0c\u6bd4\u8981\u67e5\u7684\u5927\u67e5\u5de6\u8fb9 \u627e\u5230\u6700\u5c0f/\u6700\u5927\u7684\u952e\u503c\uff1a\u76f4\u63a5\u627e\u6700\u5de6\u8fb9\u7684\u6216\u8005\u6700\u53f3\u8fb9\u7684\u8282\u70b9 \u63d2\u5165\uff1a\u5148\u67e5\u627e\u952e\u503c\uff0c\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e\u5728\u8fdb\u884c\u63d2\u5165 \u4ee5\u4e0a\u4e09\u4e2a\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f$O(h)$ \u800ch\u662f\u6811\u7684\u9ad8\u5ea6\uff0c\u6700\u597d\u60c5\u51b5\u4e0b$h=O(\\log N)$ Chapter 4: Heaps(Priority Queues) \u4e8c\u53c9\u5806 \u5b9e\u73b0\u65b9\u5f0f\uff1a\u4e00\u68f5\u7528\u6570\u7ec4\u8868\u793a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7279\u70b9\uff1a1-H-1\u5c42\u7684\u8282\u70b9\u662f\u6ee1\u7684\uff0c\u7b2cH\u5c42\u7684\u8282\u70b9\u4ece\u5de6\u8fb9\u5f00\u59cb\u4f9d\u6b21\u653e\u7f6e\u6ca1\u6709\u7a7a\u7684\uff0c\u5176\u4e2dH\u662f\u6574\u68f5\u6811\u7684\u9ad8\u5ea6 \u9ad8\u5ea6\u4e3aH\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u6709$[2^H,2^{H+1}-1]$ \u4e2a\u8282\u70b9 \u4e8c\u53c9\u5806\u7684\u6027\u8d28\uff1a \u5bf9\u4e8e\u4e0b\u6807\u4e3aK\u7684\u8282\u70b9\uff0c\u5176\u7236\u8282\u70b9\u7684\u4e0b\u6807\u662fK/2\uff0c\u5176\u5b50\u8282\u70b9\u7684\u4e0b\u6807\u662f2K\u548c2K+1 \u5206\u4e3a\u6700\u5c0f\u5806\u548c\u6700\u5927\u5806\u4e24\u79cd \u6700\u5c0f\u5806\uff0c\u6240\u6709\u7684\u7236\u8282\u70b9\u4e2d\u7684\u503c\u90fd\u8981\u5c0f\u4e8e\u5b50\u8282\u70b9 \u6700\u5927\u5806\uff0c\u6240\u6709\u7684\u7236\u8282\u70b9\u4e2d\u7684\u503c\u8981\u5927\u4e8e\u5b50\u8282\u70b9 \u5806\u7684\u51e0\u79cd\u64cd\u4f5c\uff1a \u63d2\u5165\uff1a\u5411\u4e0b\u8c03\u6574\u5230\u5408\u9002\u7684\u4f4d\u7f6e C void Insert(PriorityHeap H, int X) { int i; if(IsFull(H) == 1) return; else { H->size++; for(i = H->size; H->Elements[i/2] > X; i=i/2) H->Elements[i] = H->Elements[i/2]; H->Element[i]=X; } } \u5220\u9664\u6700\u5c0f\u503c(\u6700\u5c0f\u5806)\uff1a\u76f4\u63a5\u5220\u9664\u6839\u8282\u70b9\uff0c\u5411\u4e0a\u8c03\u6574 c int DeleteMin(PriorityHeap H) { int i, child, Min, Last; if (IsEmpty(H) == 1) return H->Element[0]; else { Min = H->Element[1]; Last = H->Element[H->size--]; for (i = 1; 2 * i <= H->size; i = child) { child = i * 2; if (child != H->size && H->Element[child + 1] < H->Element[child]) child++; if (Last > H->Element[child]) H->Elements[i] = H->Elements[child]; else break; } H->Elements[i] = Last; return Min; } } \u4e00\u4e2a\u5e38\u89c1\u7684\u5e94\u7528\uff1a\u627e\u6570\u7ec4\u4e2d\u7b2cK\u5c0f\u7684\u5143\u7d20 \u5c06\u6570\u7ec4\u63d2\u5165\u4e00\u4e2a\u6700\u5c0f\u5806\u4e2d\uff0c\u4e0d\u65addeletemin\uff0cK\u6b21\u4e4b\u540e\u7684\u5220\u9664\u7684\u503c\u5c31\u662f\u6570\u7ec4\u4e2d\u7b2cK\u5c0f\u7684\u5143\u7d20 Chapter 5: Disjoint Set \u7b49\u4ef7\u7c7b\u7684\u5b9a\u4e49\uff1a\u4e00\u4e2a\u5b9a\u4e49\u5728\u96c6\u5408S\u4e0a\u7684\u5173\u7cfb\u662f\u4e00\u4e2a\u7b49\u4ef7\u5173\u7cfb\u5f53\u4e14\u4ec5\u5f53\u5b83\u5177\u6709\u5151\u6210\u6027\uff0c\u81ea\u53cd\u6027\u548c\u4f20\u9012\u6027 \u5e76\u67e5\u96c6\u7684\u64cd\u4f5c Union \u64cd\u4f5c\uff1a\u666e\u901a\u7684union\uff0c\u6839\u636esize/height\u8fdb\u884cunion \u8d1f\u6570\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u662f\u6839\u8282\u70b9\uff0c\u5e76\u4e14\u8d1f\u6570\u7684\u7edd\u5bf9\u503c\u8868\u793a\u5176\u5143\u7d20\u4e2a\u6570 \u6b63\u6570\u8868\u793a\u5f53\u524d\u4e0b\u6807\u7684\u6570\u636e\u7684\u6839\u8282\u70b9\u7684\u7f16\u53f7 Find \u64cd\u4f5c ```c void Union(DisjSet S,int root1,int root 2) { S[root1]=root2; } int Find(DisjSet S,int X) { while(S[X] > 0) X = S[X]; return X; } ``` \u8def\u5f84\u538b\u7f29\uff1a\u6bcf\u6b21\u5408\u5e76\u76f4\u63a5\u8fde\u63a5\u5230\u6839\u4e0a\u9762\uff0c\u907f\u514d\u8def\u5f84\u8fc7\u957f C int Find(DisjSet S, int X) { if(S[X] <= 0) return X; else return S[X] = Find(S,S[X]); } //Another Method int Find(DisjSet S, int X) { int root,train,lead; for(root = X, S[root] > 0;X = S[root]); for(trail = X; trail != root;trail = lead) { lead = S[trail]; S[trail] = root; } return root; } \u6839\u636e\u5927\u5c0f\u6765\u5408\u5e76\uff1a\u5c06\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\u4e0a\u9762\u53bb C void Union(DisjSet S,int root1,int root 2) { if(S[root1] <= S[root2]) //root1 is larger { S[root1] += S[root2]; S[root2] = root1; //insert root2 to root 1 } else { S[root2] += S[root1]; S[root1] = root2; } } Chpater 6: Graph 6.1 \u56fe\u7684\u57fa\u672c\u6982\u5ff5 \u6709\u5411\u56fe/\u65e0\u5411\u56fe\uff1a\u533a\u522b\u5728\u4e8e\u8fb9\u662f\u5426\u6709\u65b9\u5411 \u5b8c\u5168\u56fe\uff1a\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4e24\u4e24\u76f8\u8fde\uff0c\u5bf9\u4e8eN\u4e2a\u70b9\u6709N(N+1)/2\u6761\u8fb9 \u5b50\u56feG\uff1a\u9876\u70b9\u548c\u8fb9\u90fd\u662f\u56feG\u7684\u5b50\u96c6 \u8def\u5f84\u3001\u8def\u5f84\u7684\u957f\u5ea6 \u8def\u5f84\u5206\u4e3a\u7b80\u5355\u8def\u5f84\u548c\u73af\u4e24\u79cd \u8fde\u901a\u5206\u91cf\uff1a\u56feG\u7684\u4e00\u4e2a\u6700\u5927\u8fde\u901a\u5b50\u56fe \u5f3a\u8fde\u901a\u6709\u5411\u56fe\uff1a\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u5b58\u5728\u6709\u5411\u7684\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe \u9876\u70b9V\u7684\u5ea6\u6570 \u6709\u5411\u56fe\u4e2d\u5206\u4e3a\u51fa\u5ea6\u548c\u5165\u5ea6 \u603b\u800c\u8a00\u4e4b\u8868\u793a\u8fd9\u4e2a\u9876\u70b9\u6240\u5728\u7684\u8fb9\u7684\u6570\u91cf\uff0c\u5176\u4e2d\u6709\u5411\u56fe\u8fd8\u533a\u5206\u51fa\u53bb\u7684\u8fb9\u548c\u8fdb\u5165\u7684\u8fb9 6.2 \u62d3\u6251\u6392\u5e8f \u5b9a\u4e49\uff1a \u62d3\u6251\u903b\u8f91\u987a\u5e8f\u662f\u9876\u70b9\u7684\u4e00\u79cd\u7ebf\u6027\u6392\u5217\uff0c\u5982\u679c\u5b58\u5728\u9876\u70b9i\u6307\u5411\u9876\u70b9j\u7684\u8fb9\uff0c\u90a3\u4e48\u62d3\u6251\u6392\u5e8f\u4e2di\u4e00\u5b9a\u51fa\u73b0\u5728j\u7684\u524d\u9762 \u53ea\u6709\u6709\u5411\u65e0\u73af\u56fe\u624d\u6709\u62d3\u6251\u6392\u5e8f\uff0c\u5e76\u4e14\u53ef\u80fd\u4e0d\u552f\u4e00 \u5b9e\u73b0\u62d3\u6251\u6392\u5e8f\u7684\u7b97\u6cd5 #define INF 123456789 int TopNum[Max]; void TopSort(Graph G) { int Q[Max], rear, front, counter; rear = 0; front = 0; counter = 0; int v, w, i, j; //Find the head vertices for (v = 0; v < G->Nv; v++) { if (Indegree[v] == 0) Q[rear++] = v; } while (rear - front != 0) { v = Q[front++]; TopNum[v] = ++counter; for (w = 0; w < G->nv; w++) { if (G[v][w] != INF) { Indegree[w]--; if (Indegree[w] == 0) Q[rear++] = w; } } } if (counter != G->Nv) return; // The graph has a circle } 6.3 \u6700\u77ed\u8def\u5f84\u7b97\u6cd5 Dijkstra Algorithm \u57fa\u672c\u7684\u601d\u8def\uff1a \u5728\u672a\u8bbf\u95ee\u7684\u9876\u70b9\u4e2d\uff0c\u5bfb\u627e\u4e00\u4e2a\u548c\u76ee\u6807\u8ddd\u79bb\u6700\u77ed\u7684\u9876\u70b9V \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u505c\u6b62\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u5c06V\u6807\u8bb0\u4f4d\u5df2\u8bbf\u95ee \u5bf9\u6240\u6709\u548cV\u76f8\u90bb\u7684\u8282\u70b9W\uff0c\u66f4\u65b0\u6700\u591a\u8def\u5f84\u8ddd\u79bb\u7684\u503c \u4ee3\u7801\u5b9e\u73b0 void Dijkstra(MGraph Graph, int dist[], Vertex S) { //count[MAX] means the number of shortest paths,count[S]=1; int visit[MAX] = {0}, i, j; int n = Graph->Nv; for (i = 0; i < n; i++) dist[i] = INF; dist[S] = 0; for (;;) { int u = -1, v, min = INF; for (i = 0; i < n; i++) { if (dist[i] < min && visit[i] == 0) { min = dist[i]; u = i; } } if (u == -1) break; visit[u] = 1; for (v = 0; v < n; v++) { if (Graph->G[u][v] < INF && visit[v] == 0) { if (dist[v] > dist[u] + Graph->G[u][v]) dist[v] = dist[u] + Graph->G[u][v]; //count[v]=count[u]; //path[v]=u; //if(dist[v]==dist[u]+Graph->G[u][v]) //count[v]+=count[u]; } } } for (i = 0; i < n; i++) if (dist[i] == INF) dist[i] = -1; } \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(|V|^2+|E|)$ 6.4 \u7f51\u7edc\u6d41 Network Flow \u76ee\u6807\uff1a\u5728\u56feG\u4e2d\u627e\u5230\u4eces\u51fa\u53d1\u5230t\u7684\u6700\u5927\u6d41\uff0c\u6b65\u9aa4\u5982\u4e0b \u5728G\u4e2d\u627e\u5230\u4e00\u6761\u4eces\u5230t\u7684\u8def\u5f84 \u5c06\u8fd9\u6761\u8def\u5f84\u7684\u6700\u77ed\u8fb9\u957f\u4ece\u6bcf\u4e00\u6761\u8fb9\u4e2d\u51cf\u53bb\uff0c\u5e76\u5c06\u8fd9\u4e2a\u6570\u503c\u52a0\u5165\u7ed3\u679c\u4e2d \u66f4\u65b0\u56feG\u5e76\u5220\u9664\u957f\u5ea6\u4e3a0\u7684\u8fb9 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u76f4\u5230\u4e0d\u5b58\u5728s\u5230t\u7684\u8def\u5f84 ```c int minlen=INF; int maxflow(int s,int e,int n) { int i,result=0; while(1) { if(search(s,e,n)==0) return result; for(i=e;i!=s;i=pre[i]) if(G[pre[i]][i]<minlen) minlen=G[pre[i]][i]; for(i=e;i!=s;i=pre[i]) { G[pre[i]][i]-=minlen; G[i][pre[i]]+=minlen; } result+=minlen; } return result; } int search(int s,int e,int n) { int v,i; rear=0; front=0; memset(visit,0,sizeof(visit)); q[rear]=s; rear++; visit[s]=1; while(rear-front!=0) { v=q[front]; front++; for(i=0;i<n;i++) { if(visit[i]==0&&G[v][i]!=0) { q[rear]=i; rear++; visit[i]=1; pre[i]=v; if(i==e){ return 1; } } } } return 0; } ``` \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(|E|^2\\log |V|)$ 6.5 \u6700\u5c0f\u751f\u6210\u6811\u548cDFS DFS\u7684\u57fa\u672c\u6a21\u5f0f\uff1a\u4ece\u4e00\u4e2a\u9876\u70b9V\u5f00\u59cb\uff0c\u904d\u5386\u6240\u6709\u548cV\u76f8\u90bb\u5e76\u4e14\u672a\u8bbf\u95ee\u7684\u9876\u70b9\uff0c\u9700\u8981\u9012\u5f52\u5730\u8fdb\u884c C void DFS(Vertex v) { visit[V]=1; int w; for(w=0;w<n;w++) { if(visit[w] == 0 && G[v][u] < INF) DFS(w); } } \u4e00\u4e2a\u57fa\u672c\u7684\u5e94\u7528\uff1a\u627e\u8fde\u901a\u5206\u91cf C void ListComponents(Graph G) { for each v in G if(visit[v]==0) { DFS(v); printf(\"\\n\"); } } Prim\u7b97\u6cd5\u548cKruskal\u7b97\u6cd5\u90fd\u662f\u8d2a\u5fc3\u7b97\u6cd5 \u5177\u4f53\u7684\u7b97\u6cd5\u770bPPT\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e00\u79cd\u662fDFS\u7684\u7b97\u6cd5\uff0c\u4e00\u79cd\u662fBFS\u7684\u7b97\u6cd5 6.6 \u4e00\u4e9b\u5386\u5e74\u5377\u91cc\u96be\u4ee5\u5224\u65ad\u7684\u9898\u76ee \u56fe\u8bba\u4e2d\u4e00\u4e9b\u96be\u4ee5\u5224\u65ad\u7684\u7ed3\u8bba\uff08\u90fd\u662f\u5bf9\u7684\uff09 If e is the only shortest edge in the weighted graph G, then e must be in the minimum spanning tree of G. If the BFS sequence of a graph is 1 2 3 4 ... , and if there is an edge between vertices 1 and 4, then there must be an edge between the vertices 1 and 3. In a directed graph G with at least two vertices, if DFS from any vertex can visit every other vertices, then the topological order must NOT exist. Suppose that a graph is represented by an adjacency matrix. If there exist non-zero entries in the matrix, yet all the entries below the diagonal are zeros, then this graph must be a directed graph. \u6b27\u62c9\u56de\u8def/\u6b27\u62c9\u8def\u5f84\uff1a\u904d\u5386\u56feG\u4e2d\u7684\u6bcf\u4e00\u6761\u8def\u5f84 \u65e0\u5411\u56fe\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\u56fe\u7684\u6240\u6709\u9876\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570\u4e14\u8fde\u901a \u6709\u5411\u56fe\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u7684\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6\u4e14\u56fe\u8981\u8fde\u901a \u54c8\u5bc6\u987f\u8def\u5f84/\u54c8\u5bc6\u987f\u56de\u8def\uff1a\u6070\u597d\u901a\u8fc7\u56feG\u7684\u6bcf\u4e2a\u8282\u70b9\u4e00\u6b21 Kruskal's algorithm is to grow the minimum spanning tree by adding one edge, and thus an associated vertex, to the tree in each stage. \uff08 FALSE \uff09 \u5173\u4e8e\u62d3\u6251\u903b\u8f91\u6392\u5e8f If a graph has a topological sequence, then its adjacency matrix must be triangular. \u9519\u7684\uff0c\u5728\u65e0\u5411\u56fe\u4e2d\u4e0d\u4e00\u5b9a If Vi precedes Vj in a topological sequence, then there must be a path from Vi to Vj . \u9519\u7684\uff0c\u4e0d\u4e00\u5b9a\u6709 If the adjacency matrix is triangular, then the corresponding directed graph must have a unique topological sequence. \u9519\u7684\uff0c\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b In a DAG, if for any pair of distinct vertices Vi and Vj , there is a path either from Vi to V j or from Vj to Vi , then the DAG must have a unique topological sequence. \u5bf9\u7684 Chapter 7: Sort 7.1 \u63d2\u5165\u6392\u5e8f \u6700\u597d\u7684\u60c5\u51b5\u662f$O(N)$ \u6700\u574f\u7684\u60c5\u51b5\u662f$O(N^2)$ N\u4e2a\u5143\u7d20\u4e2d\u7684\u5e73\u5747inversion\u4e2a\u6570\u4e3a$I=\\frac{N(N+1)}{4}$ \u5e76\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(I+N)$ c void InsertionSort(int a[], int n) { int j, p, tmp; for (p = 1; p < n; p++) { tmp = a[p]; for (j = p; j > 0 && a[j - 1] > tmp; j--) { a[j] = a[j - 1]; } a[j] = tmp; } } 7.2 \u5e0c\u5c14\u6392\u5e8f \u5b9a\u4e49\u4e00\u7cfb\u5217\u95f4\u9694\uff0c\u6bcf\u6b21\u6309\u7167\u95f4\u9694\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u4e14\u6bcf\u4e00\u8f6e\u7684\u95f4\u9694\u4e0d\u65ad\u51cf\u5c0f\uff0c\u76f4\u5230\u53d8\u62101 c void ShellSort(int a[], int n) { int i, j, increment, tmp; for (increment = n / 2; increment > 0; increment /= 2) { for (i = increment; i < n; i++) { tmp = a[i]; for (j = i; j >= increment; j -= increment) { if (tmp < a[j - increment]) { a[j] = a[j - increment]; } else break; } a[j] = tmp; } } } \u6700\u5dee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f\u5e73\u65b9\u7ea7\u522b\u7684 7.3 \u5806\u6392\u5e8f \u7528\u5efa\u5806+delete max\u64cd\u4f5c\u6765\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N\\lg N)$ ```c #define leftchild(i) (2 * (i) + 1) //different from traditonal heap,a[] start from index 0; void PercDown(int a[], int i, int n) { int child, tmp; for (tmp = a[i]; leftchild(i) < n; i = child) { child = leftchild(i); if (child != n - 1 && a[child + 1] > a[child]) child++; if (a[child] > tmp) a[i] = a[child]; else break; } a[i] = tmp; } void HeapSort(int a[], int n) { int i; for (i = n / 2; i >= 0; i--) //build heap PrecDown(a, i, n); for (i = n - 1; i > 0; i--) { int t = a[0]; a[0] = a[i]; a[i] = t; PercDown(a, 0, i); } } ``` 7.4 \u5f52\u5e76\u6392\u5e8f \u5c06\u6570\u7ec4\u5206\u6210\u4e24\u8def\u8fdb\u884c\u6392\u5e8f\u7136\u540e\u5c06\u4e24\u4e2a\u6570\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(N\\lg N)$ ```C void MSort(int a[], int tmp[], int left, int right) { int center = (left + right) / 2; if (left < right) { MSort(a, tmp, left, center); Msort(a, tmp, center + 1, right); Merge(a, tmp, left, center + 1, right); } } void MergeSort(int a, int n) { int tmp[Max]; Msort(a, tmp, 0, n - 1); //need O(n) extra space } void Merge(int a[], int tmp[], int lpos, int rpos, int rightend) { int i, leftend, num, tmppos; leftend = rpos - 1; tmppos = lpos; num = rightend - lpos + 1; while (lpos <= leftend && rpos <= rightend) { if (a[lpos] <= a[rpos]) tmp[tmppos++] = a[lpos++]; else tmp[tmppos++] = a[rpos++]; } while (lpos <= leftend) tmp[tmppos++] = a[lpos++]; while (rpos <= rightend) tmp[tmppos++] = a[rpos++]; for (i = 0; i < num; i++, rightend--) a[rightend] = tmp[rightend]; } ``` \u4e00\u79cd\u8fed\u4ee3\u5f0f\u7684\u5b9e\u73b0\u65b9\u5f0f void merge_pass(ElementType list[], ElementType sorted[], int N, int length); void merge_sort(ElementType list[], int N) { ElementType extra[MAXN]; /* the extra space required */ int length = 1; /* current length of sublist being merged */ while (length < N) { merge_pass(list, extra, N, length); /* merge list into extra */ output(extra, N); length *= 2; merge_pass(extra, list, N, length); /* merge extra back to list */ output(list, N); length *= 2; } } void merge_pass(ElementType list[], ElementType sorted[], int N, int length) { int i, j; for (i = 0; i < N; i += 2 * length) { int x, y, z; x = i; y = i + length; z = x; while (x < i + length && y < i + 2 * length && x < n && y < n) { if (list[x] < list[y]) sorted[z++] = list[x++]; else sorted[z++] = list[y++]; } if (x < i + length) while (x < i + length) sorted[z++] = list[x++]; if (y < i + 2 * length) while (y < i + 2 * length) sorted[z++] = list[y++]; } } 7.5 \u5feb\u901f\u6392\u5e8f\uff1a\u5df2\u77e5\u7684\u6700\u5feb\u6392\u5e8f\u65b9\u5f0f \u9700\u8981\u9009\u62e9\u4e00\u4e2apivot\uff0c\u6bcf\u6b21\u5c06\u6bd4pivot\u6548\u5730\u653e\u5230\u5de6\u8fb9\uff0c\u5927\u7684\u653e\u5230\u53f3\u8fb9 \u6700\u574f\u7684\u590d\u6742\u5ea6\u4f9d\u7136\u65f6\u5e73\u65b9\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u6700\u4f18\u7684\u590d\u6742\u5ea6\u662f$O(N\\lg N)$\uff0c\u5e76\u4e14\u5e73\u5747\u590d\u6742\u5ea6\u662f$O(N\\lg N)$ \u4e00\u4e2a\u7ed3\u8bba\uff1a\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u81f3\u5c11\u662f$O(N\\lg N)$\u7ea7\u522b\u7684 int median3(int a[], int left, int right) { int center = (left + right) / 2; if (a[left] > center) swap(a[left], a[center]); if (a[left] > a[right]) swap(a[left], a[right]); if (a[center] > a[right]) swap(a[right], a[center]); //these steps makes a[left]<=a[center]<=a[right] swap(a[center], a[right - 1]) //hide pivot //only need to sort a[left+1]~ a[right-2] return a[right - 1]; } void Qsort(int a[], int left, int right) { int i, j, pivot; pivot = median3(a, left, right); i = left, j = right - 1; while (1) { while (a[++i] < pivot) { } while (a[--j] > pivot) { } if (i < j) swap(a[i], a[j]); else break; } swap(a[i], a[right - 1]); Qsort(a, left, i - 1); Qsort(a, i + 1, right); } void QuickSort(int a[], int n) { Qsort(a, 0, n - 1); } 7.6 \u6876\u6392\u5e8f\uff0c\u57fa\u6570\u6392\u5e8f \u6876\u6392\u5e8f\uff1a\u65f6\u95f4\u6362\u7a7a\u95f4\u7684\u7ecf\u5178\u65b9\u6cd5 \u57fa\u6570\u6392\u5e8f\uff1a\u7528Least Significant Digit first(LSD)\u7684\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f \u5177\u4f53\u7684\u53ef\u4ee5\u770bPPT\u600e\u4e48\u8fdb\u884c\u64cd\u4f5c 7.7 \u603b\u7ed3\uff1a \u6392\u5e8f\u7b97\u6cd5\u7684\u7a33\u5b9a\u6027 \u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\uff1a\u5806\u6392\u5e8f\uff0c\u5feb\u901f\u6392\u5e8f\uff0c\u5e0c\u5c14\u6392\u5e8f\uff0c\u76f4\u63a5\u9009\u62e9\u6392\u5e8f \u7a33\u5b9a\u7684\u6392\u5e8f\uff1a\u57fa\u6570\u6392\u5e8f\uff0c\u5192\u6ce1\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\uff0c\u5f52\u5e76\u6392\u5e8f \u6570\u7ec4\u6392\u5e8f\u5448\u73b0\u7684\u7279\u5f81 \u5806\u6392\u5e8f\uff1a\u4e00\u822c\u6ca1\u4ec0\u4e48\u7279\u5f81 \u5f52\u5e76\u6392\u5e8f\uff1a\u6392\u5e8f\u4e2d\u4f1a\u51fa\u73b0\u8fde\u7eed\u82e5\u5e72\u4e2a\u6570\u5b57\u5df2\u7ecf\u6392\u597d\u4e86\u987a\u5e8f \u5feb\u901f\u6392\u5e8f\uff1a\u6709\u4e00\u4e9b\u6570\uff0c\u524d\u9762\u7684\u90fd\u6bd4\u8fd9\u4e2a\u6570\u5c0f\uff0c\u540e\u9762\u7684\u90fd\u6bd4\u4ed6\u5927\uff0c\u5177\u4f53\u8981\u770brun\u4e86\u591a\u5c11\u6b21 \u9009\u62e9\u6392\u5e8f\uff1a\u6bcf\u4e00\u6b21\u90fd\u4f1a\u9009\u51fa\u6700\u5927\u6216\u8005\u6700\u5c0f\u7684\u6570\u6392\u5728\u6700\u540e\u5e94\u8be5\u51fa\u73b0\u7684\u4f4d\u7f6e Chapter 8: Hash 8.1 \u5b9a\u4e49\u548c\u57fa\u672c\u6982\u5ff5 \u54c8\u5e0c\u51fd\u6570f(x)\u7684\u7ed3\u679c\u8868\u793ax\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u4f4d\u7f6e T\u8868\u793a\u4e0d\u540c\u7684x\u7684\u4e2a\u6570 n\u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u7684\u4f4d\u7f6e\u4e2a\u6570 b\u8868\u793a\u54c8\u5e0c\u8868\u4e2dbucket\u7684\u4e2a\u6570 s\u8868\u793a\u69fd\u7684\u4e2a\u6570 identifi er density = n / T loading density $\\lambda=n/sb$ collision \u51b2\u7a81\uff1a\u4e24\u4e2a\u503c\u88ab\u653e\u5230\u4e86\u540c\u4e00\u4e2abucket\u4e2d overflow \u6ea2\u51fa\uff1abucket\u8d85\u8fc7\u4e86\u627f\u8f7d\u7684\u4e0a\u9650 8.2 \u89e3\u51b3collision \u9700\u8981\u627e\u5230\u53e6\u4e00\u4e2a\u7a7a\u7684\u5730\u65b9\u6765\u653e\u7f6e\u5f85\u653e\u5165\u7684\u5143\u7d20 \u5e38\u7528\u7684\u65b9\u6cd5\uff1a \u7ebf\u6027\u63a2\u67e5\uff0c\u5e73\u65b9\u63a2\u67e5\uff0c\u770bPPT\u548c\u505a\u9898\u5c31\u53ef\u4ee5\u7406\u89e3\u4e24\u79cd\u65b9\u6cd5\u662f\u600e\u4e48\u64cd\u4f5c\u7684","title":"FDS"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#data-structure-final-review","text":"","title":"Data Structure Final Review"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#randomstar-in-202001","text":"","title":"RandomStar in 2020.01"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#chapter-1-introduction-and-algorithm-analysis","text":"\u7b97\u6cd5\u7684\u51e0\u4e2a\u8981\u7d20\uff1a\u8f93\u5165\uff0c\u8f93\u51fa\uff0c\u660e\u786e\u6027(Definiteness)\uff0c\u6709\u7a77\u6027(Finiteness)\uff0c\u9ad8\u6548\u6027(Effectiveness)","title":"Chapter 1 Introduction and Algorithm Analysis"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#11","text":"\u51e0\u4e2a\u57fa\u672c\u7684\u8fd0\u7b97\u89c4\u5219 \u987a\u5e8f\u7ed3\u6784\uff1a\u76f4\u63a5\u76f8\u52a0 \u5faa\u73af\u4e2d\uff1a\u590d\u6742\u5ea6=\u4e00\u6b21\u5faa\u73af\u7684\u590d\u6742\u5ea6x\u5faa\u73af\u6b21\u6570 \u5d4c\u5957\u5faa\u73af\u4e2d\uff1a\u5faa\u73af\u89c4\u6a21\u7684\u4e58\u79efx\u4e00\u6b21\u5faa\u73af\u7684\u590d\u6742\u5ea6 if/else\u8bed\u53e5\uff1a\u9009\u5176\u4e2d\u590d\u6742\u5ea6\u6700\u9ad8\u7684","title":"1.1 \u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#12","text":"\u7b97\u6cd51\uff1a\u4f7f\u75283\u5c42\u5d4c\u5957\u5faa\u73af\u76f4\u63a5\u8ba1\u7b97\uff0c\u590d\u6742\u5ea6\u4e3a$O(N^3)$ \u7b97\u6cd52\uff1a\u4f7f\u7528\u4e24\u5c42\u5faa\u73af\u5e76\u8bbe\u7f6e\u6807\u8bb0\u4f4d\uff0c\u590d\u6742\u5ea6\u4e3a$O(N^2)$ \u7b97\u6cd53\uff1a\u4f7f\u7528\u5f52\u5e76\u7684\u65b9\u6cd5(\u8fd9\u4e00\u90e8\u5206PPT\u4e0a\u7684\u4ee3\u7801\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u597d\u597d\u770b\u770b)\uff0c\u590d\u6742\u5ea6\u4e3a$O(N\\lg N)$ \u7b97\u6cd54\uff1a\u4e00\u79cd\u5728\u7ebf\u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u65f6\u7ebf\u6027\u7684\uff0c\u4ee3\u7801\u5982\u4e0b C int MaxSubsequenceSum(int A[],int N) { int ThisSum = 0,MaxSum = 0,j; for(j = 0; j < N; j++) { ThisSum += A[j]; if(ThisSum > MaxSum) MaxSum = ThisSum; else if(ThisSum < 0) ThisSum = 0; } return MaxSum; }","title":"1.2 \u6700\u5927\u5b50\u5217\u548c\u95ee\u9898\u7684\u5206\u6790"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#chapter-2-linked-list-stacks-and-queues","text":"","title":"Chapter 2 Linked List, Stacks and Queues"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#21-listadt","text":"\u5305\u542b\u5982\u4e0b\u64cd\u4f5c\uff1a \u83b7\u5f97\u957f\u5ea6 \u6253\u5370\u5217\u8868 \u6e05\u7a7a \u67e5\u8be2\u4e00\u4e2a\u5143\u7d20 \u63d2\u5165\u5220\u9664 \u627e\u5230\u4e0b\u4e00\u4e2a \u627e\u6700\u503c","title":"2.1 List\u7684\u62bd\u8c61\u6570\u636e\u7ed3\u6784(ADT)"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#211-array-list","text":"\u9700\u8981\u4f30\u8ba1\u597d\u6570\u7ec4\u7684\u6700\u5927\u957f\u5ea6\uff0c\u627e\u7b2cK\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \u5e38\u6570\u7ea7\u522b \u7684\uff0c\u800c\u63d2\u5165\u548c\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(N)$","title":"2.1.1 Array List"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#212-linked-list","text":"\u63d2\u5165\u548c\u5220\u9664\u6d88\u8017 \u5e38\u6570\u65f6\u95f4 \uff0c\u800c\u67e5\u8be2\u7b2cK\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(N)$ \u2b50\u94fe\u8868\u7684\u5192\u6ce1\u6392\u5e8f C List BubbleSort(List L) { if(L->Next == NULL || L->Next->Next == NULL) return L; List p = L; while(p->Next->Next != NULL) { if(p->Next->key > p->Next->Next->Key) { List q = p->Next; p->Next = q->Next; q->Next = p->Next->Next; p->Next->Next = q; } } }","title":"2.1.2 Linked List"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#22-stack","text":"\u662f\u4e00\u4e2aLIFO\u7684\u5217\u8868(Last-in-First-out) \u652f\u6301\u8fd9\u6837\u4e00\u4e9b\u64cd\u4f5c Push \u5c06\u4e00\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u6808\u7684\u672b\u5c3e Pop \u5f39\u51fa\u6808\u7684\u672b\u5c3e\u5143\u7d20","title":"2.2 \u6808Stack"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#23-queue","text":"\u662f\u4e00\u79cdFIFO\u7684\u5217\u8868(First-in-First-out) \u652f\u6301\u5982\u4e0b\u64cd\u4f5c Enqueue \u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u672b\u5c3e Dequeue \u5c06\u4f4d\u4e8e\u961f\u5217\u6700\u524d\u9762\u7684\u5143\u7d20\u5f39\u51fa","title":"2.3 \u961f\u5217 Queue"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#chapter-3-trees","text":"","title":"chapter 3 Trees"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#31","text":"\u6811\u662f\u4e00\u7cfb\u5217\u7ed3\u70b9\u6784\u6210\u7684(\u4e5f\u53ef\u4ee5\u4e3a\u7a7a) \u5e76\u4e14\u5305\u542b \u4e00\u4e2a\u6839\u8282\u70b9r \u82e5\u5e72\u548cr\u76f8\u8fde\u7684\u5b50\u6811(subtree) \u4e00\u4e2aN\u4e2a\u8282\u70b9\u7684\u6811\u4e00\u5b9a\u6709N-1\u6761\u8fb9 \u51e0\u4e2a\u6811\u4e2d\u7684\u57fa\u672c\u6982\u5ff5 \u7236\u8282\u70b9\uff0c\u5b50\u8282\u70b9\uff0c\u540c\u8f88\u8282\u70b9\uff0c\u53f6\u8282\u70b9 \u8282\u70b9\u7684\u5ea6\u6570\uff1a\u8282\u70b9\u5b50\u6811\u7684\u4e2a\u6570\uff0c\u7a7a\u8282\u70b9\u7684\u5ea6\u6570\u4e3a0 \u6811\u7684\u5ea6\u6570\uff1a\u8282\u70b9\u5ea6\u6570\u7684\u6700\u5927\u503c \u7956\u5148ancestors \uff1a\u6240\u6709\u62e5\u6709\u901a\u5f80\u8fd9\u4e2a\u8282\u70b9\u8def\u5f84\u7684\u8282\u70b9 \u540e\u4ee3decendants\uff1a\u8fd9\u4e2a\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\uff0c\u4e0d\u5305\u542b\u81ea\u5df1 \u6df1\u5ea6depth \u4ece\u6839\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a0 \u9ad8\u5ea6height \u4ece\u53f6\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u8def\u5f84\u7684\u6700\u5927\u957f\u5ea6\uff0c\u53f6\u8282\u70b9\u7684\u9ad8\u5ea6\u4e3a0\uff0c\u7a7a\u8282\u70b9\u7684\u9ad8\u5ea6\u4e3a-1","title":"3.1 \u5b9a\u4e49"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#32-binary-tree","text":"\u6bcf\u4e00\u4e2a\u8282\u70b9\u6700\u591a\u67092\u4e2a\u5b50\u8282\u70b9\u7684\u6811\u53eb\u505a\u4e8c\u53c9\u6811 \u4e8c\u53c9\u6811\u7684\u904d\u5386\uff1a \u524d\u5e8f\u904d\u5386\uff1a\u6309\u7167\u4e0a\u5de6\u53f3\u7684\u987a\u5e8f\u9012\u5f52\u5730\u904d\u5386 \u4e2d\u5e8f\u904d\u5386\uff1a\u6309\u7167\u5de6\u4e0a\u53f3\u7684\u987a\u5e8f\u9012\u5f52\u5730\u904d\u5386 \u540e\u5e8f\u904d\u5386\uff1a\u6309\u7167\u5de6\u53f3\u4e0a\u7684\u987a\u5e8f\u9012\u5f52\u5730\u904d\u5386 ```C void PreOrder(Tree T) { if(T == NULL) return; printf(\"%d \",T->Value); PreOrder(T->Left); PreOrder(T->Right); } void InOrder(Tree T) { if(T == NULL) return; InOrder(T->Left); printf(\"%d \",T->Value); InOrder(T->Right); } void PostOrder(Tree T) { if(T == NULL) return; PostOrder(T->Left); PostOrder(T->Right); printf(\"%d \",T->Value); } ``` \u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff1a \u7b2ci\u5c42\u4e0a\u6700\u591a\u53ef\u4ee5\u7528$2^{i-1}$\u4e2a\u8282\u70b9 \u6df1\u5ea6\u4e3aK\u7684\u4e8c\u53c9\u6811\u6700\u591a\u62e5\u6709$2^k-1$\u4e2a\u8282\u70b9","title":"3.2 \u4e8c\u53c9\u6811 Binary Tree"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#33-bst","text":"\u5b9a\u4e49\uff1a \u5de6\u5b50\u6811\u7684\u952e\u503c\u90fd\u4e0d\u8d85\u8fc7\u6839\u8282\u70b9 \u53f3\u5b50\u6811\u7684\u952e\u503c\u90fd\u5927\u4e8e\u6839\u8282\u70b9 \u5de6\u53f3\u5b50\u6811\u90fd\u662f\u4e8c\u53c9\u641c\u7d22\u6811 \u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u6811\u548c\u7a7a\u6811\u662f\u4e8c\u53c9\u641c\u7d22\u6811 \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u51e0\u4e2a\u57fa\u672c\u64cd\u4f5c \u67e5\u627e\u4e00\u4e2a\u952e\u503c\uff1a\u9012\u5f52\u5730\u8fdb\u884c\u67e5\u8be2\uff0c\u6bd4\u8981\u67e5\u7684\u5c0f\u67e5\u53f3\u8fb9\uff0c\u6bd4\u8981\u67e5\u7684\u5927\u67e5\u5de6\u8fb9 \u627e\u5230\u6700\u5c0f/\u6700\u5927\u7684\u952e\u503c\uff1a\u76f4\u63a5\u627e\u6700\u5de6\u8fb9\u7684\u6216\u8005\u6700\u53f3\u8fb9\u7684\u8282\u70b9 \u63d2\u5165\uff1a\u5148\u67e5\u627e\u952e\u503c\uff0c\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e\u5728\u8fdb\u884c\u63d2\u5165 \u4ee5\u4e0a\u4e09\u4e2a\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f$O(h)$ \u800ch\u662f\u6811\u7684\u9ad8\u5ea6\uff0c\u6700\u597d\u60c5\u51b5\u4e0b$h=O(\\log N)$","title":"3.3 \u4e8c\u53c9\u641c\u7d22\u6811BST"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#chapter-4-heapspriority-queues","text":"\u4e8c\u53c9\u5806 \u5b9e\u73b0\u65b9\u5f0f\uff1a\u4e00\u68f5\u7528\u6570\u7ec4\u8868\u793a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7279\u70b9\uff1a1-H-1\u5c42\u7684\u8282\u70b9\u662f\u6ee1\u7684\uff0c\u7b2cH\u5c42\u7684\u8282\u70b9\u4ece\u5de6\u8fb9\u5f00\u59cb\u4f9d\u6b21\u653e\u7f6e\u6ca1\u6709\u7a7a\u7684\uff0c\u5176\u4e2dH\u662f\u6574\u68f5\u6811\u7684\u9ad8\u5ea6 \u9ad8\u5ea6\u4e3aH\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u6709$[2^H,2^{H+1}-1]$ \u4e2a\u8282\u70b9 \u4e8c\u53c9\u5806\u7684\u6027\u8d28\uff1a \u5bf9\u4e8e\u4e0b\u6807\u4e3aK\u7684\u8282\u70b9\uff0c\u5176\u7236\u8282\u70b9\u7684\u4e0b\u6807\u662fK/2\uff0c\u5176\u5b50\u8282\u70b9\u7684\u4e0b\u6807\u662f2K\u548c2K+1 \u5206\u4e3a\u6700\u5c0f\u5806\u548c\u6700\u5927\u5806\u4e24\u79cd \u6700\u5c0f\u5806\uff0c\u6240\u6709\u7684\u7236\u8282\u70b9\u4e2d\u7684\u503c\u90fd\u8981\u5c0f\u4e8e\u5b50\u8282\u70b9 \u6700\u5927\u5806\uff0c\u6240\u6709\u7684\u7236\u8282\u70b9\u4e2d\u7684\u503c\u8981\u5927\u4e8e\u5b50\u8282\u70b9 \u5806\u7684\u51e0\u79cd\u64cd\u4f5c\uff1a \u63d2\u5165\uff1a\u5411\u4e0b\u8c03\u6574\u5230\u5408\u9002\u7684\u4f4d\u7f6e C void Insert(PriorityHeap H, int X) { int i; if(IsFull(H) == 1) return; else { H->size++; for(i = H->size; H->Elements[i/2] > X; i=i/2) H->Elements[i] = H->Elements[i/2]; H->Element[i]=X; } } \u5220\u9664\u6700\u5c0f\u503c(\u6700\u5c0f\u5806)\uff1a\u76f4\u63a5\u5220\u9664\u6839\u8282\u70b9\uff0c\u5411\u4e0a\u8c03\u6574 c int DeleteMin(PriorityHeap H) { int i, child, Min, Last; if (IsEmpty(H) == 1) return H->Element[0]; else { Min = H->Element[1]; Last = H->Element[H->size--]; for (i = 1; 2 * i <= H->size; i = child) { child = i * 2; if (child != H->size && H->Element[child + 1] < H->Element[child]) child++; if (Last > H->Element[child]) H->Elements[i] = H->Elements[child]; else break; } H->Elements[i] = Last; return Min; } } \u4e00\u4e2a\u5e38\u89c1\u7684\u5e94\u7528\uff1a\u627e\u6570\u7ec4\u4e2d\u7b2cK\u5c0f\u7684\u5143\u7d20 \u5c06\u6570\u7ec4\u63d2\u5165\u4e00\u4e2a\u6700\u5c0f\u5806\u4e2d\uff0c\u4e0d\u65addeletemin\uff0cK\u6b21\u4e4b\u540e\u7684\u5220\u9664\u7684\u503c\u5c31\u662f\u6570\u7ec4\u4e2d\u7b2cK\u5c0f\u7684\u5143\u7d20","title":"Chapter 4: Heaps(Priority Queues)"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#chapter-5-disjoint-set","text":"\u7b49\u4ef7\u7c7b\u7684\u5b9a\u4e49\uff1a\u4e00\u4e2a\u5b9a\u4e49\u5728\u96c6\u5408S\u4e0a\u7684\u5173\u7cfb\u662f\u4e00\u4e2a\u7b49\u4ef7\u5173\u7cfb\u5f53\u4e14\u4ec5\u5f53\u5b83\u5177\u6709\u5151\u6210\u6027\uff0c\u81ea\u53cd\u6027\u548c\u4f20\u9012\u6027 \u5e76\u67e5\u96c6\u7684\u64cd\u4f5c Union \u64cd\u4f5c\uff1a\u666e\u901a\u7684union\uff0c\u6839\u636esize/height\u8fdb\u884cunion \u8d1f\u6570\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u662f\u6839\u8282\u70b9\uff0c\u5e76\u4e14\u8d1f\u6570\u7684\u7edd\u5bf9\u503c\u8868\u793a\u5176\u5143\u7d20\u4e2a\u6570 \u6b63\u6570\u8868\u793a\u5f53\u524d\u4e0b\u6807\u7684\u6570\u636e\u7684\u6839\u8282\u70b9\u7684\u7f16\u53f7 Find \u64cd\u4f5c ```c void Union(DisjSet S,int root1,int root 2) { S[root1]=root2; } int Find(DisjSet S,int X) { while(S[X] > 0) X = S[X]; return X; } ``` \u8def\u5f84\u538b\u7f29\uff1a\u6bcf\u6b21\u5408\u5e76\u76f4\u63a5\u8fde\u63a5\u5230\u6839\u4e0a\u9762\uff0c\u907f\u514d\u8def\u5f84\u8fc7\u957f C int Find(DisjSet S, int X) { if(S[X] <= 0) return X; else return S[X] = Find(S,S[X]); } //Another Method int Find(DisjSet S, int X) { int root,train,lead; for(root = X, S[root] > 0;X = S[root]); for(trail = X; trail != root;trail = lead) { lead = S[trail]; S[trail] = root; } return root; } \u6839\u636e\u5927\u5c0f\u6765\u5408\u5e76\uff1a\u5c06\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\u4e0a\u9762\u53bb C void Union(DisjSet S,int root1,int root 2) { if(S[root1] <= S[root2]) //root1 is larger { S[root1] += S[root2]; S[root2] = root1; //insert root2 to root 1 } else { S[root2] += S[root1]; S[root1] = root2; } }","title":"Chapter 5: Disjoint Set"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#chpater-6-graph","text":"","title":"Chpater 6: Graph"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#61","text":"\u6709\u5411\u56fe/\u65e0\u5411\u56fe\uff1a\u533a\u522b\u5728\u4e8e\u8fb9\u662f\u5426\u6709\u65b9\u5411 \u5b8c\u5168\u56fe\uff1a\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4e24\u4e24\u76f8\u8fde\uff0c\u5bf9\u4e8eN\u4e2a\u70b9\u6709N(N+1)/2\u6761\u8fb9 \u5b50\u56feG\uff1a\u9876\u70b9\u548c\u8fb9\u90fd\u662f\u56feG\u7684\u5b50\u96c6 \u8def\u5f84\u3001\u8def\u5f84\u7684\u957f\u5ea6 \u8def\u5f84\u5206\u4e3a\u7b80\u5355\u8def\u5f84\u548c\u73af\u4e24\u79cd \u8fde\u901a\u5206\u91cf\uff1a\u56feG\u7684\u4e00\u4e2a\u6700\u5927\u8fde\u901a\u5b50\u56fe \u5f3a\u8fde\u901a\u6709\u5411\u56fe\uff1a\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u5b58\u5728\u6709\u5411\u7684\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe \u9876\u70b9V\u7684\u5ea6\u6570 \u6709\u5411\u56fe\u4e2d\u5206\u4e3a\u51fa\u5ea6\u548c\u5165\u5ea6 \u603b\u800c\u8a00\u4e4b\u8868\u793a\u8fd9\u4e2a\u9876\u70b9\u6240\u5728\u7684\u8fb9\u7684\u6570\u91cf\uff0c\u5176\u4e2d\u6709\u5411\u56fe\u8fd8\u533a\u5206\u51fa\u53bb\u7684\u8fb9\u548c\u8fdb\u5165\u7684\u8fb9","title":"6.1 \u56fe\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#62","text":"\u5b9a\u4e49\uff1a \u62d3\u6251\u903b\u8f91\u987a\u5e8f\u662f\u9876\u70b9\u7684\u4e00\u79cd\u7ebf\u6027\u6392\u5217\uff0c\u5982\u679c\u5b58\u5728\u9876\u70b9i\u6307\u5411\u9876\u70b9j\u7684\u8fb9\uff0c\u90a3\u4e48\u62d3\u6251\u6392\u5e8f\u4e2di\u4e00\u5b9a\u51fa\u73b0\u5728j\u7684\u524d\u9762 \u53ea\u6709\u6709\u5411\u65e0\u73af\u56fe\u624d\u6709\u62d3\u6251\u6392\u5e8f\uff0c\u5e76\u4e14\u53ef\u80fd\u4e0d\u552f\u4e00 \u5b9e\u73b0\u62d3\u6251\u6392\u5e8f\u7684\u7b97\u6cd5 #define INF 123456789 int TopNum[Max]; void TopSort(Graph G) { int Q[Max], rear, front, counter; rear = 0; front = 0; counter = 0; int v, w, i, j; //Find the head vertices for (v = 0; v < G->Nv; v++) { if (Indegree[v] == 0) Q[rear++] = v; } while (rear - front != 0) { v = Q[front++]; TopNum[v] = ++counter; for (w = 0; w < G->nv; w++) { if (G[v][w] != INF) { Indegree[w]--; if (Indegree[w] == 0) Q[rear++] = w; } } } if (counter != G->Nv) return; // The graph has a circle }","title":"6.2 \u62d3\u6251\u6392\u5e8f"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#63-dijkstra-algorithm","text":"\u57fa\u672c\u7684\u601d\u8def\uff1a \u5728\u672a\u8bbf\u95ee\u7684\u9876\u70b9\u4e2d\uff0c\u5bfb\u627e\u4e00\u4e2a\u548c\u76ee\u6807\u8ddd\u79bb\u6700\u77ed\u7684\u9876\u70b9V \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u505c\u6b62\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u5c06V\u6807\u8bb0\u4f4d\u5df2\u8bbf\u95ee \u5bf9\u6240\u6709\u548cV\u76f8\u90bb\u7684\u8282\u70b9W\uff0c\u66f4\u65b0\u6700\u591a\u8def\u5f84\u8ddd\u79bb\u7684\u503c \u4ee3\u7801\u5b9e\u73b0 void Dijkstra(MGraph Graph, int dist[], Vertex S) { //count[MAX] means the number of shortest paths,count[S]=1; int visit[MAX] = {0}, i, j; int n = Graph->Nv; for (i = 0; i < n; i++) dist[i] = INF; dist[S] = 0; for (;;) { int u = -1, v, min = INF; for (i = 0; i < n; i++) { if (dist[i] < min && visit[i] == 0) { min = dist[i]; u = i; } } if (u == -1) break; visit[u] = 1; for (v = 0; v < n; v++) { if (Graph->G[u][v] < INF && visit[v] == 0) { if (dist[v] > dist[u] + Graph->G[u][v]) dist[v] = dist[u] + Graph->G[u][v]; //count[v]=count[u]; //path[v]=u; //if(dist[v]==dist[u]+Graph->G[u][v]) //count[v]+=count[u]; } } } for (i = 0; i < n; i++) if (dist[i] == INF) dist[i] = -1; } \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(|V|^2+|E|)$","title":"6.3 \u6700\u77ed\u8def\u5f84\u7b97\u6cd5 Dijkstra Algorithm"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#64-network-flow","text":"\u76ee\u6807\uff1a\u5728\u56feG\u4e2d\u627e\u5230\u4eces\u51fa\u53d1\u5230t\u7684\u6700\u5927\u6d41\uff0c\u6b65\u9aa4\u5982\u4e0b \u5728G\u4e2d\u627e\u5230\u4e00\u6761\u4eces\u5230t\u7684\u8def\u5f84 \u5c06\u8fd9\u6761\u8def\u5f84\u7684\u6700\u77ed\u8fb9\u957f\u4ece\u6bcf\u4e00\u6761\u8fb9\u4e2d\u51cf\u53bb\uff0c\u5e76\u5c06\u8fd9\u4e2a\u6570\u503c\u52a0\u5165\u7ed3\u679c\u4e2d \u66f4\u65b0\u56feG\u5e76\u5220\u9664\u957f\u5ea6\u4e3a0\u7684\u8fb9 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u76f4\u5230\u4e0d\u5b58\u5728s\u5230t\u7684\u8def\u5f84 ```c int minlen=INF; int maxflow(int s,int e,int n) { int i,result=0; while(1) { if(search(s,e,n)==0) return result; for(i=e;i!=s;i=pre[i]) if(G[pre[i]][i]<minlen) minlen=G[pre[i]][i]; for(i=e;i!=s;i=pre[i]) { G[pre[i]][i]-=minlen; G[i][pre[i]]+=minlen; } result+=minlen; } return result; } int search(int s,int e,int n) { int v,i; rear=0; front=0; memset(visit,0,sizeof(visit)); q[rear]=s; rear++; visit[s]=1; while(rear-front!=0) { v=q[front]; front++; for(i=0;i<n;i++) { if(visit[i]==0&&G[v][i]!=0) { q[rear]=i; rear++; visit[i]=1; pre[i]=v; if(i==e){ return 1; } } } } return 0; } ``` \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(|E|^2\\log |V|)$","title":"6.4 \u7f51\u7edc\u6d41 Network Flow"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#65-dfs","text":"DFS\u7684\u57fa\u672c\u6a21\u5f0f\uff1a\u4ece\u4e00\u4e2a\u9876\u70b9V\u5f00\u59cb\uff0c\u904d\u5386\u6240\u6709\u548cV\u76f8\u90bb\u5e76\u4e14\u672a\u8bbf\u95ee\u7684\u9876\u70b9\uff0c\u9700\u8981\u9012\u5f52\u5730\u8fdb\u884c C void DFS(Vertex v) { visit[V]=1; int w; for(w=0;w<n;w++) { if(visit[w] == 0 && G[v][u] < INF) DFS(w); } } \u4e00\u4e2a\u57fa\u672c\u7684\u5e94\u7528\uff1a\u627e\u8fde\u901a\u5206\u91cf C void ListComponents(Graph G) { for each v in G if(visit[v]==0) { DFS(v); printf(\"\\n\"); } } Prim\u7b97\u6cd5\u548cKruskal\u7b97\u6cd5\u90fd\u662f\u8d2a\u5fc3\u7b97\u6cd5 \u5177\u4f53\u7684\u7b97\u6cd5\u770bPPT\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e00\u79cd\u662fDFS\u7684\u7b97\u6cd5\uff0c\u4e00\u79cd\u662fBFS\u7684\u7b97\u6cd5","title":"6.5 \u6700\u5c0f\u751f\u6210\u6811\u548cDFS"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#66","text":"\u56fe\u8bba\u4e2d\u4e00\u4e9b\u96be\u4ee5\u5224\u65ad\u7684\u7ed3\u8bba\uff08\u90fd\u662f\u5bf9\u7684\uff09 If e is the only shortest edge in the weighted graph G, then e must be in the minimum spanning tree of G. If the BFS sequence of a graph is 1 2 3 4 ... , and if there is an edge between vertices 1 and 4, then there must be an edge between the vertices 1 and 3. In a directed graph G with at least two vertices, if DFS from any vertex can visit every other vertices, then the topological order must NOT exist. Suppose that a graph is represented by an adjacency matrix. If there exist non-zero entries in the matrix, yet all the entries below the diagonal are zeros, then this graph must be a directed graph. \u6b27\u62c9\u56de\u8def/\u6b27\u62c9\u8def\u5f84\uff1a\u904d\u5386\u56feG\u4e2d\u7684\u6bcf\u4e00\u6761\u8def\u5f84 \u65e0\u5411\u56fe\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\u56fe\u7684\u6240\u6709\u9876\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570\u4e14\u8fde\u901a \u6709\u5411\u56fe\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u7684\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6\u4e14\u56fe\u8981\u8fde\u901a \u54c8\u5bc6\u987f\u8def\u5f84/\u54c8\u5bc6\u987f\u56de\u8def\uff1a\u6070\u597d\u901a\u8fc7\u56feG\u7684\u6bcf\u4e2a\u8282\u70b9\u4e00\u6b21 Kruskal's algorithm is to grow the minimum spanning tree by adding one edge, and thus an associated vertex, to the tree in each stage. \uff08 FALSE \uff09 \u5173\u4e8e\u62d3\u6251\u903b\u8f91\u6392\u5e8f If a graph has a topological sequence, then its adjacency matrix must be triangular. \u9519\u7684\uff0c\u5728\u65e0\u5411\u56fe\u4e2d\u4e0d\u4e00\u5b9a If Vi precedes Vj in a topological sequence, then there must be a path from Vi to Vj . \u9519\u7684\uff0c\u4e0d\u4e00\u5b9a\u6709 If the adjacency matrix is triangular, then the corresponding directed graph must have a unique topological sequence. \u9519\u7684\uff0c\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b In a DAG, if for any pair of distinct vertices Vi and Vj , there is a path either from Vi to V j or from Vj to Vi , then the DAG must have a unique topological sequence. \u5bf9\u7684","title":"6.6 \u4e00\u4e9b\u5386\u5e74\u5377\u91cc\u96be\u4ee5\u5224\u65ad\u7684\u9898\u76ee"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#chapter-7-sort","text":"","title":"Chapter 7: Sort"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#71","text":"\u6700\u597d\u7684\u60c5\u51b5\u662f$O(N)$ \u6700\u574f\u7684\u60c5\u51b5\u662f$O(N^2)$ N\u4e2a\u5143\u7d20\u4e2d\u7684\u5e73\u5747inversion\u4e2a\u6570\u4e3a$I=\\frac{N(N+1)}{4}$ \u5e76\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(I+N)$ c void InsertionSort(int a[], int n) { int j, p, tmp; for (p = 1; p < n; p++) { tmp = a[p]; for (j = p; j > 0 && a[j - 1] > tmp; j--) { a[j] = a[j - 1]; } a[j] = tmp; } }","title":"7.1 \u63d2\u5165\u6392\u5e8f"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#72","text":"\u5b9a\u4e49\u4e00\u7cfb\u5217\u95f4\u9694\uff0c\u6bcf\u6b21\u6309\u7167\u95f4\u9694\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u4e14\u6bcf\u4e00\u8f6e\u7684\u95f4\u9694\u4e0d\u65ad\u51cf\u5c0f\uff0c\u76f4\u5230\u53d8\u62101 c void ShellSort(int a[], int n) { int i, j, increment, tmp; for (increment = n / 2; increment > 0; increment /= 2) { for (i = increment; i < n; i++) { tmp = a[i]; for (j = i; j >= increment; j -= increment) { if (tmp < a[j - increment]) { a[j] = a[j - increment]; } else break; } a[j] = tmp; } } } \u6700\u5dee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f\u5e73\u65b9\u7ea7\u522b\u7684","title":"7.2 \u5e0c\u5c14\u6392\u5e8f"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#73","text":"\u7528\u5efa\u5806+delete max\u64cd\u4f5c\u6765\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N\\lg N)$ ```c #define leftchild(i) (2 * (i) + 1) //different from traditonal heap,a[] start from index 0; void PercDown(int a[], int i, int n) { int child, tmp; for (tmp = a[i]; leftchild(i) < n; i = child) { child = leftchild(i); if (child != n - 1 && a[child + 1] > a[child]) child++; if (a[child] > tmp) a[i] = a[child]; else break; } a[i] = tmp; } void HeapSort(int a[], int n) { int i; for (i = n / 2; i >= 0; i--) //build heap PrecDown(a, i, n); for (i = n - 1; i > 0; i--) { int t = a[0]; a[0] = a[i]; a[i] = t; PercDown(a, 0, i); } } ```","title":"7.3 \u5806\u6392\u5e8f"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#74","text":"\u5c06\u6570\u7ec4\u5206\u6210\u4e24\u8def\u8fdb\u884c\u6392\u5e8f\u7136\u540e\u5c06\u4e24\u4e2a\u6570\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(N\\lg N)$ ```C void MSort(int a[], int tmp[], int left, int right) { int center = (left + right) / 2; if (left < right) { MSort(a, tmp, left, center); Msort(a, tmp, center + 1, right); Merge(a, tmp, left, center + 1, right); } } void MergeSort(int a, int n) { int tmp[Max]; Msort(a, tmp, 0, n - 1); //need O(n) extra space } void Merge(int a[], int tmp[], int lpos, int rpos, int rightend) { int i, leftend, num, tmppos; leftend = rpos - 1; tmppos = lpos; num = rightend - lpos + 1; while (lpos <= leftend && rpos <= rightend) { if (a[lpos] <= a[rpos]) tmp[tmppos++] = a[lpos++]; else tmp[tmppos++] = a[rpos++]; } while (lpos <= leftend) tmp[tmppos++] = a[lpos++]; while (rpos <= rightend) tmp[tmppos++] = a[rpos++]; for (i = 0; i < num; i++, rightend--) a[rightend] = tmp[rightend]; } ``` \u4e00\u79cd\u8fed\u4ee3\u5f0f\u7684\u5b9e\u73b0\u65b9\u5f0f void merge_pass(ElementType list[], ElementType sorted[], int N, int length); void merge_sort(ElementType list[], int N) { ElementType extra[MAXN]; /* the extra space required */ int length = 1; /* current length of sublist being merged */ while (length < N) { merge_pass(list, extra, N, length); /* merge list into extra */ output(extra, N); length *= 2; merge_pass(extra, list, N, length); /* merge extra back to list */ output(list, N); length *= 2; } } void merge_pass(ElementType list[], ElementType sorted[], int N, int length) { int i, j; for (i = 0; i < N; i += 2 * length) { int x, y, z; x = i; y = i + length; z = x; while (x < i + length && y < i + 2 * length && x < n && y < n) { if (list[x] < list[y]) sorted[z++] = list[x++]; else sorted[z++] = list[y++]; } if (x < i + length) while (x < i + length) sorted[z++] = list[x++]; if (y < i + 2 * length) while (y < i + 2 * length) sorted[z++] = list[y++]; } }","title":"7.4 \u5f52\u5e76\u6392\u5e8f"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#75","text":"\u9700\u8981\u9009\u62e9\u4e00\u4e2apivot\uff0c\u6bcf\u6b21\u5c06\u6bd4pivot\u6548\u5730\u653e\u5230\u5de6\u8fb9\uff0c\u5927\u7684\u653e\u5230\u53f3\u8fb9 \u6700\u574f\u7684\u590d\u6742\u5ea6\u4f9d\u7136\u65f6\u5e73\u65b9\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u6700\u4f18\u7684\u590d\u6742\u5ea6\u662f$O(N\\lg N)$\uff0c\u5e76\u4e14\u5e73\u5747\u590d\u6742\u5ea6\u662f$O(N\\lg N)$ \u4e00\u4e2a\u7ed3\u8bba\uff1a\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u81f3\u5c11\u662f$O(N\\lg N)$\u7ea7\u522b\u7684 int median3(int a[], int left, int right) { int center = (left + right) / 2; if (a[left] > center) swap(a[left], a[center]); if (a[left] > a[right]) swap(a[left], a[right]); if (a[center] > a[right]) swap(a[right], a[center]); //these steps makes a[left]<=a[center]<=a[right] swap(a[center], a[right - 1]) //hide pivot //only need to sort a[left+1]~ a[right-2] return a[right - 1]; } void Qsort(int a[], int left, int right) { int i, j, pivot; pivot = median3(a, left, right); i = left, j = right - 1; while (1) { while (a[++i] < pivot) { } while (a[--j] > pivot) { } if (i < j) swap(a[i], a[j]); else break; } swap(a[i], a[right - 1]); Qsort(a, left, i - 1); Qsort(a, i + 1, right); } void QuickSort(int a[], int n) { Qsort(a, 0, n - 1); }","title":"7.5 \u5feb\u901f\u6392\u5e8f\uff1a\u5df2\u77e5\u7684\u6700\u5feb\u6392\u5e8f\u65b9\u5f0f"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#76","text":"\u6876\u6392\u5e8f\uff1a\u65f6\u95f4\u6362\u7a7a\u95f4\u7684\u7ecf\u5178\u65b9\u6cd5 \u57fa\u6570\u6392\u5e8f\uff1a\u7528Least Significant Digit first(LSD)\u7684\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f \u5177\u4f53\u7684\u53ef\u4ee5\u770bPPT\u600e\u4e48\u8fdb\u884c\u64cd\u4f5c","title":"7.6 \u6876\u6392\u5e8f\uff0c\u57fa\u6570\u6392\u5e8f"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#77","text":"","title":"7.7 \u603b\u7ed3\uff1a"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#_1","text":"\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\uff1a\u5806\u6392\u5e8f\uff0c\u5feb\u901f\u6392\u5e8f\uff0c\u5e0c\u5c14\u6392\u5e8f\uff0c\u76f4\u63a5\u9009\u62e9\u6392\u5e8f \u7a33\u5b9a\u7684\u6392\u5e8f\uff1a\u57fa\u6570\u6392\u5e8f\uff0c\u5192\u6ce1\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\uff0c\u5f52\u5e76\u6392\u5e8f","title":"\u6392\u5e8f\u7b97\u6cd5\u7684\u7a33\u5b9a\u6027"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#_2","text":"\u5806\u6392\u5e8f\uff1a\u4e00\u822c\u6ca1\u4ec0\u4e48\u7279\u5f81 \u5f52\u5e76\u6392\u5e8f\uff1a\u6392\u5e8f\u4e2d\u4f1a\u51fa\u73b0\u8fde\u7eed\u82e5\u5e72\u4e2a\u6570\u5b57\u5df2\u7ecf\u6392\u597d\u4e86\u987a\u5e8f \u5feb\u901f\u6392\u5e8f\uff1a\u6709\u4e00\u4e9b\u6570\uff0c\u524d\u9762\u7684\u90fd\u6bd4\u8fd9\u4e2a\u6570\u5c0f\uff0c\u540e\u9762\u7684\u90fd\u6bd4\u4ed6\u5927\uff0c\u5177\u4f53\u8981\u770brun\u4e86\u591a\u5c11\u6b21 \u9009\u62e9\u6392\u5e8f\uff1a\u6bcf\u4e00\u6b21\u90fd\u4f1a\u9009\u51fa\u6700\u5927\u6216\u8005\u6700\u5c0f\u7684\u6570\u6392\u5728\u6700\u540e\u5e94\u8be5\u51fa\u73b0\u7684\u4f4d\u7f6e","title":"\u6570\u7ec4\u6392\u5e8f\u5448\u73b0\u7684\u7279\u5f81"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#chapter-8-hash","text":"","title":"Chapter 8: Hash"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#81","text":"\u54c8\u5e0c\u51fd\u6570f(x)\u7684\u7ed3\u679c\u8868\u793ax\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u4f4d\u7f6e T\u8868\u793a\u4e0d\u540c\u7684x\u7684\u4e2a\u6570 n\u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u7684\u4f4d\u7f6e\u4e2a\u6570 b\u8868\u793a\u54c8\u5e0c\u8868\u4e2dbucket\u7684\u4e2a\u6570 s\u8868\u793a\u69fd\u7684\u4e2a\u6570 identifi er density = n / T loading density $\\lambda=n/sb$ collision \u51b2\u7a81\uff1a\u4e24\u4e2a\u503c\u88ab\u653e\u5230\u4e86\u540c\u4e00\u4e2abucket\u4e2d overflow \u6ea2\u51fa\uff1abucket\u8d85\u8fc7\u4e86\u627f\u8f7d\u7684\u4e0a\u9650","title":"8.1 \u5b9a\u4e49\u548c\u57fa\u672c\u6982\u5ff5"},{"location":"FDS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/FDS.html#82-collision","text":"\u9700\u8981\u627e\u5230\u53e6\u4e00\u4e2a\u7a7a\u7684\u5730\u65b9\u6765\u653e\u7f6e\u5f85\u653e\u5165\u7684\u5143\u7d20 \u5e38\u7528\u7684\u65b9\u6cd5\uff1a \u7ebf\u6027\u63a2\u67e5\uff0c\u5e73\u65b9\u63a2\u67e5\uff0c\u770bPPT\u548c\u505a\u9898\u5c31\u53ef\u4ee5\u7406\u89e3\u4e24\u79cd\u65b9\u6cd5\u662f\u600e\u4e48\u64cd\u4f5c\u7684","title":"8.2 \u89e3\u51b3collision"},{"location":"FSE%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%9F%BA%E7%A1%80/index.html","text":"\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840 \u5f20\u5f15\u8001\u5e08\uff0c2019-2020\u590f\u5b66\u671f \u4e2a\u4eba\u8ba4\u4e3a\u4e5f\u662f\u611f\u52a8\u8f6f\u5de5\u5341\u5927sb\u8bfe\u4e4b\u4e00 \u8fd9\u95e8\u8bfe\u975e\u5e38\u8ff7\uff0c\u4e0a\u8bfe\u4f5c\u4e1a\u8003\u8bd5\u57fa\u672c\u662f\u5b8c\u5168\u5206\u79bb\u7684\uff0c\u4e0d\u7ba1\u54ea\u4e2a\u73ed \u4e0a\u8bfe\u8bb2\u7684\u662f\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5404\u79cd\u7406\u8bba\uff0c\u975e\u5e38\u50ac\u7720\uff0c\u5e76\u4e14\u8001\u5e08\u81ea\u5df1\u4e5f\u4f3c\u61c2\u975e\u61c2\uff0c\u5efa\u8bae\u4e0d\u8981\u542c \u4f5c\u4e1a\u662f\u4e00\u4e9b\u5c0f\u7ec4\u8ba8\u8bba\u548c\u505a\u4e00\u4e2a\u7f51\u7ad9 \u6240\u6709\u7684\u4f5c\u4e1a\u90fd\u9700\u8981\u7ec4\u961f\uff0c \u4e00\u5b9a\u8981\u627e\u5230\u9760\u8c31\u7684\u961f\u53cb \uff0c\u5426\u5219\u4f1a\u975e\u5e38\u96be\u9876 \u6211\u6240\u5728\u7684\u5c0f\u7ec4\u6240\u6709\u4eba\u90fd\u975e\u5e38\u9760\u8c31\uff0c\u56e0\u6b64\u6211\u4eec\u7ec4\u7684\u5de5\u4f5c\u7ed3\u675f\u7684\u975e\u5e38\u5feb\uff0c\u6700\u540e\u7684\u5404\u9879\u5f97\u5206\u76f8\u6bd4\u4e8e\u5176\u4ed6\u7ec4\u4e5f\u9ad8\u4e86\u4e00\u4e9b \u7f51\u7ad9\u9700\u89815\u4e2a\u5c0f\u7ec4\u6bcf\u4e2a\u5c0f\u7ec4\u505a\u4e00\u4e2a\u5b50\u7cfb\u7edf\u6700\u540e\u5408\u5e76\u6210\u5b8c\u6574\u7684\u4e00\u4e2a\u7f51\u7ad9 \u9057\u61be\u7684\u662f\u548c\u5176\u4ed6\u5c0f\u7ec4\u4e4b\u95f4\u7684\u5408\u4f5c\u6d6a\u8d39\u4e86\u6211\u4eec\u5927\u91cf\u7684\u65f6\u95f4 \u4e3b\u8981\u662f\u56e0\u4e3a25\u4eba\u4e00\u7ec4\uff0c\u5f88\u96be\u4e0d\u78b0\u4e0a\u83ab\u540d\u5176\u5999\u7684\u4eba\uff0c \u5c24\u5176\u662f\u8981\u5f53\u5fc3\u5f53\u522b\u7684\u7ec4\u7684\u7ec4\u957f\u662f\u4e0d\u662f\u4e2asb \u5927\u4f5c\u4e1a\u9a8c\u6536\u7684\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u5982\u679c5\u4e2a\u5c0f\u7ec4\u6ca1\u6709\u505a\u51fa\u5b8c\u6574\u7684\u7f51\u7ad9\uff0c\u5f97\u5206\u4f1a\u6bd4\u8f83\u4f4e \u7ec4\u957f\u8d21\u732e\u7a81\u51fa\u7684\u53ef\u4ee5\u5728\u603b\u6210\u7ee9\u91cc\u52a0\u5206\uff0c\u4f46\u662f\u6709\u4e00\u5b9a\u7684\u98ce\u9669\uff0c\u8981\u81ea\u5df1\u6743\u8861\u5229\u5f0a\uff0c\u8f6f\u5de5\u5927\u4e8c\u4e0b\u5b66\u671f\u975e\u5e38\u5fd9 \u8003\u8bd5\u4ee5\u5ba2\u89c2\u9898+\u4e3b\u89c2\u9898\u7684\u5f62\u5f0f\u8003\u5bdf \u5ba2\u89c2\u9898\u5c31\u662f\u9898\u5e93\u91cc\u90a3\u4e9b\u9898\u76ee\u4e00\u6a21\u4e00\u6837\u6765\u8003\uff0c\u591a\u5237\u5237\u5c31\u6ca1\u95ee\u9898\uff0c\u6211\u81ea\u5df1\u7528\u722c\u866b\u722c\u4e0b\u6765\u4e86\u6240\u6709\u6570\u636e\uff0c\u505a\u6210\u4e86\u4e00\u4e2ajson\u95ee\u4ef7\u548c\u4e00\u4e2amd\u6587\u4ef6\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e0b\u8f7d\u4e4b\u540e\u6253\u5370\u51fa\u6765\u505a \u4e5f\u53ef\u4ee5\u770b\u770b\u6211\u7684\u4ed3\u5e93\u91cc\u53e6\u4e00\u4e2a\u9879\u76ee\uff1a\u8f6f\u5de5\u57fa\u5237\u9898\u5c0f\u7a0b\u5e8f \u4e3b\u89c2\u9898\u7cfb\u7edf\u8bbe\u8ba1\u4e3a\u4e3b\uff0c\u5305\u62ec\u753b\u5404\u79cd\u56fe\u548c\u6d4b\u8bd5\u6837\u4f8b\u7684\u8bbe\u8ba1\uff0c\u8fd9\u4e2a\u5efa\u8bae\u8003\u524d\u7a81\u51fb \u603b\u7684\u6765\u8bf4\u7ed9\u5206\u6bd4\u8f83\u9ad8\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6211\u4eec\u7ec4\u7684\u4eba\u90fd\u6bd4\u8f83\u9760\u8c31\u7684\u539f\u56e0 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 2020.12.26\u66f4\u65b0\uff1a \u200b \u4e0a\u4e86\u8f6f\u5de5\u4e09\u8fde\u4e4b\u540e\u6211\u53d1\u73b0\u8f6f\u5de5\u57fa\u8fd8\u7b97\u662f\u6bd4\u8f83\u53cb\u597d\u7684\u8bfe\u7a0b\uff0c\u8fd9\u4e2a\u5b66\u671f\u5df2\u7ecf\u591a\u6b21\u88ab\u83ab\u540d\u5176\u5999\u7684\u8f6f\u4e09\u8fde\u641e\u7834\u9632\u4e86\uff0c\u5404\u4f4d\u6700\u597d\u65e9\u70b9\u5b66\u4e60\u4e00\u70b9web\u524d\u540e\u7aef\u5f00\u53d1\u7684\u6280\u672f\uff0c\u8f6f\u5de5\u5f88\u591a\u8bfe\u5176\u5b9e\u90fd\u9700\u8981\u7528\u5230\u8fd9\u4e00\u5957\u4e1c\u897f\u3002","title":"Index"},{"location":"FSE%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%9F%BA%E7%A1%80/index.html#_1","text":"\u5f20\u5f15\u8001\u5e08\uff0c2019-2020\u590f\u5b66\u671f \u4e2a\u4eba\u8ba4\u4e3a\u4e5f\u662f\u611f\u52a8\u8f6f\u5de5\u5341\u5927sb\u8bfe\u4e4b\u4e00 \u8fd9\u95e8\u8bfe\u975e\u5e38\u8ff7\uff0c\u4e0a\u8bfe\u4f5c\u4e1a\u8003\u8bd5\u57fa\u672c\u662f\u5b8c\u5168\u5206\u79bb\u7684\uff0c\u4e0d\u7ba1\u54ea\u4e2a\u73ed \u4e0a\u8bfe\u8bb2\u7684\u662f\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5404\u79cd\u7406\u8bba\uff0c\u975e\u5e38\u50ac\u7720\uff0c\u5e76\u4e14\u8001\u5e08\u81ea\u5df1\u4e5f\u4f3c\u61c2\u975e\u61c2\uff0c\u5efa\u8bae\u4e0d\u8981\u542c \u4f5c\u4e1a\u662f\u4e00\u4e9b\u5c0f\u7ec4\u8ba8\u8bba\u548c\u505a\u4e00\u4e2a\u7f51\u7ad9 \u6240\u6709\u7684\u4f5c\u4e1a\u90fd\u9700\u8981\u7ec4\u961f\uff0c \u4e00\u5b9a\u8981\u627e\u5230\u9760\u8c31\u7684\u961f\u53cb \uff0c\u5426\u5219\u4f1a\u975e\u5e38\u96be\u9876 \u6211\u6240\u5728\u7684\u5c0f\u7ec4\u6240\u6709\u4eba\u90fd\u975e\u5e38\u9760\u8c31\uff0c\u56e0\u6b64\u6211\u4eec\u7ec4\u7684\u5de5\u4f5c\u7ed3\u675f\u7684\u975e\u5e38\u5feb\uff0c\u6700\u540e\u7684\u5404\u9879\u5f97\u5206\u76f8\u6bd4\u4e8e\u5176\u4ed6\u7ec4\u4e5f\u9ad8\u4e86\u4e00\u4e9b \u7f51\u7ad9\u9700\u89815\u4e2a\u5c0f\u7ec4\u6bcf\u4e2a\u5c0f\u7ec4\u505a\u4e00\u4e2a\u5b50\u7cfb\u7edf\u6700\u540e\u5408\u5e76\u6210\u5b8c\u6574\u7684\u4e00\u4e2a\u7f51\u7ad9 \u9057\u61be\u7684\u662f\u548c\u5176\u4ed6\u5c0f\u7ec4\u4e4b\u95f4\u7684\u5408\u4f5c\u6d6a\u8d39\u4e86\u6211\u4eec\u5927\u91cf\u7684\u65f6\u95f4 \u4e3b\u8981\u662f\u56e0\u4e3a25\u4eba\u4e00\u7ec4\uff0c\u5f88\u96be\u4e0d\u78b0\u4e0a\u83ab\u540d\u5176\u5999\u7684\u4eba\uff0c \u5c24\u5176\u662f\u8981\u5f53\u5fc3\u5f53\u522b\u7684\u7ec4\u7684\u7ec4\u957f\u662f\u4e0d\u662f\u4e2asb \u5927\u4f5c\u4e1a\u9a8c\u6536\u7684\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u5982\u679c5\u4e2a\u5c0f\u7ec4\u6ca1\u6709\u505a\u51fa\u5b8c\u6574\u7684\u7f51\u7ad9\uff0c\u5f97\u5206\u4f1a\u6bd4\u8f83\u4f4e \u7ec4\u957f\u8d21\u732e\u7a81\u51fa\u7684\u53ef\u4ee5\u5728\u603b\u6210\u7ee9\u91cc\u52a0\u5206\uff0c\u4f46\u662f\u6709\u4e00\u5b9a\u7684\u98ce\u9669\uff0c\u8981\u81ea\u5df1\u6743\u8861\u5229\u5f0a\uff0c\u8f6f\u5de5\u5927\u4e8c\u4e0b\u5b66\u671f\u975e\u5e38\u5fd9 \u8003\u8bd5\u4ee5\u5ba2\u89c2\u9898+\u4e3b\u89c2\u9898\u7684\u5f62\u5f0f\u8003\u5bdf \u5ba2\u89c2\u9898\u5c31\u662f\u9898\u5e93\u91cc\u90a3\u4e9b\u9898\u76ee\u4e00\u6a21\u4e00\u6837\u6765\u8003\uff0c\u591a\u5237\u5237\u5c31\u6ca1\u95ee\u9898\uff0c\u6211\u81ea\u5df1\u7528\u722c\u866b\u722c\u4e0b\u6765\u4e86\u6240\u6709\u6570\u636e\uff0c\u505a\u6210\u4e86\u4e00\u4e2ajson\u95ee\u4ef7\u548c\u4e00\u4e2amd\u6587\u4ef6\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e0b\u8f7d\u4e4b\u540e\u6253\u5370\u51fa\u6765\u505a \u4e5f\u53ef\u4ee5\u770b\u770b\u6211\u7684\u4ed3\u5e93\u91cc\u53e6\u4e00\u4e2a\u9879\u76ee\uff1a\u8f6f\u5de5\u57fa\u5237\u9898\u5c0f\u7a0b\u5e8f \u4e3b\u89c2\u9898\u7cfb\u7edf\u8bbe\u8ba1\u4e3a\u4e3b\uff0c\u5305\u62ec\u753b\u5404\u79cd\u56fe\u548c\u6d4b\u8bd5\u6837\u4f8b\u7684\u8bbe\u8ba1\uff0c\u8fd9\u4e2a\u5efa\u8bae\u8003\u524d\u7a81\u51fb \u603b\u7684\u6765\u8bf4\u7ed9\u5206\u6bd4\u8f83\u9ad8\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6211\u4eec\u7ec4\u7684\u4eba\u90fd\u6bd4\u8f83\u9760\u8c31\u7684\u539f\u56e0 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 2020.12.26\u66f4\u65b0\uff1a \u200b \u4e0a\u4e86\u8f6f\u5de5\u4e09\u8fde\u4e4b\u540e\u6211\u53d1\u73b0\u8f6f\u5de5\u57fa\u8fd8\u7b97\u662f\u6bd4\u8f83\u53cb\u597d\u7684\u8bfe\u7a0b\uff0c\u8fd9\u4e2a\u5b66\u671f\u5df2\u7ecf\u591a\u6b21\u88ab\u83ab\u540d\u5176\u5999\u7684\u8f6f\u4e09\u8fde\u641e\u7834\u9632\u4e86\uff0c\u5404\u4f4d\u6700\u597d\u65e9\u70b9\u5b66\u4e60\u4e00\u70b9web\u524d\u540e\u7aef\u5f00\u53d1\u7684\u6280\u672f\uff0c\u8f6f\u5de5\u5f88\u591a\u8bfe\u5176\u5b9e\u90fd\u9700\u8981\u7528\u5230\u8fd9\u4e00\u5957\u4e1c\u897f\u3002","title":"\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840"},{"location":"Java%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/index.html","text":"Java\u5e94\u7528\u6280\u672f \u6211\u662flwm\u8001\u5e08\u73ed\u7ea7\u7684\uff0c\u7ed9\u5206\u6bd4\u8f83\u597d \u5e73\u65f6\u4f5c\u4e1a70%+\u8003\u8bd530%\uff0clz\u662flwm\u8001\u5e08\u73ed\u7ea7\u7684\uff0c\u8001\u5e08\u7ed9\u5206\u5f88\u597d\uff08wk\u73ed\u542c\u8bf4\u7ed9\u5206\u4e5f\u597d\uff0clxq\u73ed\u672a\u77e5\uff09\uff0c\u5e73\u65f6\u4f5c\u4e1a\u4e3b\u8981\u662f5\u4e2a\u7f16\u7a0b\u4f5c\u4e1a+pta\u7684\u4e24\u6b21\u7ec3\u4e60\u9898\uff08\u9898\u76ee\u5f88\u591a\uff0c\u6709\u4e00\u5f20\u8bd5\u5377\u7684\u91cf\uff0c\u9650\u65f6\u51e0\u4e2a\u5c0f\u65f6\u5b8c\u6210\uff09 \u7f16\u7a0b\u4f5c\u4e1a \u4e94\u4e2a\u7f16\u7a0b\u4f5c\u4e1a\u5206\u522b\u662f\uff1a hello world \u4e00\u4e2a\u706b\u67f4\u68d2\u5c0f\u6e38\u620f\uff08\u4e0d\u9700\u8981GUI\uff09 String\u7c7b\u7684\u6e90\u7801\u9605\u8bfb\u5206\u6790+\u81ea\u5df1\u5199\u4e00\u4e2a\u77e9\u9635\u7c7b\u548c\u5411\u91cf\u7c7b \u7f51\u7edc\u722c\u866b+\u7b80\u6613\u641c\u7d22\u5f15\u64ce \u5927\u4f5c\u4e1a\uff1aSwing+Socket\u7f16\u7a0b+\u591a\u7ebf\u7a0b+JDBC\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u4e1c\u897f \u53ef\u4ee5\u53c2\u8003https://github.com/Zhang-Each/Collection-of-schoolwork-code\u4f46\u662f\u6211\u5199\u7684\u6bd4\u8f83\u6c34\uff0c\u8bf7\u4e0d\u8981\u6284\u5783\u573e\u4ee3\u7801 \u9664\u4e86\u7b2c\u4e00\u4e2a\u4ee5\u5916\u6bcf\u4e2a\u4f5c\u4e1a\u4ee3\u7801\u91cf\u5728500\u5de6\u53f3\uff0c\u5927\u4f5c\u4e1a\u53ef\u80fd\u591a\u4e00\u70b9\uff0c\u5b9e\u9a8c\u62a5\u544a\u597d\u597d\u5199\uff0c\u5408\u7406\u6000\u7591\u8001\u5e08\u4f5c\u4e1a\u6253\u5206\u90fd\u770b\u5b9e\u9a8c\u62a5\u544a\u5199\u7684\u8ba4\u4e0d\u8ba4\u771f\uff0c\u53e6\u5916lwm\u73ed\u5bf9DDL\u5361\u7684\u4e0d\u662f\u5f88\u6b7b\uff0c\u51e0\u4e2a\u4f5c\u4e1a\u53ef\u80fd\u53ea\u8981\u671f\u672b\u8003\u8bd5\u7ed3\u675f\u4e4b\u540e\u7684\u4e00\u5929\u4ee5\u5185\u4ea4\u9f50\u5c31\u53ef\u4ee5 \u671f\u672b\u8003\u8bd5 \u548c\u5e73\u65f6\u4f5c\u4e1a\u7684\u7406\u8bba\u9898\u5dee\u4e0d\u591a\uff0c\u6709\u5224\u65ad\u9009\u62e9\u586b\u7a7a\u548c\u7a0b\u5e8f\u586b\u7a7a\uff0c\u4ee5\u53ca\u51fd\u6570\u9898\u3001\u7f16\u7a0b\u9898 \u8003\u8bd5\u53ef\u4ee5\u5e26\u4e00\u672c\u4e66\u8fdb\u53bb\uff0c\u4f46\u6211\u611f\u89c9\u7528\u5904\u4e0d\u662f\u5f88\u5927 \u8003\u8bd5\u5185\u5bb9\u5f88\u591a\u9898\u76ee\u90fd\u662fwk\u73ed\u7684\u5e73\u65f6\u4f5c\u4e1a \u4e0a\u673a\u8003\u8bd5\uff0c\u524d50\u5206\u949f\u8003\u7406\u8bba\u9898\uff0c\u540e\u9762\u8003\u7f16\u7a0b\u9898\uff0c\u8003\u7f16\u7a0b\u9898\u7684\u65f6\u5019\u53ef\u4ee5\u7528vscode\uff0c\u7389\u6cc9\u673a\u623f\u7535\u8111\u4f3c\u4e4e\u6ca1\u6709IDEA\u548cEclipse \u4eca\u5e74\u671f\u672b\u8003\u8bd5\u67092\u4e2a\u51fd\u6570\u98981\u4e2a\u7f16\u7a0b\u9898\uff0c\u4e0d\u8fc7\u597d\u50cf\u6bd4\u8f83\u7b80\u5355\uff0c\u8003\u573a\u91cc\u534a\u4e2a\u5c0f\u65f6\u8d70\u4e86\u4e00\u5927\u7247 \u4e09\u4e2a\u9898\u76ee\u5206\u522b\u662f\uff1a \u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u6709\u6784\u9020\u51fd\u6570\uff0c\u91cd\u8f7d\u4e4b\u7c7b\u7684\u4e1c\u897f \u591a\u7ebf\u7a0b\u7684\u4f7f\u7528(\u5176\u5b9e\u5c31\u662fsynchronized\u5173\u952e\u5b57\u7684\u4f7f\u7528) StringBuilder\u7684\u4f7f\u7528","title":"Index"},{"location":"Java%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/index.html#java","text":"\u6211\u662flwm\u8001\u5e08\u73ed\u7ea7\u7684\uff0c\u7ed9\u5206\u6bd4\u8f83\u597d \u5e73\u65f6\u4f5c\u4e1a70%+\u8003\u8bd530%\uff0clz\u662flwm\u8001\u5e08\u73ed\u7ea7\u7684\uff0c\u8001\u5e08\u7ed9\u5206\u5f88\u597d\uff08wk\u73ed\u542c\u8bf4\u7ed9\u5206\u4e5f\u597d\uff0clxq\u73ed\u672a\u77e5\uff09\uff0c\u5e73\u65f6\u4f5c\u4e1a\u4e3b\u8981\u662f5\u4e2a\u7f16\u7a0b\u4f5c\u4e1a+pta\u7684\u4e24\u6b21\u7ec3\u4e60\u9898\uff08\u9898\u76ee\u5f88\u591a\uff0c\u6709\u4e00\u5f20\u8bd5\u5377\u7684\u91cf\uff0c\u9650\u65f6\u51e0\u4e2a\u5c0f\u65f6\u5b8c\u6210\uff09 \u7f16\u7a0b\u4f5c\u4e1a \u4e94\u4e2a\u7f16\u7a0b\u4f5c\u4e1a\u5206\u522b\u662f\uff1a hello world \u4e00\u4e2a\u706b\u67f4\u68d2\u5c0f\u6e38\u620f\uff08\u4e0d\u9700\u8981GUI\uff09 String\u7c7b\u7684\u6e90\u7801\u9605\u8bfb\u5206\u6790+\u81ea\u5df1\u5199\u4e00\u4e2a\u77e9\u9635\u7c7b\u548c\u5411\u91cf\u7c7b \u7f51\u7edc\u722c\u866b+\u7b80\u6613\u641c\u7d22\u5f15\u64ce \u5927\u4f5c\u4e1a\uff1aSwing+Socket\u7f16\u7a0b+\u591a\u7ebf\u7a0b+JDBC\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u4e1c\u897f \u53ef\u4ee5\u53c2\u8003https://github.com/Zhang-Each/Collection-of-schoolwork-code\u4f46\u662f\u6211\u5199\u7684\u6bd4\u8f83\u6c34\uff0c\u8bf7\u4e0d\u8981\u6284\u5783\u573e\u4ee3\u7801 \u9664\u4e86\u7b2c\u4e00\u4e2a\u4ee5\u5916\u6bcf\u4e2a\u4f5c\u4e1a\u4ee3\u7801\u91cf\u5728500\u5de6\u53f3\uff0c\u5927\u4f5c\u4e1a\u53ef\u80fd\u591a\u4e00\u70b9\uff0c\u5b9e\u9a8c\u62a5\u544a\u597d\u597d\u5199\uff0c\u5408\u7406\u6000\u7591\u8001\u5e08\u4f5c\u4e1a\u6253\u5206\u90fd\u770b\u5b9e\u9a8c\u62a5\u544a\u5199\u7684\u8ba4\u4e0d\u8ba4\u771f\uff0c\u53e6\u5916lwm\u73ed\u5bf9DDL\u5361\u7684\u4e0d\u662f\u5f88\u6b7b\uff0c\u51e0\u4e2a\u4f5c\u4e1a\u53ef\u80fd\u53ea\u8981\u671f\u672b\u8003\u8bd5\u7ed3\u675f\u4e4b\u540e\u7684\u4e00\u5929\u4ee5\u5185\u4ea4\u9f50\u5c31\u53ef\u4ee5 \u671f\u672b\u8003\u8bd5 \u548c\u5e73\u65f6\u4f5c\u4e1a\u7684\u7406\u8bba\u9898\u5dee\u4e0d\u591a\uff0c\u6709\u5224\u65ad\u9009\u62e9\u586b\u7a7a\u548c\u7a0b\u5e8f\u586b\u7a7a\uff0c\u4ee5\u53ca\u51fd\u6570\u9898\u3001\u7f16\u7a0b\u9898 \u8003\u8bd5\u53ef\u4ee5\u5e26\u4e00\u672c\u4e66\u8fdb\u53bb\uff0c\u4f46\u6211\u611f\u89c9\u7528\u5904\u4e0d\u662f\u5f88\u5927 \u8003\u8bd5\u5185\u5bb9\u5f88\u591a\u9898\u76ee\u90fd\u662fwk\u73ed\u7684\u5e73\u65f6\u4f5c\u4e1a \u4e0a\u673a\u8003\u8bd5\uff0c\u524d50\u5206\u949f\u8003\u7406\u8bba\u9898\uff0c\u540e\u9762\u8003\u7f16\u7a0b\u9898\uff0c\u8003\u7f16\u7a0b\u9898\u7684\u65f6\u5019\u53ef\u4ee5\u7528vscode\uff0c\u7389\u6cc9\u673a\u623f\u7535\u8111\u4f3c\u4e4e\u6ca1\u6709IDEA\u548cEclipse \u4eca\u5e74\u671f\u672b\u8003\u8bd5\u67092\u4e2a\u51fd\u6570\u98981\u4e2a\u7f16\u7a0b\u9898\uff0c\u4e0d\u8fc7\u597d\u50cf\u6bd4\u8f83\u7b80\u5355\uff0c\u8003\u573a\u91cc\u534a\u4e2a\u5c0f\u65f6\u8d70\u4e86\u4e00\u5927\u7247 \u4e09\u4e2a\u9898\u76ee\u5206\u522b\u662f\uff1a \u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u6709\u6784\u9020\u51fd\u6570\uff0c\u91cd\u8f7d\u4e4b\u7c7b\u7684\u4e1c\u897f \u591a\u7ebf\u7a0b\u7684\u4f7f\u7528(\u5176\u5b9e\u5c31\u662fsynchronized\u5173\u952e\u5b57\u7684\u4f7f\u7528) StringBuilder\u7684\u4f7f\u7528","title":"Java\u5e94\u7528\u6280\u672f"},{"location":"Linux%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/index.html","text":"Linux\u5e94\u7528\u6280\u672f \u5b63\u6c5f\u6c11\u8001\u5e08\uff0c2019-2020\u6625\u590f\u5b66\u671f \u8fd9\u95e8\u8bfe\u4e3b\u8981\u8bb2Linux\u7cfb\u7edf\u7684\u5404\u79cd\u547d\u4ee4\u548c\u4e00\u4e9b\u57fa\u672c\u7684\u6587\u4ef6\u3001\u8fdb\u7a0b\u3001shell\u7b49\u77e5\u8bc6\uff0c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u4e0d\u719f\u6089Linux\u7cfb\u7edf\u7684\u4eba\u6765\u8bf4\u8fd8\u662f\u633a\u4e0d\u9519\u7684 \u770bPPT\u57fa\u672c\u53ef\u4ee5\u81ea\u5b66\uff0c\u6211\u7684\u7b14\u8bb0\u5c31\u662f\u5728PPT\u7684\u57fa\u7840\u4e0a\u6574\u7406\u51fa\u6765\u7684 \u5e73\u65f6\u4f5c\u4e1a\u5c31\u4e09\u4e2a\u5b9e\u9a8c\u548c\u51e0\u6b21\u5c0f\u6d4b\uff0c\u5b9e\u9a8c\u5de5\u4f5c\u91cf\u6bd4\u8f83\u5927 \u671f\u672b\u8003\u5e94\u8be5\u662f \u5f00\u5377\u8003\u8bd5 \uff0c\u4f46\u662f\u4e0a\u4e2a\u5b66\u671f\u662f\u7ebf\u4e0a\u7684\u8003\u8bd5\uff0c\u6240\u4ee5\u9898\u76ee\u6709\u70b9\u8ff7 jjm\u8001\u5e08\u7ecf\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u957f\u8005\u5411\u6211\u4eec\u4f20\u6388\u4eba\u751f\u7ecf\u9a8c \u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f \u8fd9\u95e8\u8bfe\u662f\u9700\u8981\u6b63\u6001\u7684\uff0c\u4f46\u662f\u73ed\u4e0a\u8ba1\u9662\u7684\u540c\u5b66\u4e00\u822c\u4f1a\u6bd4\u8f83\u591a \u53ef\u4ee5\u9009\u4e00\u9009\uff0c\u4e3a\u540e\u9762\u7684OS\u505a\u51c6\u5907","title":"Index"},{"location":"Linux%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/index.html#linux","text":"\u5b63\u6c5f\u6c11\u8001\u5e08\uff0c2019-2020\u6625\u590f\u5b66\u671f \u8fd9\u95e8\u8bfe\u4e3b\u8981\u8bb2Linux\u7cfb\u7edf\u7684\u5404\u79cd\u547d\u4ee4\u548c\u4e00\u4e9b\u57fa\u672c\u7684\u6587\u4ef6\u3001\u8fdb\u7a0b\u3001shell\u7b49\u77e5\u8bc6\uff0c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u4e0d\u719f\u6089Linux\u7cfb\u7edf\u7684\u4eba\u6765\u8bf4\u8fd8\u662f\u633a\u4e0d\u9519\u7684 \u770bPPT\u57fa\u672c\u53ef\u4ee5\u81ea\u5b66\uff0c\u6211\u7684\u7b14\u8bb0\u5c31\u662f\u5728PPT\u7684\u57fa\u7840\u4e0a\u6574\u7406\u51fa\u6765\u7684 \u5e73\u65f6\u4f5c\u4e1a\u5c31\u4e09\u4e2a\u5b9e\u9a8c\u548c\u51e0\u6b21\u5c0f\u6d4b\uff0c\u5b9e\u9a8c\u5de5\u4f5c\u91cf\u6bd4\u8f83\u5927 \u671f\u672b\u8003\u5e94\u8be5\u662f \u5f00\u5377\u8003\u8bd5 \uff0c\u4f46\u662f\u4e0a\u4e2a\u5b66\u671f\u662f\u7ebf\u4e0a\u7684\u8003\u8bd5\uff0c\u6240\u4ee5\u9898\u76ee\u6709\u70b9\u8ff7 jjm\u8001\u5e08\u7ecf\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u957f\u8005\u5411\u6211\u4eec\u4f20\u6388\u4eba\u751f\u7ecf\u9a8c \u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f \u8fd9\u95e8\u8bfe\u662f\u9700\u8981\u6b63\u6001\u7684\uff0c\u4f46\u662f\u73ed\u4e0a\u8ba1\u9662\u7684\u540c\u5b66\u4e00\u822c\u4f1a\u6bd4\u8f83\u591a \u53ef\u4ee5\u9009\u4e00\u9009\uff0c\u4e3a\u540e\u9762\u7684OS\u505a\u51c6\u5907","title":"Linux\u5e94\u7528\u6280\u672f"},{"location":"NA%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/index.html","text":"\u6570\u503c\u5206\u6790NA \u8bb8\u5a01\u5a01\u8001\u5e08\uff0c2019-2020\u5b66\u5e74\u79cb\u51ac\u5b66\u671f \u8fd9\u95e8\u8bfe\u8c8c\u4f3c\u6625\u590f\u90fd\u6709\u5f00\u8bfe\uff0c\u5185\u5bb9\u57fa\u672c\u4e00\u6837\uff0c\u8f6f\u5de5\u6309\u9053\u7406\u5e94\u8be5\u662f\u8981\u6625\u590f\u5b66\u671f\u4fee\u7684\uff0c\u4f46\u662f\u6625\u590f\u5b66\u671f \u592a\u5fd9\u4e86\uff0c\u975e\u5e38\u4e0d\u63a8\u8350\u4fee\u8fd9\u95e8\u975e\u5e38\u786c\u7684\u8bfe \u8fd9\u95e8\u8bfe\u5927\u6982\u6709\u8fd9\u6837\u4e00\u4e9b\u5185\u5bb9 \u5e73\u65f6\u7684\u5c0f\u4f5c\u4e1a\uff0c\u6bcf\u5468\u90fd\u6709\u82e5\u5e72\u4e2a\u7ec3\u4e60\u9898\u8981\u505a \u4e00\u6b21\u5c0f\u7ec4\u5c55\u793a\uff0c\u6709\u786e\u5b9a\u7684\u4e3b\u9898\uff0c\u9700\u8981\u62a2 PTA\u4e0a8\u4e2a\u51fd\u6570\u9898\uff0c\u4e3b\u8981\u662f\u5b9e\u73b0PPT\u4e0a\u7684\u7b97\u6cd5\uff0c\u8fd9\u662f\u8fd9\u95e8\u8bfe\u6700\u786c\u6838\u7684\u90e8\u5206\uff0c\u8fd9\u51e0\u4e2a\u9898\u76ee\u867d\u7136\u4ee3\u7801\u91cf\u4e0d\u5927\uff0c\u4f46\u662f\u975e\u5e38\u641e\u4eba\u5fc3\u6001 \u4ee3\u7801\u4f1a\u67e5\u91cd\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u8981\u6284\u4ee3\u7801\uff0c\u81ea\u5df1\u5199 \u65e9\u70b9\u5f00\u59cb\u505a\uff0c\u5426\u5219\u671f\u672b\u4f1a\u6765\u4e0d\u53ca \u82e5\u5e72\u6b21\u70b9\u540d\u548c\u5c0f\u6d4b\u4ee5\u53ca\u8bfe\u5802\u53d1\u8a00 \u671f\u672b\u8003\u8bd5 \u5f00\u5377\u8003\u8bd5\uff0c\u96be\u5ea6\u4f4e\u4e8e\u5e73\u65f6\u4f5c\u4e1a \u53ef\u4ee5\u6253\u5370\u8fd9\u91cc\u7684PPT\u53c2\u52a0\u8003\u8bd5\uff0c\u6211\u4e4b\u524d\u505a\u4e86\u624b\u5199\u7b14\u8bb0\uff0c\u4f46\u611f\u89c9\u7528\u5904\u4e0d\u5927\u5c31\u4e0d\u653e\u4e0a\u6765\u4e86 ~~\u6ce8\u91cd\u8003\u573a\u73b0\u5b66\u73b0\u5356~~ \u63a8\u8350\u9009XWW\u8001\u5e08\uff0c\u7ed9\u5206\u975e\u5e38\u597d\uff01 \u65b0\u589e\u4e86\u624b\u5199\u7684\u7b14\u8bb0\uff0c\u4e3b\u8981\u662f\u5f53\u65f6\u5b66\u4e60\u5b9a\u7406\u7684\u8fc7\u7a0b\u4e2d\u624b\u52a8\u63a8\u5bfc/\u6284\u5199\u4e86\u5176\u4e2d\u4e00\u4e9b\u516c\u5f0f\u52a0\u6df1\u7406\u89e3","title":"Index"},{"location":"NA%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/index.html#na","text":"\u8bb8\u5a01\u5a01\u8001\u5e08\uff0c2019-2020\u5b66\u5e74\u79cb\u51ac\u5b66\u671f \u8fd9\u95e8\u8bfe\u8c8c\u4f3c\u6625\u590f\u90fd\u6709\u5f00\u8bfe\uff0c\u5185\u5bb9\u57fa\u672c\u4e00\u6837\uff0c\u8f6f\u5de5\u6309\u9053\u7406\u5e94\u8be5\u662f\u8981\u6625\u590f\u5b66\u671f\u4fee\u7684\uff0c\u4f46\u662f\u6625\u590f\u5b66\u671f \u592a\u5fd9\u4e86\uff0c\u975e\u5e38\u4e0d\u63a8\u8350\u4fee\u8fd9\u95e8\u975e\u5e38\u786c\u7684\u8bfe \u8fd9\u95e8\u8bfe\u5927\u6982\u6709\u8fd9\u6837\u4e00\u4e9b\u5185\u5bb9 \u5e73\u65f6\u7684\u5c0f\u4f5c\u4e1a\uff0c\u6bcf\u5468\u90fd\u6709\u82e5\u5e72\u4e2a\u7ec3\u4e60\u9898\u8981\u505a \u4e00\u6b21\u5c0f\u7ec4\u5c55\u793a\uff0c\u6709\u786e\u5b9a\u7684\u4e3b\u9898\uff0c\u9700\u8981\u62a2 PTA\u4e0a8\u4e2a\u51fd\u6570\u9898\uff0c\u4e3b\u8981\u662f\u5b9e\u73b0PPT\u4e0a\u7684\u7b97\u6cd5\uff0c\u8fd9\u662f\u8fd9\u95e8\u8bfe\u6700\u786c\u6838\u7684\u90e8\u5206\uff0c\u8fd9\u51e0\u4e2a\u9898\u76ee\u867d\u7136\u4ee3\u7801\u91cf\u4e0d\u5927\uff0c\u4f46\u662f\u975e\u5e38\u641e\u4eba\u5fc3\u6001 \u4ee3\u7801\u4f1a\u67e5\u91cd\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u8981\u6284\u4ee3\u7801\uff0c\u81ea\u5df1\u5199 \u65e9\u70b9\u5f00\u59cb\u505a\uff0c\u5426\u5219\u671f\u672b\u4f1a\u6765\u4e0d\u53ca \u82e5\u5e72\u6b21\u70b9\u540d\u548c\u5c0f\u6d4b\u4ee5\u53ca\u8bfe\u5802\u53d1\u8a00 \u671f\u672b\u8003\u8bd5 \u5f00\u5377\u8003\u8bd5\uff0c\u96be\u5ea6\u4f4e\u4e8e\u5e73\u65f6\u4f5c\u4e1a \u53ef\u4ee5\u6253\u5370\u8fd9\u91cc\u7684PPT\u53c2\u52a0\u8003\u8bd5\uff0c\u6211\u4e4b\u524d\u505a\u4e86\u624b\u5199\u7b14\u8bb0\uff0c\u4f46\u611f\u89c9\u7528\u5904\u4e0d\u5927\u5c31\u4e0d\u653e\u4e0a\u6765\u4e86 ~~\u6ce8\u91cd\u8003\u573a\u73b0\u5b66\u73b0\u5356~~ \u63a8\u8350\u9009XWW\u8001\u5e08\uff0c\u7ed9\u5206\u975e\u5e38\u597d\uff01 \u65b0\u589e\u4e86\u624b\u5199\u7684\u7b14\u8bb0\uff0c\u4e3b\u8981\u662f\u5f53\u65f6\u5b66\u4e60\u5b9a\u7406\u7684\u8fc7\u7a0b\u4e2d\u624b\u52a8\u63a8\u5bfc/\u6284\u5199\u4e86\u5176\u4e2d\u4e00\u4e9b\u516c\u5f0f\u52a0\u6df1\u7406\u89e3","title":"\u6570\u503c\u5206\u6790NA"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/index.html","text":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \u9648\u7fd4\u8001\u5e08\uff0c2019-2020\u6625\u590f\u5b66\u671f \u8fd9\u95e8\u8bfe\u76f8\u6bd4\u4e8e\u5176\u4ed6\u51e0\u95e8\u56db\u5b66\u5206\u7684\u8bfe\u800c\u8a00\u6bd4\u8f83\u53cb\u5584\uff0c\u4f46\u8003\u8bd5\u8fd8\u662f\u6bd4\u8f83\u96be\u7684\uff0c\u53ef\u4ee5\u53bb\u6587\u5370\u5e97\u4e70\u5386\u5e74\u5377\u5237\u4e00\u5237\uff0c\u5982\u679c\u80fd\u5237\u5b8c\u4e00\u822c\u8003\u8bd5\u5c31\u6ca1\u5565\u95ee\u9898\u4e86\uff0c\u7279\u522b\u8981\u6ce8\u610fC++\u7684\u4e00\u4e9b\u7ec6\u8282 \u6211\u8fd9\u91cc\u641c\u96c6\u4e8698\u4e0a\u7684\u4e00\u7cfb\u5217\u5176\u4ed6\u4eba\u53d1\u7684\u7ebf\u4e0a\u8003\u8bd5\u7684\u9898\u76ee\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b \u4eca\u5e74\u56e0\u4e3a\u662f\u56de\u5b66\u6821\u624d\u8003\u8bd5\uff0c\u6240\u4ee5\u4e0a\u673a\u8003\u6539\u6210\u4e86\u7b14\u8bd5\uff0c\u4ee5\u5f80\u6625\u590f\u5b66\u671f\u90fd\u662f\u4e0a\u673a\u8003\u8bd5\u7684\uff0c\u79cb\u51ac\u5b66\u671f\u4e00\u822c\u662f\u7eb8\u8d28\u8bd5\u5377\u8003\u8bd5 \u4ee5\u4e0b\u662f\u6211\u4e86\u89e3\u5230\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u4f9b\u5927\u5bb6\u9009\u8bfe\u7684\u65f6\u5019\u53c2\u8003 \u9648\u7fd4\u8001\u5e08\u73ed\u7ea7\uff1a\u4f5c\u4e1a\u662f6\u6b21\u5f00\u653e\u5f0f\u7f16\u7a0b\u9898+1\u6b21\u5927\u4f5c\u4e1a\uff0c\u5927\u4f5c\u4e1a\u7684\u4e3b\u9898\u662f\u4e8c\u8fdb\u5236/XML\u5e8f\u5217\u5316\u7684\u5b9e\u73b0 \u6211\u4e0a\u7684\u5c31\u662f\u8fd9\u4e2a\u73ed\uff0c\u9648\u7fd4\u8001\u5e08\u5bf9C++\u7684\u8bed\u6cd5\u548c\u8bbe\u8ba1\u6a21\u5f0f\u7406\u89e3\u975e\u5e38\u6df1\u523b\uff0c\u4e0a\u8bfe\u4f1a\u7528Vim\u5199\u4ee3\u7801\u6f14\u793a \u8bb8\u5a01\u5a01\u8001\u5e08\u73ed\u7ea7\uff1a\u5c0f\u4f5c\u4e1a\u548ccx\u8001\u5e08\u73ed\u4e00\u6837\uff0c\u5927\u4f5c\u4e1a\u662f\u5b9e\u73b0\u4e00\u4e2aMemory allocator\u548c\u5185\u5b58\u6c60\uff0c\u4ee3\u7801\u91cf\u4e0d\u5927\u4f46\u662f\u6bd4\u8f83\u96be\u7406\u89e3 \u5176\u4ed6\u8001\u5e08\u73ed\u7ea7\uff1a\u5927\u4f5c\u4e1a\u662f\u4e00\u4e2a\u57fa\u4e8eQT\u56fe\u5f62\u5e93\u7684\u6e38\u620f\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u4e2a\u4eba\u611f\u89c9\u5b66QT\u7684\u610f\u4e49\u5e76\u4e0d\u5927\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5927\u4f5c\u4e1a\u660e\u663e\u8981\u6bd4\u4e0a\u9762\u8fd9\u4e24\u4e2a\u590d\u6742\uff0c\u800c\u4e14\u9700\u8981\u591a\u4eba\u7ec4\u961f\uff0c\u5f88\u5bb9\u6613\u78b0\u4e0a\u6478\u9c7c\u961f\u53cb \u4f5c\u4e1a\u53ef\u4ee5\u53c2\u8003https://github.com/Zhang-Each/Collection-of-schoolwork-code \u4f46\u662f\u6211\u5199\u7684\u6bd4\u8f83\u5783\u573e","title":"Index"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/index.html#_1","text":"\u9648\u7fd4\u8001\u5e08\uff0c2019-2020\u6625\u590f\u5b66\u671f \u8fd9\u95e8\u8bfe\u76f8\u6bd4\u4e8e\u5176\u4ed6\u51e0\u95e8\u56db\u5b66\u5206\u7684\u8bfe\u800c\u8a00\u6bd4\u8f83\u53cb\u5584\uff0c\u4f46\u8003\u8bd5\u8fd8\u662f\u6bd4\u8f83\u96be\u7684\uff0c\u53ef\u4ee5\u53bb\u6587\u5370\u5e97\u4e70\u5386\u5e74\u5377\u5237\u4e00\u5237\uff0c\u5982\u679c\u80fd\u5237\u5b8c\u4e00\u822c\u8003\u8bd5\u5c31\u6ca1\u5565\u95ee\u9898\u4e86\uff0c\u7279\u522b\u8981\u6ce8\u610fC++\u7684\u4e00\u4e9b\u7ec6\u8282 \u6211\u8fd9\u91cc\u641c\u96c6\u4e8698\u4e0a\u7684\u4e00\u7cfb\u5217\u5176\u4ed6\u4eba\u53d1\u7684\u7ebf\u4e0a\u8003\u8bd5\u7684\u9898\u76ee\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b \u4eca\u5e74\u56e0\u4e3a\u662f\u56de\u5b66\u6821\u624d\u8003\u8bd5\uff0c\u6240\u4ee5\u4e0a\u673a\u8003\u6539\u6210\u4e86\u7b14\u8bd5\uff0c\u4ee5\u5f80\u6625\u590f\u5b66\u671f\u90fd\u662f\u4e0a\u673a\u8003\u8bd5\u7684\uff0c\u79cb\u51ac\u5b66\u671f\u4e00\u822c\u662f\u7eb8\u8d28\u8bd5\u5377\u8003\u8bd5 \u4ee5\u4e0b\u662f\u6211\u4e86\u89e3\u5230\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u4f9b\u5927\u5bb6\u9009\u8bfe\u7684\u65f6\u5019\u53c2\u8003 \u9648\u7fd4\u8001\u5e08\u73ed\u7ea7\uff1a\u4f5c\u4e1a\u662f6\u6b21\u5f00\u653e\u5f0f\u7f16\u7a0b\u9898+1\u6b21\u5927\u4f5c\u4e1a\uff0c\u5927\u4f5c\u4e1a\u7684\u4e3b\u9898\u662f\u4e8c\u8fdb\u5236/XML\u5e8f\u5217\u5316\u7684\u5b9e\u73b0 \u6211\u4e0a\u7684\u5c31\u662f\u8fd9\u4e2a\u73ed\uff0c\u9648\u7fd4\u8001\u5e08\u5bf9C++\u7684\u8bed\u6cd5\u548c\u8bbe\u8ba1\u6a21\u5f0f\u7406\u89e3\u975e\u5e38\u6df1\u523b\uff0c\u4e0a\u8bfe\u4f1a\u7528Vim\u5199\u4ee3\u7801\u6f14\u793a \u8bb8\u5a01\u5a01\u8001\u5e08\u73ed\u7ea7\uff1a\u5c0f\u4f5c\u4e1a\u548ccx\u8001\u5e08\u73ed\u4e00\u6837\uff0c\u5927\u4f5c\u4e1a\u662f\u5b9e\u73b0\u4e00\u4e2aMemory allocator\u548c\u5185\u5b58\u6c60\uff0c\u4ee3\u7801\u91cf\u4e0d\u5927\u4f46\u662f\u6bd4\u8f83\u96be\u7406\u89e3 \u5176\u4ed6\u8001\u5e08\u73ed\u7ea7\uff1a\u5927\u4f5c\u4e1a\u662f\u4e00\u4e2a\u57fa\u4e8eQT\u56fe\u5f62\u5e93\u7684\u6e38\u620f\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u4e2a\u4eba\u611f\u89c9\u5b66QT\u7684\u610f\u4e49\u5e76\u4e0d\u5927\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5927\u4f5c\u4e1a\u660e\u663e\u8981\u6bd4\u4e0a\u9762\u8fd9\u4e24\u4e2a\u590d\u6742\uff0c\u800c\u4e14\u9700\u8981\u591a\u4eba\u7ec4\u961f\uff0c\u5f88\u5bb9\u6613\u78b0\u4e0a\u6478\u9c7c\u961f\u53cb \u4f5c\u4e1a\u53ef\u4ee5\u53c2\u8003https://github.com/Zhang-Each/Collection-of-schoolwork-code \u4f46\u662f\u6211\u5199\u7684\u6bd4\u8f83\u5783\u573e","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html","text":"OOP-Review RandomStar OOP-Review RandomStar 1. C++\u7684\u65b0\u7279\u6027 1.0 \u8f93\u5165\u8f93\u51fa\u6d41 1.1 \u53d8\u91cf\u548c\u52a8\u6001\u5185\u5b58\u5206\u914d 1.2 \u5f15\u7528 Reference 1.3 const\u7c7b\u578b 2. \u7c7b class 2.0 \u7c7b\u7684\u57fa\u672c\u6982\u5ff5 2.1 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570 2.2 static\u7c7b\u578b include 2.3 Inline Function\u5185\u8054\u51fd\u6570 2.4 \u7ee7\u627fInheritance 2.5 \u53cb\u5143 friend 2.6 \u591a\u6001\u548c\u865a\u51fd\u6570 include 2.7 \u865a\u51fd\u6570\u4f7f\u7528\u603b\u7ed3 2.8 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 2.8.1 static_cast 2.8.2 const_cast 2.8.3 reinterpret_cast 2.8.4 dynamic_cast 3. \u91cd\u8f7d 3.0 \u51fd\u6570\u7684\u91cd\u8f7d include 3.1 \u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d 3.2 \u8f93\u5165\u8f93\u51fa\u6d41\u7684\u91cd\u8f7d 4. \u6a21\u677f 4.1 namespace \u547d\u540d\u7a7a\u95f4 4.2 template\u7f16\u7a0b \u51fd\u6570\u91cd\u8f7d\u65f6\u5019\u7684\u4f18\u5148\u7ea7 4.3 STL\u548c\u8fed\u4ee3\u5668 5. Exceptions \u5f02\u5e38\u5904\u7406 6. Smart Pointer \u667a\u80fd\u6307\u9488 include include 1. C++\u7684\u65b0\u7279\u6027 1.0 \u8f93\u5165\u8f93\u51fa\u6d41 C++\u53ef\u4ee5\u4f7f\u7528\u8f93\u5165\u8f93\u51fa\u6d41 (cin, cout) \u8fdb\u884c\u8f93\u51fa\uff0c\u6bd4\u5982 cout<<\"Hello World\"; \u9700\u8981\u5305\u542b \u5934\u6587\u4ef6 #include<iostream> \u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa, \u4f7f\u7528ofstream\u548cifstream #include<iostream> #include<fstream> #include<istream> #include<string> using namespace std; int main() { string str=\"Hello World!\"; ofstream fout(\"out.txt\"); fout<<str<<endl; ifstream fin(\"out.txt\"); string str1,str2; fin>>str1>>str2; return 0; } 1.1 \u53d8\u91cf\u548c\u52a8\u6001\u5185\u5b58\u5206\u914d C++\u4e2d\u7684\u53d8\u91cf\u7c7b\u578b global variable \u5168\u5c40\u53d8\u91cf\uff0c\u5b58\u50a8\u5728 \u5168\u5c40\u53d8\u91cf\u533a \u53ef\u4ee5\u5728\u4e0d\u540c\u7684cpp\u6587\u4ef6\u4e4b\u95f4\u5171\u4eab\uff0c\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57 extern \u6765\u4f7f\u7528\u522b\u7684cpp\u6587\u4ef6\u4e2d\u7684\u5168\u5c40\u53d8\u91cf static global variable \u9759\u6001\u5168\u5c40\u53d8\u91cf \uff0c\u4e0d\u80fd\u5728cpp\u6587\u4ef6\u4e4b\u95f4\u5171\u4eab local variable \u5b58\u50a8\u5728 \u6808 \u533a\u4e0a static local variable \u9759\u6001\u5c40\u90e8\u53d8\u91cf \u5b58\u50a8\u5728\u5168\u5c40\u53d8\u91cf\u533a \u5728\u521d\u6b21\u4f7f\u7528\u7684\u65f6\u5019\u521d\u59cb\u5316\uff0ckeeps its value between visit to the function allocated variable \u52a8\u6001\u5206\u914d\u7684\u53d8\u91cf \u5b58\u50a8\u5728\u5185\u5b58\u7684\u5806\u7ed3\u6784\u4e2d c++ string s=\"hello\"; string *ps=&s; (*ps).length(); ps->length(); C++\u52a8\u6001\u5185\u5b58\u5206\u914d new\u7528\u4e8e\u52a8\u6001\u5206\u914d\u5185\u5b58\u7ed9\u53d8\u91cf\uff0c\u5982 new int \uff0c new double[1000] \u4e0emalloc\u7684\u533a\u522b\uff1a malloc\u4e0d\u6267\u884c\u7c7b\u7684\u6784\u9020\u51fd\u6570 \uff0c\u800cnew\u51fa\u65b0\u7684\u5bf9\u8c61\u7684\u65f6\u5019\u4f1a\u6267\u884c\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570 new Class_Name[x] \u4f1a\u6267\u884cx\u6b21Class_Name\u7684\u6784\u9020\u51fd\u6570 \u5185\u5b58\u6cc4\u6f0f Memory Leak cpp int *p = new int; *p = 123; p = new int; \u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u4e00\u5f00\u59cb\u4e3a\u6307\u9488p\u5206\u914d\u4e86\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5e76\u8d4b\u503c\u4e86123\uff0c\u4f46\u662f\u7b2c\u4e09\u884c\u4ee3\u7801\u53c8\u4e3ap\u8d4b\u503c\u4e86\u4e00\u6bb5\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u539f\u6765\u7684\u5185\u5b58\u7a7a\u95f4\u5b58\u50a8\u4e86123\uff0c\u4f46\u662f\u8fd9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5df2\u7ecf\u6ca1\u6709\u6307\u9488\u6307\u5411\uff0c\u56e0\u6b64 \u4e0d\u80fd\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u80fd\u5220\u9664 \uff0c\u9020\u6210\u4e86\u5185\u5b58\u6cc4\u6f0f delete\u7528\u4e8e\u5220\u9664\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58 \u7528\u6cd5 delete p; delete[] p; \u548cnew\u7c7b\u4f3c\uff0cdelete\u4f1a\u6267\u884c\u6240\u5220\u9664\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u80fddelete\u6ca1\u6709\u5b9a\u4e49\u8fc7\u7684\u53d8\u91cf\uff0c\u540c\u4e00\u4e2a\u53d8\u91cf\u4e0d\u80fddelete\u4e24\u6b21 \u4e24\u4e2a\u6307\u9488p1,p2\u6307\u5411\u540c\u4e00\u4e2a\u6570\u636e\uff0c\u5982\u679cp1\u88abdelete\u4e86\uff0cp2\u4e5f\u4e0d\u80fd\u8bbf\u95ee\u539f\u672cp1\u6307\u5411\u7684\u53d8\u91cf\u7684\u503c\uff0c\u56e0\u4e3adelete\u5220\u9664\u7684\u662f\u5185\u5b58\u91cc\u7684\u6570\u636e cpp int *p1 = new int; int *p2 = new p1; *p2 = 1; delete p1; cout<<*p2<<endl; // error!!! \u6307\u5411\u540c\u4e00\u4e2a\u6570\u636e\u7684\u4e24\u4e2a\u6307\u9488\u5b9e\u9645\u4e0a\u53ea\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u540d\u800c\u5df2\uff0cdelete\u5220\u9664\u7684\u4e0d\u662f\u53d8\u91cf\u540d\u800c\u662f\u6570\u636e 1.2 \u5f15\u7528 Reference a new type in C++\uff0c \u76f8\u5f53\u4e8e\u7ed9\u53d8\u91cf\u53d6\u4e86\u4e00\u4e2a\u522b\u540d\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e3a type &refname = name; \u5f15\u7528\u7684\u5bf9\u8c61 \u4e0d\u80fd \u662f\u8868\u8fbe\u5f0f \u5f15\u7528\u548c\u6307\u9488\u7684\u533a\u522b \u4e0d\u80fd\u5b9a\u4e49 \u7a7a\u5f15\u7528 \uff0c\u5f15\u7528\u5fc5\u987b\u8fde\u63a5\u5230\u4e00\u5757\u5408\u6cd5\u7684\u5185\u5b58 \u4e00\u65e6\u5f15\u7528\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61 \u5c31\u4e0d\u80fd\u66f4\u6539 \u5f15\u7528\u5728\u521b\u5efa\u7684\u65f6\u5019\u5fc5\u987b\u8981 \u521d\u59cb\u5316 int *f(int *x) { (*x)++; return x; } int &g(int &x) { x++; return x; } int x; int &h() { return x; } int main() { int a=0; f(&a); g(a); h()=16; //\u8fd9\u91cc\u5168\u5c40\u53d8\u91cfx\u88ab\u8d4b\u503c\u4e3a16 } 1.3 const\u7c7b\u578b \u7528\u4e8e\u5b9a\u4e49\u5e38\u91cf\u7c7b\u578b\uff0c\u5982 const int x=12345; , const\u7c7b\u578b\u7684\u53d8\u91cf\u5728\u521d\u59cb\u5316\u4e4b\u540e\u5c31\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff0cconst\u578b\u53d8\u91cf\u4e0d\u80fd\u5728\u8fde\u63a5\u5355\u5143\u5916\u4f7f\u7528 Run-time constants \u8fd0\u884c\u65f6\u5e38\u91cf \u6570\u7ec4\u7684\u5b9a\u4e49\u65f6\u7684\u957f\u5ea6\u503c\u5fc5\u987b\u5728 \u7f16\u8bd1\u671f \u5c31\u5df2\u77e5\uff0c\u6240\u4ee5\u5b8f\u5b9a\u4e49\u4e2d\u7684\u5e38\u6570\u53ef\u4ee5\u4f5c\u4e3a\u6570\u7ec4\u957f\u5ea6\uff0c\u800c int n; int a[n] \u8fd9\u6837\u7684\u8bed\u6cd5\u5c31\u662f\u9519\u8bef\u7684\uff0c\u4e0d\u8fc7\u73b0\u5728\u4f3c\u4e4e\u6709\u4e86\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u5728Dev-cpp\u4e2d\u8fd9\u6837\u5199\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1 ```c++ const int size=100; int a[size];//OK int x; cin>>x; const int size=x; int a[size];//Error!!! ``` const\u548c\u6307\u9488pointer \u5e38\u91cf\u6307\u9488\uff1a char * const p = \"abc\"; \u4e0d\u80fd\u8d4b\u4e88\u8fd9\u4e2a\u6307\u9488\u65b0\u7684\u5730\u5740 \uff0c\u76f8\u5f53\u4e8e\u5730\u5740\u662fconst\u7c7b\u578b\uff0c\u4f46\u662fp\u6307\u5411\u7684\u503c\u53ef\u4ee5\u6539\u53d8 const char* p = \"abc\"; \u8fd9\u79cd\u60c5\u51b5\u4e0bp\u6307\u5411\u7684\u662f\u4e00\u4e2aconst char\u7c7b\u578b\u7684\u503c\uff0c\u56e0\u6b64 \u6307\u5411\u7684\u503c\u4e0d\u80fd\u6539\u53d8 \uff0c\u800c\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u53ef\u4ee5\u6539\u53d8 //\u7b2c\u4e00\u79cd\u60c5\u51b5\u662fq\u662f\u4e00\u4e2aconst\u6307\u9488\uff0c\u4f46\u662fq\u6307\u5411\u7684\u4e1c\u897f\u53ef\u4ee5\u53d8 char * const q =\"abc\"; *q='c'; // OK q++; // Error! //\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c(*q)\u662f\u4e00\u4e2aconst\u7684\u503c\uff0c\u6b64\u65f6q\u6240\u6307\u5411\u7684\u503c\u4e0d\u80fd\u53d8 const char *p = \"abc\"; *p='c';//error! //\u533a\u522b\u8fd9\u4e09\u79cd\u4e1c\u897f string p1=\"zyc\"; const string *p=&p1; string const* p=&p1; string *const p=&p1; \u4e0d\u80fd\u5c06const\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\u7ed9\u5bf9\u5e94\u7684\u6307\u9488\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u5e26\u6765const\u53d8\u91cf\u7684\u6539\u53d8\uff0c\u8fd9\u662fconst\u7c7b\u578b\u7684\u53d8\u91cf\u4e0d\u5141\u8bb8\u7684 \u53ef\u4ee5\u628a\u975econst\u7c7b\u578b\u7684\u503c\u8d4b\u7ed9\u5bf9\u5e94\u7684const\u578b\u53d8\u91cf\uff0c\u51fd\u6570\u4e2d\u53ef\u4ee5\u5c06\u53c2\u6570\u8bbe\u7f6e\u4e3aconst\u7c7b\u578b\u8868\u660e\u8fd9\u4e9b\u53c2\u6570\u5728\u51fd\u6570\u4e2d\u4e0d\u80fd\u88ab\u4fee\u6539\u539f\u672c\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u5c06\u8fd4\u56de\u503c\u7c7b\u578b\u8bbe\u7f6e\u4e3aconst\u8868\u793a\u8fd4\u56de\u503c\u4e0d\u80fd\u88ab\u4fee\u6539 #include<iostream> using namespace std; struct student{ int id; }; void foo(const student *ps) { //*ps could not be changed in the function cout<<ps->id<<endl; cout<<(*ps).id<<endl; } void bar(const student &s) { //s could not be changed in the function cout<<s.id<<endl; } int main() { student s; s.id=2; foo(&s); return 0; } char * s=\"Hello World!\"; \u5b9e\u8d28\u4e0a\u662f const char * \u7c7b\u578b\uff0c\u4e0d\u8981\u53bb\u4fee\u6539s\u4e2d\u7684\u5185\u5bb9\uff0c\u8fd9\u662f\u4e00\u79cd \u672a\u5b9a\u4e49\u7684\u884c\u4e3a (undefined behavior)\uff0c\u5e94\u8be5\u5199\u6210 char s[]=\"Hello World!\"; #include<iostream> using namespace std; int main() { const char *s1=\"Hello World\"; const char *s2=\"Hello World\"; cout<<(void*)s1<<endl; cout<<(void*)s2<<endl; return 0; //\u8f93\u51fa\u7684\u7ed3\u679c\u662fs1\u548cs2\u7684\u5730\u5740\uff0c\u4ed6\u4eec\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684 } 2. \u7c7b class 2.0 \u7c7b\u7684\u57fa\u672c\u6982\u5ff5 C++\u4e2d\u7684\u5bf9\u8c61=\u5c5e\u6027+\u64cd\u4f5c objects=attributes+operations\uff0c\u5bf9\u4e8e\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u800c\u8a00\uff0c\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4efb\u4f55\u5bf9\u8c61\u90fd\u6709\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u7a0b\u5e8f\u5c31\u662f\u4e00\u7cfb\u5217\u5bf9\u8c61\u4e92\u76f8\u4e4b\u95f4\u4f20\u9012\u4fe1\u606f\u6765\u5b8c\u6210\u529f\u80fd C++\u7684\u7c7b\u5305\u542b\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570 C++\u4e2dclass\u7684\u5b9a\u4e49\uff0c\u5177\u4f53\u5b9e\u73b0\u548c\u8c03\u7528\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u6587\u4ef6 \u5934\u6587\u4ef6header\u662f\u5177\u4f53\u5b9e\u73b0\u548c\u8c03\u7528\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u6bcf\u4e2a\u7c7b\u7684\u5b9a\u4e49\u9700\u8981\u75281\u4e2a\u5934\u6587\u4ef6 :: \u64cd\u4f5c\u7b26\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u7c7b\u4e2d\u7684\u5185\u5bb9 2.1 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570 constructor \u6784\u9020\u51fd\u6570 \u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u540d\u548c\u7c7b\u7684\u540d\u5b57\u76f8\u540c\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e9b\u53c2\u6570\u7528\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5728\u7c7b\u7684\u5bf9\u8c61\u88ab\u5b9a\u4e49\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570 default constructor \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u9700\u8981\u53c2\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7684\u6784\u9020\u51fd\u6570 \u521d\u59cb\u5316\u5217\u8868\uff1a\u5728\u51fd\u6570\u7b7e\u540d\u540e\u9762\uff0c\u5927\u62ec\u53f7\u4e4b\u524d\u76f4\u63a5\u5bf9\u7c7b\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c const\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316 \u53ea\u80fd\u7528\u521d\u59cb\u5316\u5217\u8868 \u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\u521d\u59cb\u5316\u9636\u6bb5\u548c\u51fd\u6570\u6267\u884c\u9636\u6bb5\uff0c\u4f1a\u5148\u6267\u884c\u521d\u59cb\u5316\u5217\u8868\u91cc\u7684\u8d4b\u503c\uff0c\u5728\u8fdb\u5165\u51fd\u6570\u4e3b\u4f53\u8fdb\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c Destructor \u6790\u6784\u51fd\u6570 \u6790\u6784\u51fd\u6570\u7684\u51fd\u6570\u540d\u662f\u7c7b\u540d\u524d\u9762\u52a0\u4e00\u4e2a~\uff0c\u6790\u6784\u51fd\u6570\u4e0d\u9700\u8981\u53c2\u6570\uff0c\u5728\u7c7b\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u7684\u65f6\u5019\u4f1a \u88ab\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528 function overloading \u51fd\u6570\u91cd\u8f7d\uff1a \u51fd\u6570\u540d\u76f8\u540c\u800c\u53c2\u6570\u7684\u4e2a\u6570\u548c\u7c7b\u578b\u4e0d\u540c\u7684\u51e0\u4e2a\u51fd\u6570\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u4e0d\u540c\u7684\u6784\u9020\u51fd\u6570\u6765\u89e3\u51b3\u4e0d\u540c\u60c5\u51b5\u4e0b\u7684\u6784\u9020 default value\uff1a\u7f3a\u7701\u503c\uff0c\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u8868\u4e2d\u76f4\u63a5\u58f0\u660e\u4e00\u4e9b\u53c2\u6570\u7684\u503c\uff0c\u4f46\u662f\u5fc5\u987b\u8981\u4ece\u53f3\u5f80\u5de6\uff0c\u5f53\u4f20\u5165\u7684\u53c2\u6570\u7f3a\u7701\u65f6\u51fd\u6570\u9ed8\u8ba4\u5c06\u5df2\u7ecf\u58f0\u660e\u7684\u503c\u4f5c\u4e3a\u53c2\u6570\u7684\u503c constant object\u5e38\u91cf\u5bf9\u8c61 \u9700\u8981\u52a0const\u58f0\u660e\uff0c\u5728\u58f0\u660e\u4e4b\u540e\u5c31\u4e0d\u80fd\u6539\u53d8\u8fd9\u4e2a\u5bf9\u8c61\u5185\u90e8\u53d8\u91cf\u7684\u503c \u4f1a\u6709\u4e00\u4e9b\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u6b63\u5e38\u4f7f\u7528 \u5728\u6210\u5458\u51fd\u6570\u53c2\u6570\u8868\u540e\u9762\u52a0const\u53ef\u4ee5\u6210\u4e3aconst\u578b\u6210\u5458\u51fd\u6570\uff0cconst\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u503c const\u58f0\u660e\u5199\u5728\u51fd\u6570\u7684\u5f00\u5934\u8868\u793a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u662fconst const\u58f0\u660e\u5199\u5728\u51fd\u6570\u7b7e\u540d\u7684\u672b\u5c3e\u8868\u793a\u8fd9\u4e2a\u6210\u5458\u51fd\u6570 \u4e0d\u80fd\u4fee\u6539\u7c7b\u4e2d\u5b9a\u4e49\u7684\u6210\u5458\u53d8\u91cf \uff0c\u88ab\u79f0\u4e3a \u5e38\u6210\u5458\u51fd\u6570 \u4f46\u662f\u5982\u679c\u662f\u6210\u5458\u53d8\u91cf\u4e2d\u6709\u6307\u9488\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u88ab\u4fee\u6539 const\u7c7b\u578b\u7684\u51fd\u6570\u548c\u975econst\u7c7b\u578b\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a ```c++ class A { public: void foo() { cout << \"A::foo();\" << endl; } void foo() const { cout << \"A::foo() const;\" << endl; } }; int main() { A a; a.foo(); //\u8bbf\u95ee\u7684\u662f\u975econst\u7c7b\u578b\u7684foo const A aa; aa.foo(); //\u8bbf\u95ee\u7684\u662fconst\u7c7b\u578b\u7684foo return 0; } ``` const\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\u7684\u4f7f\u7528\u89c4\u5219\u5982\u4e0b\uff1a non-const\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8c03\u7528const\u7c7b\u578b\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\uff0c\u800cconst\u7c7b\u578b\u53ef\u4ee5\u8bbf\u95ee const\u7c7b\u578b\u51fd\u6570\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u6210\u5458\u53d8\u91cf\u7684\u503c \u6784\u6210\u91cd\u8f7d\u5173\u7cfb\u7684\u65f6\u5019\uff0cconst\u7c7b\u578b\u7684\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u8c03\u7528non-const\uff0c\u800c\u975econst\u7c7b\u578b\u7684\u5bf9\u8c61 \u4f18\u5148\u8c03\u7528non-const\u7684\u6210\u5458\u51fd\u6570 \uff0c\u5982\u679c\u6ca1\u6709non-const\u518d\u8c03\u7528const\u7c7b\u578b\u7684 copy constructor\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u628a\u4e00\u4e2a\u5bf9\u8c61\u76f4\u63a5\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e00\u822c\u7684\u5f62\u5f0f\u4e3a class_name(const class_name & copy_class_var )`\uff0c\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8c61\u4e4b\u95f4\u7684\u4e92\u76f8\u8d4b\u503c \u5982\u679c\u5b9a\u4e49\u53d8\u91cf\u65f6\u76f4\u63a5\u7ed9\u53d8\u91cf\u7528\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\uff0c\u8c03\u7528\u7684\u5c31\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u662f\u5b9a\u4e49\u4e4b\u540e\u518d\u8d4b\u503c\uff0c\u5c31\u662f\u8c03\u7528\u4e86\u91cd\u8f7d\u4e4b\u540e\u7684\u7b49\u53f7\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e00\u6bb5\u4ee3\u7801 ```c++ class A { A() {} A(const A& a) {} A& operator=(const A& a) {} }; int main() { A a; A b = a; //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 A c; c = a; //\u8c03\u7528\u91cd\u8f7d\u4e4b\u540e\u7684\u7b49\u53f7 } `` - C++\u4e2d\u7684\u62f7\u8d1d\uff1a**\u6d45\u62f7\u8d1d**\u548c**\u6df1\u62f7\u8d1d** - \u6d45\u62f7\u8d1d\uff1a\u5728\u539f\u6765\u5df2\u6709\u7684\u5185\u5b58\u4e2d\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u6307\u9488\u6307\u5411\u8fd9\u4e00\u6bb5\u5185\u5b58 - \u6bd4\u5982 string s1=\"zyc\"; string s2(s1);` \u5c31\u662f\u4e00\u79cd\u6d45\u62f7\u8d1d - \u6df1\u62f7\u8d1d\uff1a\u5206\u914d\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u590d\u5236\u5bf9\u5e94\u7684\u503c\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u6307\u9488\u6307\u5411\u8fd9\u4e00\u5757\u5185\u5b58 - \u7f3a\u7701\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u8fdb\u884c\u7684\u90fd\u662f\u6d45\u62f7\u8d1d - \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u533a\u522b - \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u5728\u5bf9\u8c61\u88ab\u521b\u5efa\u7684\u65f6\u5019\u8c03\u7528\u7684\u3001 - \u8d4b\u503c\u8fd0\u7b97\u7b26\u53ea\u80fd\u4f7f\u7528\u4e8e\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u8d4b\u503c\u4e4b\u524d\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5df2\u7ecf\u88ab\u67d0\u4e2a\u6784\u9020\u51fd\u6570\u6784\u9020\u51fa\u6765\u4e86 - \u4f8b\u5982 ```c++ #include #include using namespace std; struct Person{ char name; Person(const char s){ name=new char[strlen(s)+1]; strcpy(name,s); } ~Person(){ delete[] name; } } //\u4e0d\u9700\u8981\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u4e00\u79cd\u65b9\u5f0f Person bar(const char *s) { cout<<\"in bar()\"<<endl; return Person(s); } int main() { Person p1(\"Trump\"); Person p2=p1; cout<<(void )p1.name<<endl; cout<<(void )p2.name<<endl; //\u4f1a\u53d1\u73b0\u8f93\u51fa\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u8bf4\u660e\u6307\u9488\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e5f\u8fdb\u884c\u4e86copy,\u82e5\u8981\u907f\u514d\u5219\u5e94\u8be5\u81ea\u5df1\u7f16\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570 return 0; } ``` 2.2 static\u7c7b\u578b \u7c7b\u4e2d\u7684\u6210\u5458(\u53d8\u91cf\u548c\u51fd\u6570)\u5206\u4e3a\u4e24\u79cd \u9759\u6001\u6210\u5458\uff1a\u5728\u7c7b\u5185\u6240\u6709\u5bf9\u8c61\u4e4b\u95f4\u5171\u4eab \u5b9e\u4f8b\u6210\u5458\uff1a\u53ea\u80fd\u5728\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u4e2d\u8c03\u7528 \u9759\u6001\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u5b9e\u4f8b\u6210\u5458 \u4e4b\u524d\u5df2\u7ecf\u8bb2\u5230\u4e86static\u7c7b\u578b\u7684\u5168\u5c40\u53d8\u91cf\u53ea\u5728\u5f53\u524d\u6587\u4ef6\u6709\u6548\uff0c\u4e0d\u80fd\u901a\u8fc7extern\u8de8\u6587\u4ef6\u8c03\u7528\uff0c\u800c\u51fd\u6570\u4e2d\u7684static\u7c7b\u578b\u7684\u53d8\u91cf\u5728 \u7b2c\u4e00\u6b21\u8c03\u7528 \u7684\u65f6\u5019\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u4e4b\u540e\u518d\u8c03\u7528\u8be5\u51fd\u6570\u8fd9\u4e2astatic\u7c7b\u578b\u7684\u53d8\u91cf \u4fdd\u6301\u4e0a\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c #include<iostream> using namespace std; class A{ piblic: A() {cout<<\"A::A()\"<<endl;} ~A(){cout<<\"A::~A()\"<<endl;} } void f(int n) { if(x>10) static A a; cout<<\"f()\"<<endl; } int main() { cout<<\"start\"<<endl; f(1); f(11); return 0; } //\u6b64\u65f6\u53ea\u6709\u5728\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6a\u624d\u4f1a\u88ab\u6784\u9020 //\u65e0\u8bba\u4ec0\u4e48\u60c5\u51b5\uff0cA\u7684\u6784\u9020\u548c\u6790\u6784\u51fd\u6570\u53ea\u4f1a\u88ab\u6267\u884c\u4e00\u6b21 \u7c7b\u4e2d\u7684static \u7c7b\u4e2d\u5b9a\u4e49\u7684static\u7c7b\u578b\u7684\u53d8\u91cf\u662f \u9759\u6001\u6210\u5458\u53d8\u91cf \uff0c\u5176\u503c\u4f1a\u5728\u8fd9\u4e2a\u7c7b\u7684 \u6240\u6709\u6210\u5458\u4e4b\u95f4\u5171\u4eab non-const\u7c7b\u578b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u7c7b\u7684\u5916\u9762\u8fdb\u884c\u5b9a\u4e49\uff0c\u6bd4\u5982\uff1a ```c++ include using namespace std; class A { public: static int count; A() { A::count++; } }; int A::count = 0; // \u5728\u7c7b\u7684\u5916\u90e8\u8d4b\u503c\u7684\u65f6\u5019\u4e0d\u9700\u8981\u8bf4\u660estatic\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u660eA::\uff0c\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf int main() { A* array = new A[100]; cout<<A::count<<endl; } ``` const\u7c7b\u578b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u4f5c\u4e3a\u7c7b\u5185\u5171\u4eab\u7684\u4e00\u4e2a\u5e38\u91cf\uff0c\u4e5f\u9700\u8981\u5728\u7c7b\u7684\u5916\u90e8\u8fdb\u884c\u5b9a\u4e49\uff0c\u6b64\u65f6\u8981\u5199\u51fa\u5173\u952e\u5b57const\uff0c\u5e76\u4e14\u8fd9\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u662f\u4e0d\u80fd\u88ab\u6539\u53d8\u7684 \u9759\u6001\u6210\u5458\u51fd\u6570\uff1a \u53ef\u4ee5\u8bbf\u95ee\u7c7b\u5b9a\u4e49\u4e2d\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf \uff0c\u4f46\u662f \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u666e\u901a\u7684 \u6210\u5458\u53d8\u91cf \u9700\u8981\u5728\u51fd\u6570\u5b9a\u4e49\u4e4b\u524d\u52a0static\u5173\u952e\u5b57 2.3 Inline Function\u5185\u8054\u51fd\u6570 \u9700\u8981\u5728\u51fd\u6570\u540d\u524d\u9762\u52a0\u5173\u952e\u5b57 inline \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u671f\u4f1a\u88ab\u7f16\u8bd1\u5668\u5728\u8c03\u7528\u5904\u76f4\u63a5\u6269\u5c55\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u51cf\u5c11\u8fd0\u884c\u65f6\u8c03\u7528\u51fd\u6570\u7684cost \u5185\u8054\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u51fd\u6570\u4e3b\u4f53\u90e8\u5206\u90fd\u5e94\u8be5\u5199\u5728 \u5934\u6587\u4ef6 \u4e2d \u672c\u8d28\u662f\u7a7a\u95f4\u6362\u65f6\u95f4 class\u4e2d\u7684\u51fd\u6570\u90fd\u662f \u9ed8\u8ba4inline \u7684 an inline function is expanded in place, like a preprocessormacro, so the overhead of the function call is eliminated,\u4e0d\u9700\u8981\u51fd\u6570\u8c03\u7528\u4ea7\u751f\u7684\u5f00\u9500\uff0c\u7531\u7f16\u8bd1\u5668 \u76f4\u63a5\u4f18\u5316 \uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u4f7f\u5f97\u9700\u8981\u7f16\u8bd1\u7684\u4ee3\u7801\u91cf\u589e\u5927(\u867d\u7136\u5199\u7684\u4eba\u662f\u770b\u4e0d\u51fa\u6765\u7684)\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u51cf\u5c0f\u51fd\u6570\u8c03\u7528\u65f6\u7684\u5f00\u9500\uff0c\u4e00\u822c\u5728\u51fd\u6570\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 2.4 \u7ee7\u627fInheritance composition \u7ec4\u5408\uff1a\u628a\u5176\u4ed6\u7684\u7c7b\u4f5c\u4e3a\u81ea\u5df1\u7684\u6210\u5458\u53d8\u91cf Inheritance\uff1a\u4ece\u57fa\u7c7b\u4e2d\u7ee7\u627f\u751f\u6210\u6d3e\u751f\u7c7b \u6d3e\u751f\u7c7b \u7ee7\u627f\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570 \u6d3e\u751f\u7c7b\u4e2d \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee \u57fa\u7c7b\u7684private\u7684\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\u548c\u53d8\u91cf \u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d \u8c03\u7528 \u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u6d3e\u751f\u7c7b\u5728\u88ab\u6784\u9020\u7684\u65f6\u5019\u4f1a \u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570 \uff0c\u518d\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u7684\u65f6\u5019\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570 \u5982\u679c\u6d3e\u751f\u7c7b\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0c\u5219\u76f4\u63a5\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u5982\u679c\u6d3e\u751f\u7c7b\u5b9a\u4e49\u4e86\u6784\u9020\u51fd\u6570\uff0c\u5728\u6267\u884c\u4e4b\u524d\u4f1a\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6ca1\u6709\u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5219\u4f1a\u9009\u62e9\u8c03\u7528\u57fa\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570 ```c++ class A { public: int i; A(int ii = 0): i(ii) { cout<<\"A(): \"<<i<<endl; } }; class B: public A { public: int i; A a; B(int ii = 0): i(ii) { cout<<\"B(): \"<<i<<endl; } }; int main() { B b(100); return 0; } ``` \u5f53\u7ee7\u627f\u548c\u7ec4\u5408\u4e24\u79cd\u60c5\u51b5\u540c\u65f6\u51fa\u73b0\u65f6\uff0c\u5148\u6784\u9020\u57fa\u7c7b\uff0c\u518d\u6784\u9020\u6d3e\u751f\u7c7b\u4e2d\u7ec4\u5408\u7684\u5176\u4ed6\u7c7b\uff0c\u518d\u6784\u9020\u6d3e\u751f\u7c7b\uff0c\u6790\u6784\u7684\u65f6\u5019\u7c7b\u4f3c Base class is always constructed first \u5c31\u7b97\u7ec4\u5408\u7684\u7c7b\u5728 \u521d\u59cb\u5316\u5217\u8868\u6216\u8005\u6784\u9020\u51fd\u6570\u4e2d\u6ca1\u6709\u8c03\u7528 \u6784\u9020\u51fd\u6570\uff0cC++\u7f16\u8bd1\u5668\u4e5f\u4f1a\u81ea\u52a8\u8c03\u7528\u8fd9\u4e2a\u7c7b\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570 \u6d3e\u751f\u7c7b\u4e2d\u53ef\u4ee5\u5bf9\u57fa\u7c7b\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d\uff0c\u6b64\u65f6\u5982\u679c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u6309\u7167\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u6267\u884c \u4ecd\u7136\u8c03\u7528\u57fa\u7c7b\u7684\u65b9\u6cd5 object.Base::function() class\u548cstruct\u7684\u533a\u522b\uff1aclass\u4e2d\u7684\u53d8\u91cf\u548c\u51fd\u6570 \u9ed8\u8ba4\u4e3aprivate \uff0cstruct\u4e2d\u7684\u51fd\u6570\u9ed8\u8ba4\u4e3apublic \u8bbf\u95ee\u63a7\u5236 public\uff1a\u6240\u6709\u60c5\u51b5\u4e0b\u53ef\u89c1 protected\uff1a\u53ef\u4ee5\u88ab\u81ea\u5df1/\u6d3e\u751f\u7c7b\u548c\u53cb\u5143\u51fd\u6570\u8bbf\u95ee private\uff1a\u5bf9\u4e8e\u81ea\u5df1\u548c\u53cb\u5143\u51fd\u6570\u53ef\u89c1 \u7ee7\u627f\u7684\u79cd\u7c7b\uff1apublic\uff0cprivate\uff0cprotected\u7ee7\u627f\uff0c\u7ee7\u627f\u4e4b\u540e\u7684\u57fa\u7c7b\u53d8\u91cf\u7684\u8bbf\u95ee\u63a7\u5236\u53d6\u539f\u672c\u7c7b\u578b\u548c\u7ee7\u627f\u7c7b\u578b\u4e2d\u8f83\u4e25\u683c\u7684 \u53ef\u4ee5\u901a\u8fc7 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u628a\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8f6c\u5316\u4e3a\u57fa\u7c7b\u7684\u5bf9\u8c61 2.5 \u53cb\u5143 friend \u53cb\u5143\u51fd\u6570 \u5728\u7c7b\u4e2d\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u51fd\u6570\u6216\u8005\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a friend \u53ef\u4ee5\u4f7f\u8fd9\u4e9b\u51fd\u6570\u62e5\u6709\u8bbf\u95ee\u7c7b\u5185private\u548cprotected\u7c7b\u578b\u7684\u53d8\u91cf\u548c\u51fd\u6570\u7684\u6743\u9650 \u53cb\u5143\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u88ab\u79f0\u4e3a\u662f\u53cb\u5143\u7c7b\uff0c\u6574\u4e2a\u7c7b\u548c\u6240\u6709\u7684\u6210\u5458\u90fd\u662f\u53cb\u5143 \u53cb\u5143\u51fd\u6570\u672c\u8eab\u4e0d\u662f\u90a3\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u51fd\u6570\u7b7e\u540d\u91cc\u4e0d\u9700\u8981 className:: \u6765\u8868\u793a\u662f\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u76f4\u63a5\u4f5c\u4e3a\u666e\u901a\u51fd\u6570\u5373\u53ef ```c++ class A { private: int val; public: A(int value): val(value) { cout<<\"A()\"<<endl; } friend void showValue(A a); }; void showValue(A a) { cout<<a.val<<endl; } ``` 2.6 \u591a\u6001\u548c\u865a\u51fd\u6570 \u591a\u6001 Polymorphism \u540c\u4e00\u6bb5\u4ee3\u7801\u53ef\u4ee5\u4ea7\u751f\u4e0d\u540c\u6548\u679c \u5bf9\u4e8e\u7ee7\u627f\u4f53\u7cfb\u4e2d\u7684\u67d0\u4e00\u7cfb\u5217\u540c\u540d\u51fd\u6570\uff0c\u4e0d\u540c\u7684\u7c7b\u578b\u4f1a\u8c03\u7528\u4e0d\u7528\u7684\u51fd\u6570 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4e4b\u95f4\u6709\u51fd\u6570\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u4f9d\u7136\u4f1a\u6839\u636e\u53d8\u91cf\u7c7b\u578b\u6765\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u6bd4\u5982\uff1a ```c++ include using namespace std; class A{ public: virtual void foo() { cout<<1<<endl; } }; class B: public A{ public: virtual void foo() { cout<<2<<endl; } }; int main() { A a; B b; a.foo(); b.foo(); return 0; } ``` \u6b64\u65f6\u8fd0\u884c\u7684\u7ed3\u679c\u662f1\u548c2\uff0c\u5373A\u578b\u7684\u53d8\u91cf\u7684foo\u51fd\u6570\u662f\u57fa\u7c7b\u4e2d\u7684\uff0cB\u7c7b\u578b\u7684\u53d8\u91cf\u7684foo\u51fd\u6570\u662f\u6d3e\u751f\u7c7b\u4e2d\u7684 \u9759\u6001\u94fe\u63a5 \u51fd\u6570\u7684\u8c03\u7528\u5728\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u4e4b\u524d\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86 \u5bf9\u4e8e\u50cf\u4e0b\u9762\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u57fa\u7c7b\u7684\u6307\u9488(\u5f15\u7528)\u6307\u5411\u6d3e\u751f\u7c7b\uff0c\u5e76\u4e14\u8c03\u7528\u4e86\u57fa\u7c7b\u4e2d\u4e5f\u5b58\u5728\u7684\u540c\u540d\u51fd\u6570\uff0c\u6700\u7ec8\u8c03\u7528\u7684\u90fd\u662f\u57fa\u7c7b\u7684\u540c\u540d\u51fd\u6570 ```cpp class Shape { protected: int width, height; public: Shape( int a=0, int b=0) { width = a; height = b; } int area() { cout << \"Parent class area :\" <<endl; return 0; } }; class Rectangle: public Shape{ public: Rectangle( int a=0, int b=0):Shape(a, b) { } int area () { cout << \"Rectangle class area :\" <<endl; return (width * height); } }; class Triangle: public Shape{ public: Triangle( int a=0, int b=0):Shape(a, b) { } int area () { cout << \"Triangle class area :\" <<endl; return (width * height / 2); } }; int main( ) { Shape *shape; Rectangle rec(10,7); Triangle tri(10,5); shape = &rec; shape->area(); shape = &tri; shape->area(); return 0; } ``` \u865a\u51fd\u6570 Virtual Function \u4e00\u79cd\u7528\u4e8e \u5b9e\u73b0\u591a\u6001 \u7684\u673a\u5236\uff0c\u6838\u5fc3\u7406\u5ff5\u662f\u901a\u8fc7\u57fa\u7c7b\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5b9a\u4e49\u7684\u51fd\u6570 \u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a \u52a8\u6001 \u94fe\u63a5 \u7528\u4e8e\u533a\u5206\u6d3e\u751f\u7c7b\u4e2d\u548c\u57fa\u7c7b\u540c\u540d\u7684\u65b9\u6cd5\u51fd\u6570\uff0c\u9700\u8981\u5c06 \u57fa\u7c7b \u7684\u6210\u5458\u51fd\u6570\u7c7b\u578b\u58f0\u660e\u4e3avirtual \u57fa\u7c7b\u4e2d\u7684 \u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u4e3a\u865a\u51fd\u6570 \uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u5bf9\u8c61\u91ca\u653e\u9519\u8bef \u7eaf\u865a\u51fd\u6570\uff1a virtual int func() = 0; \u8868\u660e\u8be5\u51fd\u6570\u6ca1\u6709\u4e3b\u4f53\uff0c\u57fa\u7c7b\u4e2d\u6ca1\u6709\u7ed9\u51fa\u6709\u610f\u4e49\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u9700\u8981\u5728\u6d3e\u751f\u7c7b\u4e2d\u8fdb\u884c\u6269\u5c55 override\u8bed\u6cd5\uff1a\u6d3e\u751f\u7c7b\u4e2d\u53ef\u4ee5\u7528override\u5173\u952e\u5b57\u6765\u58f0\u660e\uff0c\u8868\u793a\u5bf9\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u91cd\u8f7d \u865a\u51fd\u6570\u9700\u8981\u501f\u52a9\u6307\u9488\u548c\u5f15\u7528\u8fbe\u5230\u591a\u6001\u7684\u6548\u679c \u5982\u679c\u57fa\u7c7b\u6307\u9488/\u5f15\u7528 \u6307\u5411\u57fa\u7c7b \uff0c\u90a3\u5c31\u6b63\u5e38\u8c03\u7528\u57fa\u7c7b\u7684\u76f8\u5173\u6210\u5458\u51fd\u6570 \u5982\u679c\u57fa\u7c7b\u6307\u9488 \u6307\u5411\u6d3e\u751f\u7c7b \uff0c\u5219\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570 \u6d3e\u751f\u7c7b\u6307\u9488 \u4e0d\u80fd \u6307\u5411\u57fa\u7c7b ```c++ class A{ public: virtual void foo(){ cout<<\"A\"<<endl; } }; class B{ public: virtual void foo(){ cout<<\"B\"<<endl; } } int main() { A *a=new B(); a->foo(); //\u7ed3\u679c\u4e3aB return 0; } ``` \u865a\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a \u865a\u51fd\u6570\u8868 virtual table \u6bcf\u4e00\u4e2a\u6709\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u4f1a\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u8be5\u7c7b\u7684\u4efb\u4f55\u5bf9\u8c61\u4e2d\u90fd\u5b58\u653e\u7740\u865a\u51fd\u6570\u8868\u7684\u6307\u9488\uff0c\u865a\u51fd\u6570\u8868\u4e2d \u5217\u51fa\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740 \u865a\u51fd\u6570\u8868\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u91cc\u9762\u5b58\u653e\u4e86\u4e00\u7cfb\u5217\u865a\u51fd\u6570\u7684\u6307\u9488 \u865a\u51fd\u6570\u7684\u8c03\u7528\u9700\u8981\u7ecf\u8fc7\u865a\u51fd\u6570\u8868\u7684\u67e5\u8be2\uff0c\u975e\u865a\u51fd\u6570\u7684\u8c03\u7528\u4e0d\u9700\u8981\u7ecf\u8fc7\u865a\u51fd\u6570\u8868 \u865a\u51fd\u6570\u8868\u5728\u4ee3\u7801\u7684\u7f16\u8bd1\u9636\u6bb5\u5c31\u5b8c\u6210\u4e86\u6784\u9020 \u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u6709\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u4e00\u4e2a\u6307\u9488 __vptr \u591a\u6001\u7684\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u88ab\u7f16\u8bd1\u6210\u4e00\u7cfb\u5217\u6839\u636e\u57fa\u7c7b\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5b58\u653e\u7684\u865a\u51fd\u6570\u8868\u7684\u5730\u5740\uff0c\u5728\u4ece\u865a\u51fd\u6570\u8868\u4e2d\u67e5\u627e\u5730\u5740\u8c03\u7528\u5bf9\u5e94\u7684\u865a\u51fd\u6570 \u4e8b\u5b9e\u4e0a\u865a\u51fd\u6570\u4f1a\u7ed9\u51fd\u6570\u52a0\u4e0a\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\uff0c\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5360\u75284\u5b57\u8282 \u63a5\u53e3(C++\u62bd\u8c61\u7c7b) \u63cf\u8ff0\u4e86\u4e00\u4e2a\u7c7b\u5e94\u8be5\u6709\u7684\u529f\u80fd\u548c\u884c\u4e3a\uff0c\u4f46\u662f\u4e0d\u7528\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5b9e\u73b0\uff0c\u800c\u662f\u5728\u6d3e\u751f\u7c7b\u4e2d\u5b9e\u73b0 \u53ef\u4ee5\u4f7f\u7528\u7eaf\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\uff0c\u6bd4\u5982\uff1a class Shape { public: virtual double getArea() = 0; Shape(int a, int b): length(a), width(b) {} protected: int length; int width; }; class Rectangle: public Shape { public: double getArea() { return length * width; } }; class Triangle: public Shape { public: double getArea() { return length * width / 2; } }; 2.7 \u865a\u51fd\u6570\u4f7f\u7528\u603b\u7ed3 \u60c5\u51b51\uff1a\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u90fd\u4e0d\u662fvirtual \u6b64\u65f6\u5bf9\u4e8e\u57fa\u7c7b\u7684\u5bf9\u8c61\u548c\u57fa\u7c7b\u7684\u6307\u9488\uff0c\u6267\u884c\u7684\u5c31\u662f\u57fa\u7c7b\u7684f\uff0c\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u7684\u6267\u884c\u7684\u5c31\u662f\u6d3e\u751f\u7c7b\u7684f class A { public: void f() { cout << \"af\" << endl; } }; class B: public A { public: void f() { cout << \"bf\" <<endl; } }; int main() { A a; B b; a.f(); b.f(); A* pb = &b; pb->f(); } \u60c5\u51b52\uff1a\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u662f\u865a\u51fd\u6570\uff1a\u65e0\u5f71\u54cd\uff0c\u548c1\u4e00\u6a21\u4e00\u6837 \u60c5\u51b53\uff1a\u57fa\u7c7b\u4e2d\u7684\u662f\u865a\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u4e2d\u4e0d\u6ce8\u660e\u662f\u865a\u51fd\u6570\uff1a\u6b64\u65f6\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u548c\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6267\u884c\u7684\u90fd\u662f\u6d3e\u751f\u7c7b\u7684\u51fd\u6570f\uff0c\u57fa\u7c7b\u7684\u5bf9\u8c61\u548c\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6267\u884c\u7684\u90fd\u662f\u57fa\u7c7b\u7684\u51fd\u6570f \u603b\u7ed3\uff1a virtual\u7684\u865a\u51fd\u6570\u5173\u952e\u5b57\u662f \u5411\u4e0b\u8d1f\u8d23 \u7684\uff0c\u6d3e\u751f\u7c7b\u58f0\u660evirtual\u5bf9\u57fa\u7c7b\u65e0\u4efb\u4f55\u5f71\u54cd \u5bf9\u4e8e\u6307\u9488\u548c\u5f15\u7528\u800c\u8a00 \u4e0d\u662f\u865a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u8c03\u7528\u7684\u51fd\u6570\u53d6\u51b3\u4e8e\u6307\u9488\u548c\u5f15\u7528\u7684\u53d8\u91cf\u7c7b\u578b(\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u57fa\u7c7b\uff0c\u6d3e\u751f\u7c7b\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b) \u662f\u865a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u8c03\u7528\u51fd\u6570\u53d6\u51b3\u4e8e\u6307\u9488\u548c\u5f15\u7528\u6307\u5411\u7684\u53d8\u91cf\u7c7b\u578b(\u6307\u5411\u57fa\u7c7b\u8c03\u7528\u57fa\u7c7b\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u8c03\u7528\u6d3e\u751f\u7c7b) \u5f53\u7136\u5982\u679c\u6d3e\u751f\u7c7b\u91cc\u6ca1\u6709\u65b0\u7684\u540c\u540d\u51fd\u6570\uff0c\u90a3\u4e48\u6267\u884c\u7684\u90fd\u662f\u57fa\u7c7b\u91cc\u7684 \u8981\u6ce8\u610f\u6d3e\u751f\u7c7b\u6307\u9488\u4e0d\u80fd\u76f4\u63a5\u6307\u5411\u57fa\u7c7b\u7684\u5bf9\u8c61 \u5982\u679c\u865a\u51fd\u6570\u91cc\u8fd8\u9700\u8981\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u8c03\u7528\u7684\u89c4\u5219\u4e5f\u548c\u4e0a\u9762\u7684\u4e00\u6837\uff0c\u6bd4\u5982\u4e0b\u9762\u6709\u4e2a\u5386\u5e74\u5377\u4e0a\u9762\u7684\u795e\u9898\uff1a \u5386\u5e74\u5377\u4e0a\u7684\u4e00\u4e2a\u9898\u76ee\uff1a\u5199\u51fa\u7a0b\u5e8f\u7684\u8f93\u51fa ```c++ class B { public: void f() { cout << \"bf\" << endl; } virtual void vf() { cout << \"bvf\" << endl; } void ff() { vf(); f(); } virtual void vff() { vf(); f(); } }; class D: public B { public: void f() { cout << \"df\" << endl; } void ff() { f(); vf(); } void vf() { cout << \"dvf\" <<endl; } }; int main() { D d; B* pb = &d; pb->f(); pb->ff(); pb->vf(); pb->vff(); } ``` \u8fd9\u9053\u9898\u7684\u5206\u6790\u8fc7\u7a0b\u5982\u4e0b\uff1a \u9996\u5148\u8c03\u7528f\uff0c\u800cf\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u6839\u636e\u6307\u9488\u7c7b\u578b\u8c03\u7528\u4e86B\u4e2d\u7684f\uff0c\u8f93\u51fabf \u518d\u8c03\u7528ff\uff0c\u56e0\u4e3aff\u4e5f\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u8c03\u7528B\u4e2d\u7684ff\uff0cB\u4e2d\u7684ff\u8c03\u7528\u4e86vf\u548cf\uff0c\u800cvf\u662f\u865a\u51fd\u6570\uff0cB\u7c7b\u578b\u6307\u9488\u6307\u5411\u7684\u662fD\uff0c\u6240\u4ee5\u8c03\u7528D\u4e2d\u7684vf\uff0c\u8f93\u51fadvf\uff0c\u8c03\u7528f\u5219\u548c\u4e0a\u9762\u4e00\u6837\u8f93\u51fabf \u518d\u8c03\u7528vf\uff0c\u7531\u4e8evf\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u8981\u8c03\u7528D\u4e2d\u7684vf\uff0c\u8f93\u51fadvf \u518d\u8c03\u7528vff\uff0c\u867d\u7136\u662f\u865a\u51fd\u6570\u4f46\u662fD\u4e2d\u6ca1\u6709\u5b9a\u4e49\u540c\u540d\u51fd\u6570\uff0c\u6240\u4ee5\u8c03\u7528B\u4e2d\u7684vff\uff0cvff\u4e2d\u8c03\u7528vf\u548cf\uff0c\u540c2\u4e00\u6837\u8f93\u51fa\u7684\u662fdvf\u548cbf \u6240\u4ee5\u6700\u7ec8\u7684\u8f93\u51fa\u662f c bf dvf bf dvf dvf bf \u8fd9\u9053\u9898\u6db5\u76d6\u4e86\u5355\u7ee7\u627f\u865a\u51fd\u6570\u7684\u6240\u6709\u60c5\u51b5 \u57fa\u7c7b\u865a\u51fd\u6570\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6d3e\u751f\u7c7b\u4e2d\u7684\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u540c\u540d\u51fd\u6570 \u6bd4\u5982\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\u4e2d ```cpp class A { public: virtual void f(int i) { cout << 1 <<endl; } }; class B: public A { public: virtual void f(double i) { cout << 2 << endl; } }; int main() { A* pa = new B; pa->f(1); return 0; } ``` \u8fd9\u91cc\u8f93\u51fa\u7684\u7ed3\u679c\u662f1\uff0c\u4e8b\u5b9e\u4e0a\u4e24\u4e2af\u5e76\u4e0d\u6784\u6210\u865a\u51fd\u6570\u7684\u5173\u7cfb\uff0c\u56e0\u4e3af(1)\u4e2d1\u662fint\u7c7b\u578b\uff0c\u6240\u4ee5\u4f18\u5148\u8c03\u7528\u4e86\u5bf9int\u5339\u914d\u5ea6\u9ad8\u7684 \u4e8b\u5b9e\u4e0a\u5982\u679c\u662ff(1.1)\u8f93\u51fa\u7684\u7ed3\u679c\u4ecd\u7136\u662f1\uff0c\u5e76\u4e14CLion\u4f1a\u63d0\u793a\u53c2\u6570\u9700\u8981\u7c7b\u578b\u8f6c\u6362 \u4e8b\u5b9e\u4e0a\u4e24\u4e2af\u4e0d\u6784\u6210\u865a\u51fd\u6570\u7684\u591a\u6001\u5173\u7cfb\uff0c\u6240\u4ee5\u8c03\u7528\u54ea\u4e2a\u5e76\u4e0d\u770b\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u800c\u662f\u770b\u6307\u9488\u672c\u8eab\u7684\u7c7b\u578b\uff01 2.8 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 2.8.1 static_cast static_cast \u7528\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362\uff0c\u6709\u8fd9\u6837\u51e0\u79cd\u7528\u6cd5 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362\uff0c\u6bd4\u5982char\u8f6c\u6362\u6210int \u5728\u7c7b\u7684\u4f53\u7cfb\u4e2d\u628a\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u548c\u5f15\u7528\u8fdb\u884c\u8f6c\u6362 \u5411\u4e0a\u8f6c\u6362\u662f\u5b89\u5168\u7684 \u5411\u4e0b\u8f6c\u6362\u662f\u4e0d\u5b89\u5168\u7684 \u53ea\u80fd\u5728\u6709\u76f8\u4e92\u8054\u7cfb\u7684\u7c7b\u578b\u4e2d\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362\uff0c\u4e0d\u4e00\u5b9a\u5305\u542b\u865a\u51fd\u6570 \u628a\u7a7a\u6307\u9488\u8f6c\u6362\u6210\u76ee\u6807\u7c7b\u578b\u7684\u7a7a\u6307\u9488 \u628a\u4efb\u4f55\u7c7b\u578b\u8f6c\u6362\u6210void\u7c7b\u578b static_cast\u4e0d\u80fd\u8f6c\u6362\u6389\u6709const\u7684\u53d8\u91cf 2.8.2 const_cast const_cast \u53ef\u4ee5\u5f3a\u5236\u53bb\u6389const\u7684\u5e38\u6570\u7279\u6027\uff0c \u53ea\u80fd\u7528\u5728\u6307\u9488\u548c\u5f15\u7528 \u4e0a\u9762 \u5e38\u91cf\u6307\u9488\u88ab\u8f6c\u5316\u6210\u975e\u5e38\u91cf\u7684\u6307\u9488\uff0c\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61 \u5e38\u91cf\u5f15\u7528\u88ab\u8f6c\u6362\u6210\u4e3a\u975e\u5e38\u91cf\u7684\u5f15\u7528\uff0c\u4ecd\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61 \u6765\u770b\u4e00\u6bb5\u4ee3\u7801 \u6253\u5370\u51fa\u6765\u7684\u7ed3\u679c\u662fa=10\uff0c\u800cp\u548cq\u6240\u6307\u5411\u7684\u503c\u662f20\uff0ca\u7684\u5730\u5740\u548cpq\u6307\u5411\u7684\u5730\u5740\u662f\u4e00\u6837\u7684 \u4e8b\u5b9e\u4e0a\u7b2c\u4e94\u884c\u7684\u8d4b\u503c\u662f\u4e00\u79cd\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u6700\u597d\u522b\u7528 const int a = 10; const int *p = &a; int *q; q = const_cast<int *>(p); *q = 20; cout << a << \" \" << *p << \" \" << *q << endl; cout << &a << \" \" << p << \" \" << q << endl; 2.8.3 reinterpret_cast reinterpret_cast \u4e3b\u8981\u6709\u4e09\u79cd\u7528\u9014 \u6539\u53d8\u6307\u9488\u6216\u8005\u5f15\u7528\u7684\u7c7b\u578b \u5c06\u6307\u9488\u6216\u8005\u5f15\u7528\u8f6c\u6362\u6210\u4e3a\u8db3\u591f\u957f\u7684\u6574\u5f62 \u5c06\u6574\u578b\u7f16\u7a0b\u6307\u9488\u6216\u8005\u5f15\u7528\u7c7b\u578b 2.8.4 dynamic_cast \u8ddf\u5176\u4ed6\u51e0\u4e2a\u4e0d\u540c\uff0c\u5176\u4ed6\u51e0\u4e2a\u90fd\u662f\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\uff0c dynamic_cast \u662f\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u7684 \u4e0d\u80fd\u7528\u4e8e\u5185\u7f6e\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362 \u5982\u679c\u6210\u529f\u7684\uff0c\u5c06\u8fd4\u56de\u6307\u5411\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u8f6c\u6362\u5931\u8d25\u7684\u8bdd\u4f1a\u8fd4\u56deNULL \u8f6c\u6362\u65f6\u57fa\u7c7b\u4e00\u5b9a\u8981\u6709\u865a\u51fd\u6570\uff0c\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 \u539f\u56e0\u662f\u865a\u51fd\u6570\u8868\u540d\u8fd9\u4e2a\u7c7b\u5e0c\u671b\u53ef\u4ee5\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\uff0c\u8fd9\u6837\u8f6c\u6362\u624d\u6709\u610f\u4e49 \u5728\u7c7b\u7684\u5411\u4e0a\u8f6c\u6362\u7684\u65f6\u5019\uff0c\u548c static_cast \u6548\u679c\u4e00\u6837\uff0c\u4f46\u662f\u5411\u4e0b\u8f6c\u6362\u7684\u65f6\u5019\u6bd4 static_cast \u66f4\u5b89\u5168\uff0c\u56e0\u6b64\u8981\u6c42\u4e5f\u66f4\u9ad8 \u6765\u770b\u4e00\u6bb5\u4ee3\u7801 c++ int main() { A a; B b; A *ap = &a; if(dynamic_cast<B*>(ap)) { cout << \"OK1\" << endl; } else { cout << \"Fail\" << endl; } if(static_cast<B*>(ap)) { cout << \"OK2\" << endl; } else { cout << \"Fail\" << endl; } ap = &b; if(dynamic_cast<B*>(ap)) { cout << \"OK3\" << endl; } else { cout << \"Fail\" << endl; } if(static_cast<B*>(ap)) { cout << \"OK4\" << endl; } else { cout << \"Fail\" << endl; } return 0; } \u8fd0\u884c\u7684\u7ed3\u679c\u662f\u7b2c\u4e00\u4e2a\u5931\u8d25\uff0c\u5176\u4ed6\u7684\u90fd\u6210\u529f \u63a8\u6d4b\u5bfc\u81f4\u8fd9\u4e2a\u7ed3\u679c\u7684\u539f\u56e0\uff1a \u5f53ap\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u53d8\u6210\u6d3e\u751f\u7c7b\u662f\u53ef\u4ee5\u6210\u529f\u7684 \u5f53ap\u6307\u5411\u57fa\u7c7b\u7684\u65f6\u5019\uff0c dynamic_cast \u8f6c\u6362\u662f\u5426\u6210\u529f\u53d6\u51b3\u4e8e\u6307\u9488\u6307\u5411\u7684\u7c7b\u578b\u548c\u5373\u5c06\u8f6c\u6362\u7684\u7c7b\u578b\u662f\u4e0d\u662f\u4e00\u6837\uff0c\u4e0d\u4e00\u6837\u5c31\u4f1a\u5931\u8d25\uff0c\u8fd4\u56de\u4e00\u4e2aNULL\uff0c\u800cstatic\u662f\u53ef\u4ee5\u6210\u529f\u7684 \u5176\u5b9e\u662f\u66f4\u5b89\u5168\u7684\u673a\u5236\u5bfc\u81f4dynamic\u7684\u68c0\u67e5\u66f4\u591a\uff0c\u8981\u6c42\u66f4\u9ad8 3. \u91cd\u8f7d 3.0 \u51fd\u6570\u7684\u91cd\u8f7d \u591a\u4e2a\u540c\u540d\u51fd\u6570\u7684\u53c2\u6570\u7684\u4e2a\u6570\u6216\u8005\u7c7b\u578b\u4e0d\u76f8\u540c\uff0c\u8fd9\u51e0\u4e2a\u51fd\u6570\u5c31\u6784\u6210\u91cd\u8f7d\u5173\u7cfb \u4e0d\u80fd\u4ec5\u901a\u8fc7\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u4e0d\u540c\u6765\u5f62\u6210\u51fd\u6570\u7684\u91cd\u8f7d\uff0c\u4e8b\u5b9e\u4e0a\u51fd\u6570\u91cd\u8f7d\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u5173\u7cfb\u4e0d\u5927 \u8c03\u7528\u7684\u65f6\u5019\u4f18\u5148\u8c03\u7528\u5339\u914d\u5ea6\u6700\u9ad8\u7684\u91cd\u8f7d\u51fd\u6570\uff0c\u91cd\u8f7d\u7684\u4f18\u5148\u7ea7\u662f\uff1a \u5148\u627e\u5b8c\u5168\u5339\u914d\u7684\u666e\u901a\u51fd\u6570 \u518d\u627e\u6a21\u677f\u51fd\u6570 \u518d\u627e\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u51fd\u6570 \u5f53\u6ca1\u6709\u53c2\u6570\u7c7b\u578b\u6070\u597d\u5339\u914d\u7684\u91cd\u8f7d\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c06\u53c2\u6570\u8fdb\u884c\u9690\u5f0f\u8f6c\u6362\u4e4b\u540e\u6765\u5bfb\u627e\u53ef\u4ee5\u8c03\u7528\u7684\u91cd\u8f7d\u51fd\u6570\uff0c\u6b64\u65f6\u5982\u679c\u91cd\u8f7d\u51fd\u6570\u6709\u591a\u4e2a\u7b26\u5408\u6761\u4ef6\uff0c\u5c31\u4f1a\u4ea7\u751ferror ```c++ include using namespace std; void foo(int a, int b) { cout<<1<<endl; } void foo(double a, double b) { cout<<2<<endl; } int main() { foo(1, 2); foo(1.0, 2.0); foo(1, 2.0); // \u8fd9\u4e00\u884c\u662f\u6709\u8bed\u6cd5\u9519\u8bef\u7684\uff01 } ``` 3.1 \u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d \u91cd\u8f7d\u7684\u4e00\u4e9b\u57fa\u672c\u6027\u8d28 \u5927\u90e8\u5206\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u91cd\u8f7d . :: ?: \u4e4b\u7c7b\u7684\u8fd0\u7b97\u7b26\u4e0d\u80fd\u91cd\u8f7d\uff0csizeof\uff0ctypeid\uff0cstatic\u4e4b\u7c7b\u7684 \u5173\u952e\u5b57\u4e0d\u80fd\u91cd\u8f7d \u4e0d\u80fd\u91cd\u8f7d\u4e0d\u5b58\u5728\u7684\u8fd0\u7b97\u7b26 \u5fc5\u987b\u5bf9\u4e8e\u6574\u4e2aclass\u6216\u8005enumeration type\u8fdb\u884c\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d \u91cd\u8f7d\u4e4b\u540e\u7684\u8fd0\u7b97\u7b26\u4f9d\u7136\u4fdd\u6301 \u539f\u6765\u4e00\u6837\u7684\u8fd0\u7b97\u4f18\u5148\u7ea7\u548c\u64cd\u4f5c\u6570\u7684\u4e2a\u6570 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u57fa\u672c\u8bed\u6cd5 \u5728\u7c7b\u5b9a\u4e49\u4e2d\u5bf9member function\u8fdb\u884c\u91cd\u8f7d return_type class_name::operator\u8fd0\u7b97\u7b26(parameters) \u6b64\u65f6\u53c2\u6570\u4e3a\u5bf9\u5e94\u8fd0\u7b97\u7b26\u6240\u9700\u53c2\u6570-1 \u5bf9\u5916\u90e8\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d \u8fd4\u56de\u503c\u7c7b\u578b operator\u8fd0\u7b97\u7b26(\u53c2\u6570\u8868) \u6b64\u65f6\u53c2\u6570\u4e2a\u6570\u548c\u5bf9\u5e94\u7684\u8fd0\u7b97\u7b26\u7684\u6240\u9700\u4e2a\u6570\u76f8\u540c \u5982\u679c\u8981\u8bbf\u95ee\u7c7b\u7684private\u5185\u5bb9\uff0c\u9700\u8981\u58f0\u660e\u8fd9\u4e2a\u91cd\u8f7d\u51fd\u6570\u4e3a \u53cb\u5143 \u5355\u76ee\u8fd0\u7b97\u7b26\u4e00\u822c\u58f0\u660e\u4e3a\u6210\u5458\u51fd\u6570\uff0c\u53cc\u76ee\u8fd0\u7b97\u7b26\u4e00\u822c\u4f5c\u4e3a\u5916\u90e8\u7684\u51fd\u6570 [ ] ( ) -> \u7b49\u8fd0\u7b97\u7b26\u5fc5\u987b\u4f5c\u4e3a\u6210\u5458\u51fd\u6570 \u524d\u7f00\u7684++\u548c\u540e\u7f00\u7684++ \u533a\u522b\uff1a\u540e\u7f00\u7684++\u53c2\u6570\u8868\u662f\u6709\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u7684 c++ Integer& operator++(); //prefix++ Integer operator++(int x); //postfix++ \u6bd4\u8f83\u5927\u5c0f\u5173\u7cfb\u7684\u8fd0\u7b97\u7b26\u91cd\u8f7d\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 \u4ee3\u7801\u7684\u590d\u7528 \u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u4ee3\u7801\u91cf \u81ea\u5b9a\u4e49\u7684 \u7c7b\u578b\u8f6c\u6362 \u4f8b\u5982 Rational::operator double() const {}; \u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff1a Single-argument constructors implicit type conversion operators \u907f\u514d\u9690\u5f0f\u8f6c\u6362\u7684\u65b9\u6cd5\uff1a\u628a\u590d\u5236\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3aexplicit\uff0c\u8868\u793a\u4e0d\u80fd\u8fdb\u884c\u9690\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362 3.2 \u8f93\u5165\u8f93\u51fa\u6d41\u7684\u91cd\u8f7d stream\u7684\u79cd\u7c7b Text stream \u7528ASCII\u7801\u6765\u89e3\u6790\uff0c\u5305\u62ecfiles\u548ccharacter buffers Binary stream \u4e8c\u8fdb\u5236\u6570\u636e\uff0cno translation stream\u7684\u7c7b\u578b\uff1a cin\u6807\u51c6\u8f93\u5165\uff0c\u4f7f\u7528\u6d41\u63d0\u53d6\u8fd0\u7b97\u7b26>>\uff0c\u5728C++\u6807\u51c6\u5e93\u7684istream\u4e2d\u5b9a\u4e49 cout\u6807\u51c6\u8f93\u51fa\uff0c\u4f7f\u7528\u6d41\u63d2\u5165\u8fd0\u7b97\u7b26<<\uff0c\u5728ostream\u4e2d\u5b9a\u4e49 cerr\u6807\u51c6\u9519\u8bef\u63d0\u793a(unbuffered error) clog\u6807\u51c6\u9519\u8bef\u63d0\u793a(buffered error) \u5bf9>>\u548c<<\u7684\u91cd\u8f7d Has to be a 2-argument free function istream& operator>>(istream& is, T& obj){ //special way to read in obj return is; //Return an istream& for chaining } //<<\u7684\u91cd\u8f7d\u65b9\u5f0f\u4e0e\u4e4b\u7c7b\u4f3c ostream& operator<<(ostream& os, T& obj){ return os; } \u63a7\u5236\u8f93\u51fa\u7684\u683c\u5f0f\uff0c\u4f7f\u7528\u5934\u6587\u4ef6 #include<iomanip> \u5176\u4ed6\u7684\u8f93\u5165\u8f93\u51fa\u7684\u65b9\u5f0f\uff1a int get() \u652f\u6301\u5355\u4e2a\u5b57\u7b26\u8bfb\u5165 Returns the next character in the stream Returns EOF if no characters left get(char *buf, int limit, char delim='\\n') getline(char *buf, int limit, char delim='\\n') 4. \u6a21\u677f 4.1 namespace \u547d\u540d\u7a7a\u95f4 \u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u6765\u5212\u5206\u5168\u5c40\u7684\u5404\u7c7b\u7c7b\u540d\u53ef\u4ee5\u907f\u514d\u540d\u5b57\u7684\u51b2\u7a81\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\u91cc\u5b9a\u4e49\u76f8\u540c\u7684\u53d8\u91cf\u540d \u5728\u5f15\u7528\u7684\u65f6\u5019\u52a0\u4e0a\u547d\u540d\u7a7a\u95f4\u7684\u9650\u5236\u7b26\u5c31\u53ef\u4ee5\u4e86 \u6216\u8005\u4e5f\u53ef\u4ee5\u7528 using namespace xxx \u6765\u8bf4\u660e\u7a0b\u5e8f\u4e2d\u63a5\u4e0b\u6765\u7528\u54ea\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u4e1c\u897f ```C++ namespace space1{ string name = \"randomstar\"; } namespace space2{ string name = \"ToyamaKasumi\"; } int main() { cout<<space1::name<<endl; using namespace space2; cout<<name<<endl; } ``` 4.2 template\u7f16\u7a0b \u6a21\u677f\u7f16\u7a0b\u662f\u4e00\u79cd\u590d\u7528\u4ee3\u7801\u7684\u624b\u6bb5\uff0c\u662fgeneric programming(\u6cdb\u578b\u7f16\u7a0b)\uff0c\u628a\u53d8\u91cf\u7684\u7c7b\u578b\u5f53\u4f5c\u53c2\u6570\u6765\u58f0\u660e \u51fd\u6570\u6a21\u677f\uff1a\u4f7f\u7528\u5173\u952e\u5b57template \u540e\u9762\u52a0\u82e5\u5e72\u4e2a\u53d8\u91cf\u4f5c\u4e3a\u7c7b\u578b\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\uff0c\u7c7b\u578b\u53d8\u91cf\u53ef\u4ee5\u4ee3\u66ff\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u53c2\u6570\u7c7b\u578b\u548c\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u7684\u7c7b\u578b \u51fd\u6570\u6a21\u677f\u9700\u8981 \u5b9e\u4f8b\u5316 (instantiation)\u4e4b\u540e\u518d\u4f7f\u7528\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u8c03\u7528\u5c31\u4e0d\u4f1a\u88ab\u5b9e\u4f8b\u5316 \u5b9e\u4f8b\u5316\u662f\u8bb2\u6a21\u677f\u51fd\u6570\u4e2d\u7684\u6a21\u677f\u66ff\u6362\u4e3a\u5bf9\u5e94\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u7136\u540e\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684\u51fd\u6570 \u51fd\u6570\u6a21\u677f\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u53d1\u751f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u5fc5\u987b\u8981 \u7c7b\u578b\u5b8c\u5168\u5339\u914d\u624d\u80fd\u4f7f\u7528 \u51fd\u6570\u91cd\u8f7d\u65f6\u5019\u7684 \u4f18\u5148\u7ea7 \u5148\u627e\u662f\u5426\u6709\u5b8c\u5168\u5339\u914d\u7684\u666e\u901a\u51fd\u6570 \u518d\u627e\u662f\u5426\u6709\u5b8c\u5168\u5339\u914d\u7684\u6a21\u677f\u51fd\u6570 \u518d\u627e\u6709\u6ca1\u6709\u901a\u8fc7\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570 \u7c7b\u6a21\u677f \u548c\u51fd\u6570\u6a21\u677f\u5dee\u4e0d\u591a\uff0ctemplate\u4e2d\u58f0\u660e\u7684\u65e2\u53ef\u4ee5\u662f\u7c7b\u5185\u5404\u79cd\u9700\u8981\u53d8\u91cf\u7c7b\u578b\u7684\u5730\u65b9 \u6a21\u677f\u7c7b\u4e5f\u53ef\u4ee5\u7ee7\u627f\u975e\u6a21\u677f\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u627f\u6a21\u677f\u7c7b(\u9700\u8981\u5b9e\u4f8b\u5316) \u975e\u6a21\u677f\u7c7b\u53ef\u4ee5\u7ee7\u627f\u81ea\u6a21\u677f\u7c7b(\u9700\u8981\u5b9e\u4f8b\u5316) Expression parameter \u6a21\u677f\u4e2d\u7684\u53ef\u4ee5\u58f0\u660e\u4e00\u4e9b\u5e38\u6570\uff0cclass\u548ctypename\u7684\u7c7b\u578b\u540d\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503cdefault value\uff0c\u6bd4\u5982 template<typename T = int> ```c++ template class FixedVector{ public: T& operator ; T elements[bounds]; }; template T& FixedVector ::operator[] (int i){ return elements[i]; //no error checking } //usage FixedVector v1; FixedVector v2; FixedVector v3 //default value ``` Specialization \u7279\u5316--\u7528\u4e8e\u8403\u53d6\u5668 \u5168\u7279\u5316\uff1a\u5c06\u6a21\u677f\u7c7b\u4e2d\u6240\u6709\u7684\u7c7b\u578b\u53c2\u6570\u8d4b\u4e88\u660e\u786e\u7684\u7c7b\u578b\uff0c\u5e76\u5199\u4e86\u4e00\u4e2a\u7c7b\u540d\u548c\u4e3b\u6a21\u677f\u7c7b\u540d\u76f8\u540c\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u662f\u5168\u7279\u5316\u7c7b \u5168\u7279\u5316\u4e4b\u540e\uff0c\u5df2\u7ecf\u5931\u53bb\u4e86template\u7684\u7279\u6027 ```cpp template bool compare(T x, T y) { return x>y; } // \u8fd9\u4e2a\u5c31\u662f\u5bf9\u4e0a\u9762\u5199\u7684\u6a21\u677f\u51fd\u6570\u7684\u5168\u7279\u5316 template<> bool compare(int x, int y) { return x>y; } ``` \u504f\u7279\u5316\uff1a\u53ea\u7ed9\u6a21\u677f\u7c7b\u8d4b\u4e00\u90e8\u5206\u7684\u7c7b\u578b\uff0c\u5f97\u5230\u7684\u504f\u7279\u5316\u7c7b/\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5b50\u6a21\u7248\u4f7f\u7528 \u8fd8\u4fdd\u7559\u4e86\u4e00\u90e8\u5206template\u7684\u529f\u80fd \u6a21\u677f\u7c7b\u8c03\u7528\u7684 \u4f18\u5148\u7ea7 \u5168\u7279\u5316\u7c7b>\u504f\u7279\u5316\u7c7b>\u4e3b\u7248\u672c\u7684\u6a21\u677f\u7c7b\uff08\u5c31\u662f\u76f4\u63a5\u8c03\u7528\u6a21\u677f\u7c7b\uff0c\u6700\u5e38\u89c1\u7684\u7528\u6cd5\uff09 \u6709\u9690\u5f0f\u8f6c\u6362\u7684\u4f18\u5148\u7ea7\u6bd4\u8f83\u4f4e\uff0c\u5148\u8003\u8651\u6240\u6709\u4e0d\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u6a21\u677f\uff0c\u518d\u8003\u8651\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u6a21\u677f 4.3 STL\u548c\u8fed\u4ee3\u5668 STL=Standard Template Library \u662f\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u4f7f\u7528C++STL\u53ef\u4ee5\u51cf\u5c11\u5f00\u53d1\u65f6\u95f4\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027\u548c \u9c81\u68d2\u6027 \uff0cSTL\u5305\u542b\u4e86\uff1a \u5bb9\u5668 \u8fed\u4ee3\u5668 \u51fd\u6570 STL\u5bb9\u5668\u7684\u4f7f\u7528\uff1a\u523b\u5728DNA\u91cc\uff0c\u4e0d\u9700\u8981\u6574\u7406 \u5173\u4e8emap\uff1amap\u7684key \u5fc5\u987b\u662f \u53ef\u4ee5\u6ee1\u8db3 \u53ef\u4ee5\u6392\u5e8f \u6027\u8d28\u7684\uff0c\u5982\u679c\u662f\u81ea\u5b9a\u4e49\u7684\u7c7b\u9700\u8981 \u91cd\u8f7d<\u51fd\u6570 \uff0c\u5426\u5219\u8fd9\u4e2a\u7c7b\u4e0d\u80fd\u4f5c\u4e3akey\u503c \u8fed\u4ee3\u5668\uff1a STL<parameters>::iterator xxx \u8fed\u4ee3\u5668\u662f\u4e00\u79cd\u987a\u5e8f\u8bbf\u95ee\u5bb9\u5668\u7684\u65b9\u5f0f\uff1aGeneralization of pointers \u4e24\u4e2a\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\uff1abegin( ) \u548c end( )\u5206\u522b\u8868\u793a\u5bb9\u5668\u7684 \u5934\u548c\u5c3e \u5f88\u591a\u65f6\u5019end\u5e76\u4e0d\u80fd\u8fbe\u5230\uff0c\u56e0\u6b64\u5230\u7ed3\u675f\u7684\u5224\u65ad\u6761\u4ef6\u5f80\u5f80\u662f !=stl.end() \u8fed\u4ee3\u5668\u652f\u6301\u7684\u64cd\u4f5c iter++ iter+=2 (\u4e0d\u662f\u4efb\u4f55\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u90fd\u53ef\u4ee5) *iter c++ list<int> L; list<int>::iterator li; li=L.begin(); L.erase(li); // li=L.erase(li); ++li;//error!!! \u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd \u6cdb\u5316\u7684\u6307\u9488 5. Exceptions \u5f02\u5e38\u5904\u7406 \u7528\u4e8e\u5f02\u5e38\u5904\u7406\u7684\u8bed\u6cd5 try{ } catch{ } \uff1a\u6355\u83b7throw\u629b\u51fa\u7684\u5f02\u5e38 catch (...) \u8868\u793a\u6355\u6349 \u6240\u6709\u53ef\u80fd\u7684\u5f02\u5e38 try\u62ec\u53f7\u4e2d\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u4fdd\u62a4\u4ee3\u7801 throw\u8bed\u53e5\uff1a\u629b\u51fa\u5f02\u5e38 throw exp; \u629b\u51fa\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1athrow\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u7c7b\u578b\u51b3\u5b9a\u4e86\u629b\u51fa\u7684\u7ed3\u679c\u7684\u7c7b\u578b throw; \u53ea\u6709\u5728catch\u5b50\u53e5\u4e2d\u6709\u6548\uff0c\u628a\u539f\u672c\u6355\u6349\u5230\u7684\u5f02\u5e38\u629b\u51fa \u5f02\u5e38\u5904\u7406\u7684\u6267\u884c\u8fc7\u7a0b \u7a0b\u5e8f\u6309\u7167\u6b63\u5e38\u7684\u987a\u5e8f\u6267\u884c\uff0c\u5230\u8fbetry\u8bed\u53e5\uff0c\u5f00\u59cb\u6267\u884ctry\u5185\u7684\u4fdd\u62a4\u6bb5 \u5982\u679c\u5728\u4fdd\u62a4\u6bb5\u6267\u884c\u671f\u95f4\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u90a3\u4e48\u8df3\u8fc7\u6240\u6709\u7684catch \u5982\u679c\u4fdd\u62a4\u6bb5\u7684\u6267\u884c\u671f\u95f4\u6709\u8c03\u7528\u7684\u4efb\u4f55\u51fd\u6570\u4e2d\u6709\u5f02\u5e38\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7throw\u521b\u5efa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa\uff0c\u7a0b\u5e8f\u8f6c\u5230\u5bf9\u5e94\u7684catch\u5904\u7406\u6bb5 \u9996\u5148\u8981\u6309\u987a\u5e8f\u5bfb\u627e\u5339\u914d\u7684catch\u5904\u7406\u5668\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219 terminate( ) \u4f1a\u88ab\u81ea\u52a8\u8c03\u7528\uff0c\u8be5\u51fd\u6570\u4f1a\u8c03\u7528abort\u7ec8\u6b62\u7a0b\u5e8f \u5982\u679c\u5728\u51fd\u6570\u4e2d\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u5e76\u4e14\u89e6\u53d1\u4e86terminate\uff0c\u90a3\u4e48\u7ec8\u6b62\u7684\u662f\u5f53\u524d\u51fd\u6570 \u5f02\u5e38\u7c7b\u578b\u9700\u8981\u4e25\u683c\u7684\u5339\u914d \u5982\u679c\u627e\u5230\u4e86\u5339\u914d\u7684catch\u5904\u7406\u7a0b\u5e8f\uff0c\u5e76\u4e14\u901a\u8fc7\u503c\u8fdb\u884c\u6355\u83b7\uff0c\u5219\u5176\u5f62\u53c2\u901a\u8fc7\u62f7\u8d1d\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728\u5f62\u53c2\u88ab\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u5c55\u5f00\u6808\u7684\u8fc7\u7a0b\u5f00\u59cb\uff0c\u5f00\u59cb\u5bf9\u5bf9\u5e94\u7684try\u5757\u4e2d\uff0c\u4ece\u5f00\u59cb\u5230\u5f02\u5e38\u4e22\u5f03\u5730\u70b9\u4e4b\u95f4\u521b\u5efa\u7684\u6240\u6709\u5c40\u90e8\u5bf9\u8c61\u7684\u6790\u6784 C++\u4e2d\u81ea\u5e26\u7684\u5f02\u5e38\u7684\u7ee7\u627f\u4f53\u7cfb\uff0c\u5b9a\u4e49\u5728\u5934\u6587\u4ef6 <exception> \u4e2d what\u65b9\u6cd5\u7ed9\u51fa\u4e86\u4ea7\u751f\u5f02\u5e38\u7684\u539f\u56e0\uff0c\u662f\u5f02\u5e38\u7c7b\u4e4b\u95f4\u90fd\u6709\u7684\u516c\u5171\u65b9\u6cd5\uff0c\u5df2\u7ecf\u88ab\u6240\u6709\u7684\u5b50\u5f02\u5e38\u7c7b\u91cd\u8f7d \u81ea\u5b9a\u4e49\u7684\u5f02\u5e38\u7c7b\uff1a\u9700\u8981\u7ee7\u627fexception\u7c7b \u51fd\u6570\u5b9a\u4e49\u7684\u5f02\u5e38\u58f0\u660e \u53ef\u4ee5\u5728\u51fd\u6570\u540d\u540e\u9762\u52a0 noexcept \u5173\u952e\u5b57\uff0c\u8bf4\u660e\u8be5\u51fd\u6570\u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d \u4e0d\u629b\u51fa\u4efb\u4f55\u5f02\u5e38 \uff0c\u5982\u679c\u8fd8\u662f\u4ea7\u751f\u4e86\u5f02\u5e38\uff0c\u5c31\u4f1a\u8c03\u7528 std::terminate \u7ec8\u6b62\u7a0b\u5e8f \u53ef\u4ee5\u5728\u51fd\u6570\u58f0\u660e\u4e2d\u5217\u51fa\u6240\u6709\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u6bd4\u5982 double f(int, int) throw(int); \u5982\u679c\u662fthrow()\u8868\u793a\u4e0d\u629b\u51fa\u4e00\u573a\uff0c\u5c31\u7b97\u51fd\u6570\u91cc\u6709throw\u4e5f\u4e0d\u4f1a\u6267\u884c throw\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u51fd\u6570\u6ca1\u6709\u6267\u884c\u5b8c\u6bd5\uff0c\u4f46\u662f\u5728\u51fd\u6570throw\u4e4b\u524d\u4f1a\u6267\u884c\u6240\u6709 \u5c40\u90e8\u53d8\u91cf\u7684\u6790\u6784\u51fd\u6570 \u6700\u597d\u4e0d\u8981\u5728\u6790\u6784\u51fd\u6570\u4e2d\u629b\u51fa\u5f02\u5e38 class T { T(){ cout<<\"T()\"<<endl; } ~T(){ cout<<\"~T()\"<<endl; } } void foo() { T t; throw 1; } int main() { try{ foo(); } catch(...){ cout<<\"Catched!\"<<endl; } return 0; } //\u8fd0\u884c\u7684\u7ed3\u679c\u662f T() ~T() Catched 6. Smart Pointer \u667a\u80fd\u6307\u9488 \u666e\u901a\u6307\u9488\u7ba1\u7406\u5185\u5b58\u5bb9\u6613\u9020\u6210\u5185\u5b58\u6cc4\u6f0f(\u6bd4\u5982\u7528\u5b8c\u5fd8\u8bb0\u91ca\u653e)\uff0cC++\u63d0\u4f9b\u4e86\u667a\u80fd\u6307\u9488\u7528\u4e8e\u5185\u5b58\u7684\u7ba1\u7406 \u667a\u80fd\u6307\u9488\u4f7f\u7528\u4e86\u4e00\u79cdRAII(\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316)\u6280\u672f\u5bf9\u666e\u901a\u7684\u6307\u9488\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4f7f\u5f97\u667a\u80fd\u6307\u9488\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f\u884c\u4e3a\u8868\u73b0\u5f97\u50cf\u4e00\u4e2a\u6307\u9488 \u667a\u80fd\u6307\u9488\u7684\u76f8\u5173\u5185\u5bb9\u5305\u542b\u5728\u5934\u6587\u4ef6 \u6807\u51c6\u5e93\u4e2d\u652f\u6301\u7684\u667a\u80fd\u6307\u9488\u7c7b\u578b std::unique_ptr \u53ea\u5141\u8bb8\u8fd9\u4e2a\u6307\u9488\u6765\u7ba1\u7406\u5bf9\u5e94\u7684\u8d44\u6e90\uff0c \u4e0d\u5141\u8bb8\u6307\u9488\u4e4b\u95f4\u7684\u62f7\u8d1d \uff0c\u4f46\u662f \u4e0d\u5141\u8bb8\u8fdb\u884c\u6307\u9488\u7684\u8d4b\u503c\u548c\u62f7\u8d1d \u53ef\u4ee5\u7528 move \u65b9\u6cd5\u6765\u79fb\u52a8\u6307\u9488\u7684\u6240\u6709\u6743 \uff0c\u6bd4\u5982 unique_ptr<int> p2 = move(p1); \u53ef\u4ee5\u7528 release \u65b9\u6cd5 \u6765\u91ca\u653e\u6307\u9488\u7684\u6240\u6709\u6743 ```c++ class A{ public: A(){ cout<<\"A()\"<<endl; } ~A(){ cout<<\"~A()\"<<endl; } void foo(){ cout<<\"1\"<<endl; } } int main() { { unique_ptr pa(new (A)); pa->foo(); } } ``` std::shared_ptr \u975e\u72ec\u5360\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u591a\u4e2a\u6307\u9488\u7ba1\u7406\u4e00\u4e2a\u5bf9\u8c61\u3002shared_ptr\u4f7f\u7528 \u5f15\u7528\u8ba1\u6570 \uff0c\u6bcf\u4e00\u4e2ashared_ptr\u7684\u62f7\u8d1d\u90fd\u6307\u5411\u76f8\u540c\u7684\u5185\u5b58\u3002\u6bcf\u4f7f\u7528\u4ed6\u4e00\u6b21\uff0c\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u52a01\uff0c\u6bcf\u6790\u6784\u4e00\u6b21\uff0c\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u51cf1\uff0c\u51cf\u4e3a0\u65f6\uff0c\u81ea\u52a8\u5220\u9664\u6240\u6307\u5411\u7684\u5806\u5185\u5b58\u3002shared_ptr\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u662f \u7ebf\u7a0b\u5b89\u5168 \u7684\uff0c\u4f46\u662f\u5bf9\u8c61\u7684\u8bfb\u53d6\u9700\u8981 \u52a0\u9501 \u53ef\u4ee5\u7528 use_count \u51fd\u6570\u6765\u67e5\u770b\u67d0\u4e2a\u5bf9\u8c61\u62e5\u6709\u7684\u6307\u9488\u7684\u4e2a\u6570 \u53ef\u4ee5\u7528 get \u51fd\u6570\u6765\u83b7\u53d6\u539f\u59cb\u6307\u9488 \u4e0d\u80fd\u7528\u4e00\u4e2a\u539f\u59cb\u6307\u9488\u521d\u59cb\u5316\u591a\u4e2a shared_ptr \u5426\u5219\u4f1a\u9020\u6210\u5185\u5b58\u591a\u6b21\u91ca\u653e ```cpp include include int main() { int a = 10; std::shared_ptr ptra = make_shared (a); srd::shared_prt ptrb(ptra); cout<<ptra.use_count<<endl; //\u8f93\u51fa\u7684\u7ed3\u679c\u662f2 } ``` std::weak_ptr \u662f\u6ca1\u7528\u91cd\u8f7d*\u548c->\u64cd\u4f5c\u7b26\uff0c\u6ca1\u6709\u666e\u901a\u6307\u9488\u5177\u6709\u7684\u884c\u4e3a\uff0c\u6700\u5927\u7684\u4f5c\u7528\u5728\u4e8e\u534f\u52a9\u5176\u4ed6\u6307\u9488\u7684\u5de5\u4f5c\uff0c\u67e5\u770b\u5bf9\u8c61\u4e2d\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5 weak_ptr\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2ashared_ptr\u6216\u8005weak_ptr\u6765\u8fdb\u884c\u6784\u9020\uff0c\u83b7\u53d6\u89c2\u6d4b\u6743\uff0c\u4f46\u662fweak_ptr \u4e0d\u4f1a\u9020\u6210\u6307\u9488\u5f15\u7528\u8ba1\u6570\u7684\u589e\u52a0","title":"OOP Review"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#oop-review","text":"","title":"OOP-Review"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#randomstar","text":"OOP-Review RandomStar 1. C++\u7684\u65b0\u7279\u6027 1.0 \u8f93\u5165\u8f93\u51fa\u6d41 1.1 \u53d8\u91cf\u548c\u52a8\u6001\u5185\u5b58\u5206\u914d 1.2 \u5f15\u7528 Reference 1.3 const\u7c7b\u578b 2. \u7c7b class 2.0 \u7c7b\u7684\u57fa\u672c\u6982\u5ff5 2.1 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570 2.2 static\u7c7b\u578b include 2.3 Inline Function\u5185\u8054\u51fd\u6570 2.4 \u7ee7\u627fInheritance 2.5 \u53cb\u5143 friend 2.6 \u591a\u6001\u548c\u865a\u51fd\u6570 include 2.7 \u865a\u51fd\u6570\u4f7f\u7528\u603b\u7ed3 2.8 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 2.8.1 static_cast 2.8.2 const_cast 2.8.3 reinterpret_cast 2.8.4 dynamic_cast 3. \u91cd\u8f7d 3.0 \u51fd\u6570\u7684\u91cd\u8f7d include 3.1 \u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d 3.2 \u8f93\u5165\u8f93\u51fa\u6d41\u7684\u91cd\u8f7d 4. \u6a21\u677f 4.1 namespace \u547d\u540d\u7a7a\u95f4 4.2 template\u7f16\u7a0b \u51fd\u6570\u91cd\u8f7d\u65f6\u5019\u7684\u4f18\u5148\u7ea7 4.3 STL\u548c\u8fed\u4ee3\u5668 5. Exceptions \u5f02\u5e38\u5904\u7406 6. Smart Pointer \u667a\u80fd\u6307\u9488 include include","title":"RandomStar"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#1-c","text":"","title":"1. C++\u7684\u65b0\u7279\u6027"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#10","text":"C++\u53ef\u4ee5\u4f7f\u7528\u8f93\u5165\u8f93\u51fa\u6d41 (cin, cout) \u8fdb\u884c\u8f93\u51fa\uff0c\u6bd4\u5982 cout<<\"Hello World\"; \u9700\u8981\u5305\u542b \u5934\u6587\u4ef6 #include<iostream> \u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa, \u4f7f\u7528ofstream\u548cifstream #include<iostream> #include<fstream> #include<istream> #include<string> using namespace std; int main() { string str=\"Hello World!\"; ofstream fout(\"out.txt\"); fout<<str<<endl; ifstream fin(\"out.txt\"); string str1,str2; fin>>str1>>str2; return 0; }","title":"1.0 \u8f93\u5165\u8f93\u51fa\u6d41"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#11","text":"C++\u4e2d\u7684\u53d8\u91cf\u7c7b\u578b global variable \u5168\u5c40\u53d8\u91cf\uff0c\u5b58\u50a8\u5728 \u5168\u5c40\u53d8\u91cf\u533a \u53ef\u4ee5\u5728\u4e0d\u540c\u7684cpp\u6587\u4ef6\u4e4b\u95f4\u5171\u4eab\uff0c\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57 extern \u6765\u4f7f\u7528\u522b\u7684cpp\u6587\u4ef6\u4e2d\u7684\u5168\u5c40\u53d8\u91cf static global variable \u9759\u6001\u5168\u5c40\u53d8\u91cf \uff0c\u4e0d\u80fd\u5728cpp\u6587\u4ef6\u4e4b\u95f4\u5171\u4eab local variable \u5b58\u50a8\u5728 \u6808 \u533a\u4e0a static local variable \u9759\u6001\u5c40\u90e8\u53d8\u91cf \u5b58\u50a8\u5728\u5168\u5c40\u53d8\u91cf\u533a \u5728\u521d\u6b21\u4f7f\u7528\u7684\u65f6\u5019\u521d\u59cb\u5316\uff0ckeeps its value between visit to the function allocated variable \u52a8\u6001\u5206\u914d\u7684\u53d8\u91cf \u5b58\u50a8\u5728\u5185\u5b58\u7684\u5806\u7ed3\u6784\u4e2d c++ string s=\"hello\"; string *ps=&s; (*ps).length(); ps->length(); C++\u52a8\u6001\u5185\u5b58\u5206\u914d new\u7528\u4e8e\u52a8\u6001\u5206\u914d\u5185\u5b58\u7ed9\u53d8\u91cf\uff0c\u5982 new int \uff0c new double[1000] \u4e0emalloc\u7684\u533a\u522b\uff1a malloc\u4e0d\u6267\u884c\u7c7b\u7684\u6784\u9020\u51fd\u6570 \uff0c\u800cnew\u51fa\u65b0\u7684\u5bf9\u8c61\u7684\u65f6\u5019\u4f1a\u6267\u884c\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570 new Class_Name[x] \u4f1a\u6267\u884cx\u6b21Class_Name\u7684\u6784\u9020\u51fd\u6570 \u5185\u5b58\u6cc4\u6f0f Memory Leak cpp int *p = new int; *p = 123; p = new int; \u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u4e00\u5f00\u59cb\u4e3a\u6307\u9488p\u5206\u914d\u4e86\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5e76\u8d4b\u503c\u4e86123\uff0c\u4f46\u662f\u7b2c\u4e09\u884c\u4ee3\u7801\u53c8\u4e3ap\u8d4b\u503c\u4e86\u4e00\u6bb5\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u539f\u6765\u7684\u5185\u5b58\u7a7a\u95f4\u5b58\u50a8\u4e86123\uff0c\u4f46\u662f\u8fd9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5df2\u7ecf\u6ca1\u6709\u6307\u9488\u6307\u5411\uff0c\u56e0\u6b64 \u4e0d\u80fd\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u80fd\u5220\u9664 \uff0c\u9020\u6210\u4e86\u5185\u5b58\u6cc4\u6f0f delete\u7528\u4e8e\u5220\u9664\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58 \u7528\u6cd5 delete p; delete[] p; \u548cnew\u7c7b\u4f3c\uff0cdelete\u4f1a\u6267\u884c\u6240\u5220\u9664\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u80fddelete\u6ca1\u6709\u5b9a\u4e49\u8fc7\u7684\u53d8\u91cf\uff0c\u540c\u4e00\u4e2a\u53d8\u91cf\u4e0d\u80fddelete\u4e24\u6b21 \u4e24\u4e2a\u6307\u9488p1,p2\u6307\u5411\u540c\u4e00\u4e2a\u6570\u636e\uff0c\u5982\u679cp1\u88abdelete\u4e86\uff0cp2\u4e5f\u4e0d\u80fd\u8bbf\u95ee\u539f\u672cp1\u6307\u5411\u7684\u53d8\u91cf\u7684\u503c\uff0c\u56e0\u4e3adelete\u5220\u9664\u7684\u662f\u5185\u5b58\u91cc\u7684\u6570\u636e cpp int *p1 = new int; int *p2 = new p1; *p2 = 1; delete p1; cout<<*p2<<endl; // error!!! \u6307\u5411\u540c\u4e00\u4e2a\u6570\u636e\u7684\u4e24\u4e2a\u6307\u9488\u5b9e\u9645\u4e0a\u53ea\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u540d\u800c\u5df2\uff0cdelete\u5220\u9664\u7684\u4e0d\u662f\u53d8\u91cf\u540d\u800c\u662f\u6570\u636e","title":"1.1 \u53d8\u91cf\u548c\u52a8\u6001\u5185\u5b58\u5206\u914d"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#12-reference","text":"a new type in C++\uff0c \u76f8\u5f53\u4e8e\u7ed9\u53d8\u91cf\u53d6\u4e86\u4e00\u4e2a\u522b\u540d\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e3a type &refname = name; \u5f15\u7528\u7684\u5bf9\u8c61 \u4e0d\u80fd \u662f\u8868\u8fbe\u5f0f \u5f15\u7528\u548c\u6307\u9488\u7684\u533a\u522b \u4e0d\u80fd\u5b9a\u4e49 \u7a7a\u5f15\u7528 \uff0c\u5f15\u7528\u5fc5\u987b\u8fde\u63a5\u5230\u4e00\u5757\u5408\u6cd5\u7684\u5185\u5b58 \u4e00\u65e6\u5f15\u7528\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61 \u5c31\u4e0d\u80fd\u66f4\u6539 \u5f15\u7528\u5728\u521b\u5efa\u7684\u65f6\u5019\u5fc5\u987b\u8981 \u521d\u59cb\u5316 int *f(int *x) { (*x)++; return x; } int &g(int &x) { x++; return x; } int x; int &h() { return x; } int main() { int a=0; f(&a); g(a); h()=16; //\u8fd9\u91cc\u5168\u5c40\u53d8\u91cfx\u88ab\u8d4b\u503c\u4e3a16 }","title":"1.2 \u5f15\u7528 Reference"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#13-const","text":"\u7528\u4e8e\u5b9a\u4e49\u5e38\u91cf\u7c7b\u578b\uff0c\u5982 const int x=12345; , const\u7c7b\u578b\u7684\u53d8\u91cf\u5728\u521d\u59cb\u5316\u4e4b\u540e\u5c31\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff0cconst\u578b\u53d8\u91cf\u4e0d\u80fd\u5728\u8fde\u63a5\u5355\u5143\u5916\u4f7f\u7528 Run-time constants \u8fd0\u884c\u65f6\u5e38\u91cf \u6570\u7ec4\u7684\u5b9a\u4e49\u65f6\u7684\u957f\u5ea6\u503c\u5fc5\u987b\u5728 \u7f16\u8bd1\u671f \u5c31\u5df2\u77e5\uff0c\u6240\u4ee5\u5b8f\u5b9a\u4e49\u4e2d\u7684\u5e38\u6570\u53ef\u4ee5\u4f5c\u4e3a\u6570\u7ec4\u957f\u5ea6\uff0c\u800c int n; int a[n] \u8fd9\u6837\u7684\u8bed\u6cd5\u5c31\u662f\u9519\u8bef\u7684\uff0c\u4e0d\u8fc7\u73b0\u5728\u4f3c\u4e4e\u6709\u4e86\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u5728Dev-cpp\u4e2d\u8fd9\u6837\u5199\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1 ```c++ const int size=100; int a[size];//OK int x; cin>>x; const int size=x; int a[size];//Error!!! ``` const\u548c\u6307\u9488pointer \u5e38\u91cf\u6307\u9488\uff1a char * const p = \"abc\"; \u4e0d\u80fd\u8d4b\u4e88\u8fd9\u4e2a\u6307\u9488\u65b0\u7684\u5730\u5740 \uff0c\u76f8\u5f53\u4e8e\u5730\u5740\u662fconst\u7c7b\u578b\uff0c\u4f46\u662fp\u6307\u5411\u7684\u503c\u53ef\u4ee5\u6539\u53d8 const char* p = \"abc\"; \u8fd9\u79cd\u60c5\u51b5\u4e0bp\u6307\u5411\u7684\u662f\u4e00\u4e2aconst char\u7c7b\u578b\u7684\u503c\uff0c\u56e0\u6b64 \u6307\u5411\u7684\u503c\u4e0d\u80fd\u6539\u53d8 \uff0c\u800c\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u53ef\u4ee5\u6539\u53d8 //\u7b2c\u4e00\u79cd\u60c5\u51b5\u662fq\u662f\u4e00\u4e2aconst\u6307\u9488\uff0c\u4f46\u662fq\u6307\u5411\u7684\u4e1c\u897f\u53ef\u4ee5\u53d8 char * const q =\"abc\"; *q='c'; // OK q++; // Error! //\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c(*q)\u662f\u4e00\u4e2aconst\u7684\u503c\uff0c\u6b64\u65f6q\u6240\u6307\u5411\u7684\u503c\u4e0d\u80fd\u53d8 const char *p = \"abc\"; *p='c';//error! //\u533a\u522b\u8fd9\u4e09\u79cd\u4e1c\u897f string p1=\"zyc\"; const string *p=&p1; string const* p=&p1; string *const p=&p1; \u4e0d\u80fd\u5c06const\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\u7ed9\u5bf9\u5e94\u7684\u6307\u9488\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u5e26\u6765const\u53d8\u91cf\u7684\u6539\u53d8\uff0c\u8fd9\u662fconst\u7c7b\u578b\u7684\u53d8\u91cf\u4e0d\u5141\u8bb8\u7684 \u53ef\u4ee5\u628a\u975econst\u7c7b\u578b\u7684\u503c\u8d4b\u7ed9\u5bf9\u5e94\u7684const\u578b\u53d8\u91cf\uff0c\u51fd\u6570\u4e2d\u53ef\u4ee5\u5c06\u53c2\u6570\u8bbe\u7f6e\u4e3aconst\u7c7b\u578b\u8868\u660e\u8fd9\u4e9b\u53c2\u6570\u5728\u51fd\u6570\u4e2d\u4e0d\u80fd\u88ab\u4fee\u6539\u539f\u672c\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u5c06\u8fd4\u56de\u503c\u7c7b\u578b\u8bbe\u7f6e\u4e3aconst\u8868\u793a\u8fd4\u56de\u503c\u4e0d\u80fd\u88ab\u4fee\u6539 #include<iostream> using namespace std; struct student{ int id; }; void foo(const student *ps) { //*ps could not be changed in the function cout<<ps->id<<endl; cout<<(*ps).id<<endl; } void bar(const student &s) { //s could not be changed in the function cout<<s.id<<endl; } int main() { student s; s.id=2; foo(&s); return 0; } char * s=\"Hello World!\"; \u5b9e\u8d28\u4e0a\u662f const char * \u7c7b\u578b\uff0c\u4e0d\u8981\u53bb\u4fee\u6539s\u4e2d\u7684\u5185\u5bb9\uff0c\u8fd9\u662f\u4e00\u79cd \u672a\u5b9a\u4e49\u7684\u884c\u4e3a (undefined behavior)\uff0c\u5e94\u8be5\u5199\u6210 char s[]=\"Hello World!\"; #include<iostream> using namespace std; int main() { const char *s1=\"Hello World\"; const char *s2=\"Hello World\"; cout<<(void*)s1<<endl; cout<<(void*)s2<<endl; return 0; //\u8f93\u51fa\u7684\u7ed3\u679c\u662fs1\u548cs2\u7684\u5730\u5740\uff0c\u4ed6\u4eec\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684 }","title":"1.3 const\u7c7b\u578b"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#2-class","text":"","title":"2. \u7c7b class"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#20","text":"C++\u4e2d\u7684\u5bf9\u8c61=\u5c5e\u6027+\u64cd\u4f5c objects=attributes+operations\uff0c\u5bf9\u4e8e\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u800c\u8a00\uff0c\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4efb\u4f55\u5bf9\u8c61\u90fd\u6709\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u7a0b\u5e8f\u5c31\u662f\u4e00\u7cfb\u5217\u5bf9\u8c61\u4e92\u76f8\u4e4b\u95f4\u4f20\u9012\u4fe1\u606f\u6765\u5b8c\u6210\u529f\u80fd C++\u7684\u7c7b\u5305\u542b\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570 C++\u4e2dclass\u7684\u5b9a\u4e49\uff0c\u5177\u4f53\u5b9e\u73b0\u548c\u8c03\u7528\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u6587\u4ef6 \u5934\u6587\u4ef6header\u662f\u5177\u4f53\u5b9e\u73b0\u548c\u8c03\u7528\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u6bcf\u4e2a\u7c7b\u7684\u5b9a\u4e49\u9700\u8981\u75281\u4e2a\u5934\u6587\u4ef6 :: \u64cd\u4f5c\u7b26\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u7c7b\u4e2d\u7684\u5185\u5bb9","title":"2.0 \u7c7b\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#21","text":"constructor \u6784\u9020\u51fd\u6570 \u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u540d\u548c\u7c7b\u7684\u540d\u5b57\u76f8\u540c\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e9b\u53c2\u6570\u7528\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5728\u7c7b\u7684\u5bf9\u8c61\u88ab\u5b9a\u4e49\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570 default constructor \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u9700\u8981\u53c2\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7684\u6784\u9020\u51fd\u6570 \u521d\u59cb\u5316\u5217\u8868\uff1a\u5728\u51fd\u6570\u7b7e\u540d\u540e\u9762\uff0c\u5927\u62ec\u53f7\u4e4b\u524d\u76f4\u63a5\u5bf9\u7c7b\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c const\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316 \u53ea\u80fd\u7528\u521d\u59cb\u5316\u5217\u8868 \u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\u521d\u59cb\u5316\u9636\u6bb5\u548c\u51fd\u6570\u6267\u884c\u9636\u6bb5\uff0c\u4f1a\u5148\u6267\u884c\u521d\u59cb\u5316\u5217\u8868\u91cc\u7684\u8d4b\u503c\uff0c\u5728\u8fdb\u5165\u51fd\u6570\u4e3b\u4f53\u8fdb\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c Destructor \u6790\u6784\u51fd\u6570 \u6790\u6784\u51fd\u6570\u7684\u51fd\u6570\u540d\u662f\u7c7b\u540d\u524d\u9762\u52a0\u4e00\u4e2a~\uff0c\u6790\u6784\u51fd\u6570\u4e0d\u9700\u8981\u53c2\u6570\uff0c\u5728\u7c7b\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u7684\u65f6\u5019\u4f1a \u88ab\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528 function overloading \u51fd\u6570\u91cd\u8f7d\uff1a \u51fd\u6570\u540d\u76f8\u540c\u800c\u53c2\u6570\u7684\u4e2a\u6570\u548c\u7c7b\u578b\u4e0d\u540c\u7684\u51e0\u4e2a\u51fd\u6570\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u4e0d\u540c\u7684\u6784\u9020\u51fd\u6570\u6765\u89e3\u51b3\u4e0d\u540c\u60c5\u51b5\u4e0b\u7684\u6784\u9020 default value\uff1a\u7f3a\u7701\u503c\uff0c\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u8868\u4e2d\u76f4\u63a5\u58f0\u660e\u4e00\u4e9b\u53c2\u6570\u7684\u503c\uff0c\u4f46\u662f\u5fc5\u987b\u8981\u4ece\u53f3\u5f80\u5de6\uff0c\u5f53\u4f20\u5165\u7684\u53c2\u6570\u7f3a\u7701\u65f6\u51fd\u6570\u9ed8\u8ba4\u5c06\u5df2\u7ecf\u58f0\u660e\u7684\u503c\u4f5c\u4e3a\u53c2\u6570\u7684\u503c constant object\u5e38\u91cf\u5bf9\u8c61 \u9700\u8981\u52a0const\u58f0\u660e\uff0c\u5728\u58f0\u660e\u4e4b\u540e\u5c31\u4e0d\u80fd\u6539\u53d8\u8fd9\u4e2a\u5bf9\u8c61\u5185\u90e8\u53d8\u91cf\u7684\u503c \u4f1a\u6709\u4e00\u4e9b\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u6b63\u5e38\u4f7f\u7528 \u5728\u6210\u5458\u51fd\u6570\u53c2\u6570\u8868\u540e\u9762\u52a0const\u53ef\u4ee5\u6210\u4e3aconst\u578b\u6210\u5458\u51fd\u6570\uff0cconst\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u503c const\u58f0\u660e\u5199\u5728\u51fd\u6570\u7684\u5f00\u5934\u8868\u793a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u662fconst const\u58f0\u660e\u5199\u5728\u51fd\u6570\u7b7e\u540d\u7684\u672b\u5c3e\u8868\u793a\u8fd9\u4e2a\u6210\u5458\u51fd\u6570 \u4e0d\u80fd\u4fee\u6539\u7c7b\u4e2d\u5b9a\u4e49\u7684\u6210\u5458\u53d8\u91cf \uff0c\u88ab\u79f0\u4e3a \u5e38\u6210\u5458\u51fd\u6570 \u4f46\u662f\u5982\u679c\u662f\u6210\u5458\u53d8\u91cf\u4e2d\u6709\u6307\u9488\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u88ab\u4fee\u6539 const\u7c7b\u578b\u7684\u51fd\u6570\u548c\u975econst\u7c7b\u578b\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a ```c++ class A { public: void foo() { cout << \"A::foo();\" << endl; } void foo() const { cout << \"A::foo() const;\" << endl; } }; int main() { A a; a.foo(); //\u8bbf\u95ee\u7684\u662f\u975econst\u7c7b\u578b\u7684foo const A aa; aa.foo(); //\u8bbf\u95ee\u7684\u662fconst\u7c7b\u578b\u7684foo return 0; } ``` const\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\u7684\u4f7f\u7528\u89c4\u5219\u5982\u4e0b\uff1a non-const\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8c03\u7528const\u7c7b\u578b\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\uff0c\u800cconst\u7c7b\u578b\u53ef\u4ee5\u8bbf\u95ee const\u7c7b\u578b\u51fd\u6570\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u6210\u5458\u53d8\u91cf\u7684\u503c \u6784\u6210\u91cd\u8f7d\u5173\u7cfb\u7684\u65f6\u5019\uff0cconst\u7c7b\u578b\u7684\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u8c03\u7528non-const\uff0c\u800c\u975econst\u7c7b\u578b\u7684\u5bf9\u8c61 \u4f18\u5148\u8c03\u7528non-const\u7684\u6210\u5458\u51fd\u6570 \uff0c\u5982\u679c\u6ca1\u6709non-const\u518d\u8c03\u7528const\u7c7b\u578b\u7684 copy constructor\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u628a\u4e00\u4e2a\u5bf9\u8c61\u76f4\u63a5\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e00\u822c\u7684\u5f62\u5f0f\u4e3a class_name(const class_name & copy_class_var )`\uff0c\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8c61\u4e4b\u95f4\u7684\u4e92\u76f8\u8d4b\u503c \u5982\u679c\u5b9a\u4e49\u53d8\u91cf\u65f6\u76f4\u63a5\u7ed9\u53d8\u91cf\u7528\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\uff0c\u8c03\u7528\u7684\u5c31\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u662f\u5b9a\u4e49\u4e4b\u540e\u518d\u8d4b\u503c\uff0c\u5c31\u662f\u8c03\u7528\u4e86\u91cd\u8f7d\u4e4b\u540e\u7684\u7b49\u53f7\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e00\u6bb5\u4ee3\u7801 ```c++ class A { A() {} A(const A& a) {} A& operator=(const A& a) {} }; int main() { A a; A b = a; //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 A c; c = a; //\u8c03\u7528\u91cd\u8f7d\u4e4b\u540e\u7684\u7b49\u53f7 } `` - C++\u4e2d\u7684\u62f7\u8d1d\uff1a**\u6d45\u62f7\u8d1d**\u548c**\u6df1\u62f7\u8d1d** - \u6d45\u62f7\u8d1d\uff1a\u5728\u539f\u6765\u5df2\u6709\u7684\u5185\u5b58\u4e2d\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u6307\u9488\u6307\u5411\u8fd9\u4e00\u6bb5\u5185\u5b58 - \u6bd4\u5982 string s1=\"zyc\"; string s2(s1);` \u5c31\u662f\u4e00\u79cd\u6d45\u62f7\u8d1d - \u6df1\u62f7\u8d1d\uff1a\u5206\u914d\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u590d\u5236\u5bf9\u5e94\u7684\u503c\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u6307\u9488\u6307\u5411\u8fd9\u4e00\u5757\u5185\u5b58 - \u7f3a\u7701\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u8fdb\u884c\u7684\u90fd\u662f\u6d45\u62f7\u8d1d - \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u533a\u522b - \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u5728\u5bf9\u8c61\u88ab\u521b\u5efa\u7684\u65f6\u5019\u8c03\u7528\u7684\u3001 - \u8d4b\u503c\u8fd0\u7b97\u7b26\u53ea\u80fd\u4f7f\u7528\u4e8e\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u8d4b\u503c\u4e4b\u524d\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5df2\u7ecf\u88ab\u67d0\u4e2a\u6784\u9020\u51fd\u6570\u6784\u9020\u51fa\u6765\u4e86 - \u4f8b\u5982 ```c++ #include #include using namespace std; struct Person{ char name; Person(const char s){ name=new char[strlen(s)+1]; strcpy(name,s); } ~Person(){ delete[] name; } } //\u4e0d\u9700\u8981\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u4e00\u79cd\u65b9\u5f0f Person bar(const char *s) { cout<<\"in bar()\"<<endl; return Person(s); } int main() { Person p1(\"Trump\"); Person p2=p1; cout<<(void )p1.name<<endl; cout<<(void )p2.name<<endl; //\u4f1a\u53d1\u73b0\u8f93\u51fa\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u8bf4\u660e\u6307\u9488\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e5f\u8fdb\u884c\u4e86copy,\u82e5\u8981\u907f\u514d\u5219\u5e94\u8be5\u81ea\u5df1\u7f16\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570 return 0; } ```","title":"2.1 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#22-static","text":"\u7c7b\u4e2d\u7684\u6210\u5458(\u53d8\u91cf\u548c\u51fd\u6570)\u5206\u4e3a\u4e24\u79cd \u9759\u6001\u6210\u5458\uff1a\u5728\u7c7b\u5185\u6240\u6709\u5bf9\u8c61\u4e4b\u95f4\u5171\u4eab \u5b9e\u4f8b\u6210\u5458\uff1a\u53ea\u80fd\u5728\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u4e2d\u8c03\u7528 \u9759\u6001\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u5b9e\u4f8b\u6210\u5458 \u4e4b\u524d\u5df2\u7ecf\u8bb2\u5230\u4e86static\u7c7b\u578b\u7684\u5168\u5c40\u53d8\u91cf\u53ea\u5728\u5f53\u524d\u6587\u4ef6\u6709\u6548\uff0c\u4e0d\u80fd\u901a\u8fc7extern\u8de8\u6587\u4ef6\u8c03\u7528\uff0c\u800c\u51fd\u6570\u4e2d\u7684static\u7c7b\u578b\u7684\u53d8\u91cf\u5728 \u7b2c\u4e00\u6b21\u8c03\u7528 \u7684\u65f6\u5019\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u4e4b\u540e\u518d\u8c03\u7528\u8be5\u51fd\u6570\u8fd9\u4e2astatic\u7c7b\u578b\u7684\u53d8\u91cf \u4fdd\u6301\u4e0a\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c #include<iostream> using namespace std; class A{ piblic: A() {cout<<\"A::A()\"<<endl;} ~A(){cout<<\"A::~A()\"<<endl;} } void f(int n) { if(x>10) static A a; cout<<\"f()\"<<endl; } int main() { cout<<\"start\"<<endl; f(1); f(11); return 0; } //\u6b64\u65f6\u53ea\u6709\u5728\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6a\u624d\u4f1a\u88ab\u6784\u9020 //\u65e0\u8bba\u4ec0\u4e48\u60c5\u51b5\uff0cA\u7684\u6784\u9020\u548c\u6790\u6784\u51fd\u6570\u53ea\u4f1a\u88ab\u6267\u884c\u4e00\u6b21 \u7c7b\u4e2d\u7684static \u7c7b\u4e2d\u5b9a\u4e49\u7684static\u7c7b\u578b\u7684\u53d8\u91cf\u662f \u9759\u6001\u6210\u5458\u53d8\u91cf \uff0c\u5176\u503c\u4f1a\u5728\u8fd9\u4e2a\u7c7b\u7684 \u6240\u6709\u6210\u5458\u4e4b\u95f4\u5171\u4eab non-const\u7c7b\u578b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u7c7b\u7684\u5916\u9762\u8fdb\u884c\u5b9a\u4e49\uff0c\u6bd4\u5982\uff1a ```c++","title":"2.2 static\u7c7b\u578b"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#include","text":"using namespace std; class A { public: static int count; A() { A::count++; } }; int A::count = 0; // \u5728\u7c7b\u7684\u5916\u90e8\u8d4b\u503c\u7684\u65f6\u5019\u4e0d\u9700\u8981\u8bf4\u660estatic\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u660eA::\uff0c\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf int main() { A* array = new A[100]; cout<<A::count<<endl; } ``` const\u7c7b\u578b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u4f5c\u4e3a\u7c7b\u5185\u5171\u4eab\u7684\u4e00\u4e2a\u5e38\u91cf\uff0c\u4e5f\u9700\u8981\u5728\u7c7b\u7684\u5916\u90e8\u8fdb\u884c\u5b9a\u4e49\uff0c\u6b64\u65f6\u8981\u5199\u51fa\u5173\u952e\u5b57const\uff0c\u5e76\u4e14\u8fd9\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u662f\u4e0d\u80fd\u88ab\u6539\u53d8\u7684 \u9759\u6001\u6210\u5458\u51fd\u6570\uff1a \u53ef\u4ee5\u8bbf\u95ee\u7c7b\u5b9a\u4e49\u4e2d\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf \uff0c\u4f46\u662f \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u666e\u901a\u7684 \u6210\u5458\u53d8\u91cf \u9700\u8981\u5728\u51fd\u6570\u5b9a\u4e49\u4e4b\u524d\u52a0static\u5173\u952e\u5b57","title":"include "},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#23-inline-function","text":"\u9700\u8981\u5728\u51fd\u6570\u540d\u524d\u9762\u52a0\u5173\u952e\u5b57 inline \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u671f\u4f1a\u88ab\u7f16\u8bd1\u5668\u5728\u8c03\u7528\u5904\u76f4\u63a5\u6269\u5c55\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u51cf\u5c11\u8fd0\u884c\u65f6\u8c03\u7528\u51fd\u6570\u7684cost \u5185\u8054\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u51fd\u6570\u4e3b\u4f53\u90e8\u5206\u90fd\u5e94\u8be5\u5199\u5728 \u5934\u6587\u4ef6 \u4e2d \u672c\u8d28\u662f\u7a7a\u95f4\u6362\u65f6\u95f4 class\u4e2d\u7684\u51fd\u6570\u90fd\u662f \u9ed8\u8ba4inline \u7684 an inline function is expanded in place, like a preprocessormacro, so the overhead of the function call is eliminated,\u4e0d\u9700\u8981\u51fd\u6570\u8c03\u7528\u4ea7\u751f\u7684\u5f00\u9500\uff0c\u7531\u7f16\u8bd1\u5668 \u76f4\u63a5\u4f18\u5316 \uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u4f7f\u5f97\u9700\u8981\u7f16\u8bd1\u7684\u4ee3\u7801\u91cf\u589e\u5927(\u867d\u7136\u5199\u7684\u4eba\u662f\u770b\u4e0d\u51fa\u6765\u7684)\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u51cf\u5c0f\u51fd\u6570\u8c03\u7528\u65f6\u7684\u5f00\u9500\uff0c\u4e00\u822c\u5728\u51fd\u6570\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528","title":"2.3 Inline Function\u5185\u8054\u51fd\u6570"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#24-inheritance","text":"composition \u7ec4\u5408\uff1a\u628a\u5176\u4ed6\u7684\u7c7b\u4f5c\u4e3a\u81ea\u5df1\u7684\u6210\u5458\u53d8\u91cf Inheritance\uff1a\u4ece\u57fa\u7c7b\u4e2d\u7ee7\u627f\u751f\u6210\u6d3e\u751f\u7c7b \u6d3e\u751f\u7c7b \u7ee7\u627f\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570 \u6d3e\u751f\u7c7b\u4e2d \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee \u57fa\u7c7b\u7684private\u7684\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\u548c\u53d8\u91cf \u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d \u8c03\u7528 \u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u6d3e\u751f\u7c7b\u5728\u88ab\u6784\u9020\u7684\u65f6\u5019\u4f1a \u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570 \uff0c\u518d\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u7684\u65f6\u5019\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570 \u5982\u679c\u6d3e\u751f\u7c7b\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0c\u5219\u76f4\u63a5\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u5982\u679c\u6d3e\u751f\u7c7b\u5b9a\u4e49\u4e86\u6784\u9020\u51fd\u6570\uff0c\u5728\u6267\u884c\u4e4b\u524d\u4f1a\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6ca1\u6709\u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5219\u4f1a\u9009\u62e9\u8c03\u7528\u57fa\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570 ```c++ class A { public: int i; A(int ii = 0): i(ii) { cout<<\"A(): \"<<i<<endl; } }; class B: public A { public: int i; A a; B(int ii = 0): i(ii) { cout<<\"B(): \"<<i<<endl; } }; int main() { B b(100); return 0; } ``` \u5f53\u7ee7\u627f\u548c\u7ec4\u5408\u4e24\u79cd\u60c5\u51b5\u540c\u65f6\u51fa\u73b0\u65f6\uff0c\u5148\u6784\u9020\u57fa\u7c7b\uff0c\u518d\u6784\u9020\u6d3e\u751f\u7c7b\u4e2d\u7ec4\u5408\u7684\u5176\u4ed6\u7c7b\uff0c\u518d\u6784\u9020\u6d3e\u751f\u7c7b\uff0c\u6790\u6784\u7684\u65f6\u5019\u7c7b\u4f3c Base class is always constructed first \u5c31\u7b97\u7ec4\u5408\u7684\u7c7b\u5728 \u521d\u59cb\u5316\u5217\u8868\u6216\u8005\u6784\u9020\u51fd\u6570\u4e2d\u6ca1\u6709\u8c03\u7528 \u6784\u9020\u51fd\u6570\uff0cC++\u7f16\u8bd1\u5668\u4e5f\u4f1a\u81ea\u52a8\u8c03\u7528\u8fd9\u4e2a\u7c7b\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570 \u6d3e\u751f\u7c7b\u4e2d\u53ef\u4ee5\u5bf9\u57fa\u7c7b\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d\uff0c\u6b64\u65f6\u5982\u679c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u6309\u7167\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u6267\u884c \u4ecd\u7136\u8c03\u7528\u57fa\u7c7b\u7684\u65b9\u6cd5 object.Base::function() class\u548cstruct\u7684\u533a\u522b\uff1aclass\u4e2d\u7684\u53d8\u91cf\u548c\u51fd\u6570 \u9ed8\u8ba4\u4e3aprivate \uff0cstruct\u4e2d\u7684\u51fd\u6570\u9ed8\u8ba4\u4e3apublic \u8bbf\u95ee\u63a7\u5236 public\uff1a\u6240\u6709\u60c5\u51b5\u4e0b\u53ef\u89c1 protected\uff1a\u53ef\u4ee5\u88ab\u81ea\u5df1/\u6d3e\u751f\u7c7b\u548c\u53cb\u5143\u51fd\u6570\u8bbf\u95ee private\uff1a\u5bf9\u4e8e\u81ea\u5df1\u548c\u53cb\u5143\u51fd\u6570\u53ef\u89c1 \u7ee7\u627f\u7684\u79cd\u7c7b\uff1apublic\uff0cprivate\uff0cprotected\u7ee7\u627f\uff0c\u7ee7\u627f\u4e4b\u540e\u7684\u57fa\u7c7b\u53d8\u91cf\u7684\u8bbf\u95ee\u63a7\u5236\u53d6\u539f\u672c\u7c7b\u578b\u548c\u7ee7\u627f\u7c7b\u578b\u4e2d\u8f83\u4e25\u683c\u7684 \u53ef\u4ee5\u901a\u8fc7 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u628a\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8f6c\u5316\u4e3a\u57fa\u7c7b\u7684\u5bf9\u8c61","title":"2.4 \u7ee7\u627fInheritance"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#25-friend","text":"\u53cb\u5143\u51fd\u6570 \u5728\u7c7b\u4e2d\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u51fd\u6570\u6216\u8005\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a friend \u53ef\u4ee5\u4f7f\u8fd9\u4e9b\u51fd\u6570\u62e5\u6709\u8bbf\u95ee\u7c7b\u5185private\u548cprotected\u7c7b\u578b\u7684\u53d8\u91cf\u548c\u51fd\u6570\u7684\u6743\u9650 \u53cb\u5143\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u88ab\u79f0\u4e3a\u662f\u53cb\u5143\u7c7b\uff0c\u6574\u4e2a\u7c7b\u548c\u6240\u6709\u7684\u6210\u5458\u90fd\u662f\u53cb\u5143 \u53cb\u5143\u51fd\u6570\u672c\u8eab\u4e0d\u662f\u90a3\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u51fd\u6570\u7b7e\u540d\u91cc\u4e0d\u9700\u8981 className:: \u6765\u8868\u793a\u662f\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u76f4\u63a5\u4f5c\u4e3a\u666e\u901a\u51fd\u6570\u5373\u53ef ```c++ class A { private: int val; public: A(int value): val(value) { cout<<\"A()\"<<endl; } friend void showValue(A a); }; void showValue(A a) { cout<<a.val<<endl; } ```","title":"2.5 \u53cb\u5143 friend"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#26","text":"\u591a\u6001 Polymorphism \u540c\u4e00\u6bb5\u4ee3\u7801\u53ef\u4ee5\u4ea7\u751f\u4e0d\u540c\u6548\u679c \u5bf9\u4e8e\u7ee7\u627f\u4f53\u7cfb\u4e2d\u7684\u67d0\u4e00\u7cfb\u5217\u540c\u540d\u51fd\u6570\uff0c\u4e0d\u540c\u7684\u7c7b\u578b\u4f1a\u8c03\u7528\u4e0d\u7528\u7684\u51fd\u6570 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4e4b\u95f4\u6709\u51fd\u6570\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u4f9d\u7136\u4f1a\u6839\u636e\u53d8\u91cf\u7c7b\u578b\u6765\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u6bd4\u5982\uff1a ```c++","title":"2.6 \u591a\u6001\u548c\u865a\u51fd\u6570"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#include_1","text":"using namespace std; class A{ public: virtual void foo() { cout<<1<<endl; } }; class B: public A{ public: virtual void foo() { cout<<2<<endl; } }; int main() { A a; B b; a.foo(); b.foo(); return 0; } ``` \u6b64\u65f6\u8fd0\u884c\u7684\u7ed3\u679c\u662f1\u548c2\uff0c\u5373A\u578b\u7684\u53d8\u91cf\u7684foo\u51fd\u6570\u662f\u57fa\u7c7b\u4e2d\u7684\uff0cB\u7c7b\u578b\u7684\u53d8\u91cf\u7684foo\u51fd\u6570\u662f\u6d3e\u751f\u7c7b\u4e2d\u7684 \u9759\u6001\u94fe\u63a5 \u51fd\u6570\u7684\u8c03\u7528\u5728\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u4e4b\u524d\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86 \u5bf9\u4e8e\u50cf\u4e0b\u9762\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u57fa\u7c7b\u7684\u6307\u9488(\u5f15\u7528)\u6307\u5411\u6d3e\u751f\u7c7b\uff0c\u5e76\u4e14\u8c03\u7528\u4e86\u57fa\u7c7b\u4e2d\u4e5f\u5b58\u5728\u7684\u540c\u540d\u51fd\u6570\uff0c\u6700\u7ec8\u8c03\u7528\u7684\u90fd\u662f\u57fa\u7c7b\u7684\u540c\u540d\u51fd\u6570 ```cpp class Shape { protected: int width, height; public: Shape( int a=0, int b=0) { width = a; height = b; } int area() { cout << \"Parent class area :\" <<endl; return 0; } }; class Rectangle: public Shape{ public: Rectangle( int a=0, int b=0):Shape(a, b) { } int area () { cout << \"Rectangle class area :\" <<endl; return (width * height); } }; class Triangle: public Shape{ public: Triangle( int a=0, int b=0):Shape(a, b) { } int area () { cout << \"Triangle class area :\" <<endl; return (width * height / 2); } }; int main( ) { Shape *shape; Rectangle rec(10,7); Triangle tri(10,5); shape = &rec; shape->area(); shape = &tri; shape->area(); return 0; } ``` \u865a\u51fd\u6570 Virtual Function \u4e00\u79cd\u7528\u4e8e \u5b9e\u73b0\u591a\u6001 \u7684\u673a\u5236\uff0c\u6838\u5fc3\u7406\u5ff5\u662f\u901a\u8fc7\u57fa\u7c7b\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5b9a\u4e49\u7684\u51fd\u6570 \u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a \u52a8\u6001 \u94fe\u63a5 \u7528\u4e8e\u533a\u5206\u6d3e\u751f\u7c7b\u4e2d\u548c\u57fa\u7c7b\u540c\u540d\u7684\u65b9\u6cd5\u51fd\u6570\uff0c\u9700\u8981\u5c06 \u57fa\u7c7b \u7684\u6210\u5458\u51fd\u6570\u7c7b\u578b\u58f0\u660e\u4e3avirtual \u57fa\u7c7b\u4e2d\u7684 \u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u4e3a\u865a\u51fd\u6570 \uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u5bf9\u8c61\u91ca\u653e\u9519\u8bef \u7eaf\u865a\u51fd\u6570\uff1a virtual int func() = 0; \u8868\u660e\u8be5\u51fd\u6570\u6ca1\u6709\u4e3b\u4f53\uff0c\u57fa\u7c7b\u4e2d\u6ca1\u6709\u7ed9\u51fa\u6709\u610f\u4e49\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u9700\u8981\u5728\u6d3e\u751f\u7c7b\u4e2d\u8fdb\u884c\u6269\u5c55 override\u8bed\u6cd5\uff1a\u6d3e\u751f\u7c7b\u4e2d\u53ef\u4ee5\u7528override\u5173\u952e\u5b57\u6765\u58f0\u660e\uff0c\u8868\u793a\u5bf9\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u91cd\u8f7d \u865a\u51fd\u6570\u9700\u8981\u501f\u52a9\u6307\u9488\u548c\u5f15\u7528\u8fbe\u5230\u591a\u6001\u7684\u6548\u679c \u5982\u679c\u57fa\u7c7b\u6307\u9488/\u5f15\u7528 \u6307\u5411\u57fa\u7c7b \uff0c\u90a3\u5c31\u6b63\u5e38\u8c03\u7528\u57fa\u7c7b\u7684\u76f8\u5173\u6210\u5458\u51fd\u6570 \u5982\u679c\u57fa\u7c7b\u6307\u9488 \u6307\u5411\u6d3e\u751f\u7c7b \uff0c\u5219\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570 \u6d3e\u751f\u7c7b\u6307\u9488 \u4e0d\u80fd \u6307\u5411\u57fa\u7c7b ```c++ class A{ public: virtual void foo(){ cout<<\"A\"<<endl; } }; class B{ public: virtual void foo(){ cout<<\"B\"<<endl; } } int main() { A *a=new B(); a->foo(); //\u7ed3\u679c\u4e3aB return 0; } ``` \u865a\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a \u865a\u51fd\u6570\u8868 virtual table \u6bcf\u4e00\u4e2a\u6709\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u4f1a\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u8be5\u7c7b\u7684\u4efb\u4f55\u5bf9\u8c61\u4e2d\u90fd\u5b58\u653e\u7740\u865a\u51fd\u6570\u8868\u7684\u6307\u9488\uff0c\u865a\u51fd\u6570\u8868\u4e2d \u5217\u51fa\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740 \u865a\u51fd\u6570\u8868\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u91cc\u9762\u5b58\u653e\u4e86\u4e00\u7cfb\u5217\u865a\u51fd\u6570\u7684\u6307\u9488 \u865a\u51fd\u6570\u7684\u8c03\u7528\u9700\u8981\u7ecf\u8fc7\u865a\u51fd\u6570\u8868\u7684\u67e5\u8be2\uff0c\u975e\u865a\u51fd\u6570\u7684\u8c03\u7528\u4e0d\u9700\u8981\u7ecf\u8fc7\u865a\u51fd\u6570\u8868 \u865a\u51fd\u6570\u8868\u5728\u4ee3\u7801\u7684\u7f16\u8bd1\u9636\u6bb5\u5c31\u5b8c\u6210\u4e86\u6784\u9020 \u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u6709\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u4e00\u4e2a\u6307\u9488 __vptr \u591a\u6001\u7684\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u88ab\u7f16\u8bd1\u6210\u4e00\u7cfb\u5217\u6839\u636e\u57fa\u7c7b\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5b58\u653e\u7684\u865a\u51fd\u6570\u8868\u7684\u5730\u5740\uff0c\u5728\u4ece\u865a\u51fd\u6570\u8868\u4e2d\u67e5\u627e\u5730\u5740\u8c03\u7528\u5bf9\u5e94\u7684\u865a\u51fd\u6570 \u4e8b\u5b9e\u4e0a\u865a\u51fd\u6570\u4f1a\u7ed9\u51fd\u6570\u52a0\u4e0a\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\uff0c\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5360\u75284\u5b57\u8282 \u63a5\u53e3(C++\u62bd\u8c61\u7c7b) \u63cf\u8ff0\u4e86\u4e00\u4e2a\u7c7b\u5e94\u8be5\u6709\u7684\u529f\u80fd\u548c\u884c\u4e3a\uff0c\u4f46\u662f\u4e0d\u7528\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5b9e\u73b0\uff0c\u800c\u662f\u5728\u6d3e\u751f\u7c7b\u4e2d\u5b9e\u73b0 \u53ef\u4ee5\u4f7f\u7528\u7eaf\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\uff0c\u6bd4\u5982\uff1a class Shape { public: virtual double getArea() = 0; Shape(int a, int b): length(a), width(b) {} protected: int length; int width; }; class Rectangle: public Shape { public: double getArea() { return length * width; } }; class Triangle: public Shape { public: double getArea() { return length * width / 2; } };","title":"include "},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#27","text":"\u60c5\u51b51\uff1a\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u90fd\u4e0d\u662fvirtual \u6b64\u65f6\u5bf9\u4e8e\u57fa\u7c7b\u7684\u5bf9\u8c61\u548c\u57fa\u7c7b\u7684\u6307\u9488\uff0c\u6267\u884c\u7684\u5c31\u662f\u57fa\u7c7b\u7684f\uff0c\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u7684\u6267\u884c\u7684\u5c31\u662f\u6d3e\u751f\u7c7b\u7684f class A { public: void f() { cout << \"af\" << endl; } }; class B: public A { public: void f() { cout << \"bf\" <<endl; } }; int main() { A a; B b; a.f(); b.f(); A* pb = &b; pb->f(); } \u60c5\u51b52\uff1a\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u662f\u865a\u51fd\u6570\uff1a\u65e0\u5f71\u54cd\uff0c\u548c1\u4e00\u6a21\u4e00\u6837 \u60c5\u51b53\uff1a\u57fa\u7c7b\u4e2d\u7684\u662f\u865a\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u4e2d\u4e0d\u6ce8\u660e\u662f\u865a\u51fd\u6570\uff1a\u6b64\u65f6\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u548c\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6267\u884c\u7684\u90fd\u662f\u6d3e\u751f\u7c7b\u7684\u51fd\u6570f\uff0c\u57fa\u7c7b\u7684\u5bf9\u8c61\u548c\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6267\u884c\u7684\u90fd\u662f\u57fa\u7c7b\u7684\u51fd\u6570f \u603b\u7ed3\uff1a virtual\u7684\u865a\u51fd\u6570\u5173\u952e\u5b57\u662f \u5411\u4e0b\u8d1f\u8d23 \u7684\uff0c\u6d3e\u751f\u7c7b\u58f0\u660evirtual\u5bf9\u57fa\u7c7b\u65e0\u4efb\u4f55\u5f71\u54cd \u5bf9\u4e8e\u6307\u9488\u548c\u5f15\u7528\u800c\u8a00 \u4e0d\u662f\u865a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u8c03\u7528\u7684\u51fd\u6570\u53d6\u51b3\u4e8e\u6307\u9488\u548c\u5f15\u7528\u7684\u53d8\u91cf\u7c7b\u578b(\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u57fa\u7c7b\uff0c\u6d3e\u751f\u7c7b\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b) \u662f\u865a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u8c03\u7528\u51fd\u6570\u53d6\u51b3\u4e8e\u6307\u9488\u548c\u5f15\u7528\u6307\u5411\u7684\u53d8\u91cf\u7c7b\u578b(\u6307\u5411\u57fa\u7c7b\u8c03\u7528\u57fa\u7c7b\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u8c03\u7528\u6d3e\u751f\u7c7b) \u5f53\u7136\u5982\u679c\u6d3e\u751f\u7c7b\u91cc\u6ca1\u6709\u65b0\u7684\u540c\u540d\u51fd\u6570\uff0c\u90a3\u4e48\u6267\u884c\u7684\u90fd\u662f\u57fa\u7c7b\u91cc\u7684 \u8981\u6ce8\u610f\u6d3e\u751f\u7c7b\u6307\u9488\u4e0d\u80fd\u76f4\u63a5\u6307\u5411\u57fa\u7c7b\u7684\u5bf9\u8c61 \u5982\u679c\u865a\u51fd\u6570\u91cc\u8fd8\u9700\u8981\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u8c03\u7528\u7684\u89c4\u5219\u4e5f\u548c\u4e0a\u9762\u7684\u4e00\u6837\uff0c\u6bd4\u5982\u4e0b\u9762\u6709\u4e2a\u5386\u5e74\u5377\u4e0a\u9762\u7684\u795e\u9898\uff1a \u5386\u5e74\u5377\u4e0a\u7684\u4e00\u4e2a\u9898\u76ee\uff1a\u5199\u51fa\u7a0b\u5e8f\u7684\u8f93\u51fa ```c++ class B { public: void f() { cout << \"bf\" << endl; } virtual void vf() { cout << \"bvf\" << endl; } void ff() { vf(); f(); } virtual void vff() { vf(); f(); } }; class D: public B { public: void f() { cout << \"df\" << endl; } void ff() { f(); vf(); } void vf() { cout << \"dvf\" <<endl; } }; int main() { D d; B* pb = &d; pb->f(); pb->ff(); pb->vf(); pb->vff(); } ``` \u8fd9\u9053\u9898\u7684\u5206\u6790\u8fc7\u7a0b\u5982\u4e0b\uff1a \u9996\u5148\u8c03\u7528f\uff0c\u800cf\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u6839\u636e\u6307\u9488\u7c7b\u578b\u8c03\u7528\u4e86B\u4e2d\u7684f\uff0c\u8f93\u51fabf \u518d\u8c03\u7528ff\uff0c\u56e0\u4e3aff\u4e5f\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u8c03\u7528B\u4e2d\u7684ff\uff0cB\u4e2d\u7684ff\u8c03\u7528\u4e86vf\u548cf\uff0c\u800cvf\u662f\u865a\u51fd\u6570\uff0cB\u7c7b\u578b\u6307\u9488\u6307\u5411\u7684\u662fD\uff0c\u6240\u4ee5\u8c03\u7528D\u4e2d\u7684vf\uff0c\u8f93\u51fadvf\uff0c\u8c03\u7528f\u5219\u548c\u4e0a\u9762\u4e00\u6837\u8f93\u51fabf \u518d\u8c03\u7528vf\uff0c\u7531\u4e8evf\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u8981\u8c03\u7528D\u4e2d\u7684vf\uff0c\u8f93\u51fadvf \u518d\u8c03\u7528vff\uff0c\u867d\u7136\u662f\u865a\u51fd\u6570\u4f46\u662fD\u4e2d\u6ca1\u6709\u5b9a\u4e49\u540c\u540d\u51fd\u6570\uff0c\u6240\u4ee5\u8c03\u7528B\u4e2d\u7684vff\uff0cvff\u4e2d\u8c03\u7528vf\u548cf\uff0c\u540c2\u4e00\u6837\u8f93\u51fa\u7684\u662fdvf\u548cbf \u6240\u4ee5\u6700\u7ec8\u7684\u8f93\u51fa\u662f c bf dvf bf dvf dvf bf \u8fd9\u9053\u9898\u6db5\u76d6\u4e86\u5355\u7ee7\u627f\u865a\u51fd\u6570\u7684\u6240\u6709\u60c5\u51b5 \u57fa\u7c7b\u865a\u51fd\u6570\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6d3e\u751f\u7c7b\u4e2d\u7684\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u540c\u540d\u51fd\u6570 \u6bd4\u5982\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\u4e2d ```cpp class A { public: virtual void f(int i) { cout << 1 <<endl; } }; class B: public A { public: virtual void f(double i) { cout << 2 << endl; } }; int main() { A* pa = new B; pa->f(1); return 0; } ``` \u8fd9\u91cc\u8f93\u51fa\u7684\u7ed3\u679c\u662f1\uff0c\u4e8b\u5b9e\u4e0a\u4e24\u4e2af\u5e76\u4e0d\u6784\u6210\u865a\u51fd\u6570\u7684\u5173\u7cfb\uff0c\u56e0\u4e3af(1)\u4e2d1\u662fint\u7c7b\u578b\uff0c\u6240\u4ee5\u4f18\u5148\u8c03\u7528\u4e86\u5bf9int\u5339\u914d\u5ea6\u9ad8\u7684 \u4e8b\u5b9e\u4e0a\u5982\u679c\u662ff(1.1)\u8f93\u51fa\u7684\u7ed3\u679c\u4ecd\u7136\u662f1\uff0c\u5e76\u4e14CLion\u4f1a\u63d0\u793a\u53c2\u6570\u9700\u8981\u7c7b\u578b\u8f6c\u6362 \u4e8b\u5b9e\u4e0a\u4e24\u4e2af\u4e0d\u6784\u6210\u865a\u51fd\u6570\u7684\u591a\u6001\u5173\u7cfb\uff0c\u6240\u4ee5\u8c03\u7528\u54ea\u4e2a\u5e76\u4e0d\u770b\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u800c\u662f\u770b\u6307\u9488\u672c\u8eab\u7684\u7c7b\u578b\uff01","title":"2.7 \u865a\u51fd\u6570\u4f7f\u7528\u603b\u7ed3"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#28","text":"","title":"2.8 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#281-static_cast","text":"static_cast \u7528\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362\uff0c\u6709\u8fd9\u6837\u51e0\u79cd\u7528\u6cd5 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362\uff0c\u6bd4\u5982char\u8f6c\u6362\u6210int \u5728\u7c7b\u7684\u4f53\u7cfb\u4e2d\u628a\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u548c\u5f15\u7528\u8fdb\u884c\u8f6c\u6362 \u5411\u4e0a\u8f6c\u6362\u662f\u5b89\u5168\u7684 \u5411\u4e0b\u8f6c\u6362\u662f\u4e0d\u5b89\u5168\u7684 \u53ea\u80fd\u5728\u6709\u76f8\u4e92\u8054\u7cfb\u7684\u7c7b\u578b\u4e2d\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362\uff0c\u4e0d\u4e00\u5b9a\u5305\u542b\u865a\u51fd\u6570 \u628a\u7a7a\u6307\u9488\u8f6c\u6362\u6210\u76ee\u6807\u7c7b\u578b\u7684\u7a7a\u6307\u9488 \u628a\u4efb\u4f55\u7c7b\u578b\u8f6c\u6362\u6210void\u7c7b\u578b static_cast\u4e0d\u80fd\u8f6c\u6362\u6389\u6709const\u7684\u53d8\u91cf","title":"2.8.1 static_cast"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#282-const_cast","text":"const_cast \u53ef\u4ee5\u5f3a\u5236\u53bb\u6389const\u7684\u5e38\u6570\u7279\u6027\uff0c \u53ea\u80fd\u7528\u5728\u6307\u9488\u548c\u5f15\u7528 \u4e0a\u9762 \u5e38\u91cf\u6307\u9488\u88ab\u8f6c\u5316\u6210\u975e\u5e38\u91cf\u7684\u6307\u9488\uff0c\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61 \u5e38\u91cf\u5f15\u7528\u88ab\u8f6c\u6362\u6210\u4e3a\u975e\u5e38\u91cf\u7684\u5f15\u7528\uff0c\u4ecd\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61 \u6765\u770b\u4e00\u6bb5\u4ee3\u7801 \u6253\u5370\u51fa\u6765\u7684\u7ed3\u679c\u662fa=10\uff0c\u800cp\u548cq\u6240\u6307\u5411\u7684\u503c\u662f20\uff0ca\u7684\u5730\u5740\u548cpq\u6307\u5411\u7684\u5730\u5740\u662f\u4e00\u6837\u7684 \u4e8b\u5b9e\u4e0a\u7b2c\u4e94\u884c\u7684\u8d4b\u503c\u662f\u4e00\u79cd\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u6700\u597d\u522b\u7528 const int a = 10; const int *p = &a; int *q; q = const_cast<int *>(p); *q = 20; cout << a << \" \" << *p << \" \" << *q << endl; cout << &a << \" \" << p << \" \" << q << endl;","title":"2.8.2 const_cast"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#283-reinterpret_cast","text":"reinterpret_cast \u4e3b\u8981\u6709\u4e09\u79cd\u7528\u9014 \u6539\u53d8\u6307\u9488\u6216\u8005\u5f15\u7528\u7684\u7c7b\u578b \u5c06\u6307\u9488\u6216\u8005\u5f15\u7528\u8f6c\u6362\u6210\u4e3a\u8db3\u591f\u957f\u7684\u6574\u5f62 \u5c06\u6574\u578b\u7f16\u7a0b\u6307\u9488\u6216\u8005\u5f15\u7528\u7c7b\u578b","title":"2.8.3 reinterpret_cast"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#284-dynamic_cast","text":"\u8ddf\u5176\u4ed6\u51e0\u4e2a\u4e0d\u540c\uff0c\u5176\u4ed6\u51e0\u4e2a\u90fd\u662f\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\uff0c dynamic_cast \u662f\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u7684 \u4e0d\u80fd\u7528\u4e8e\u5185\u7f6e\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362 \u5982\u679c\u6210\u529f\u7684\uff0c\u5c06\u8fd4\u56de\u6307\u5411\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u8f6c\u6362\u5931\u8d25\u7684\u8bdd\u4f1a\u8fd4\u56deNULL \u8f6c\u6362\u65f6\u57fa\u7c7b\u4e00\u5b9a\u8981\u6709\u865a\u51fd\u6570\uff0c\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 \u539f\u56e0\u662f\u865a\u51fd\u6570\u8868\u540d\u8fd9\u4e2a\u7c7b\u5e0c\u671b\u53ef\u4ee5\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\uff0c\u8fd9\u6837\u8f6c\u6362\u624d\u6709\u610f\u4e49 \u5728\u7c7b\u7684\u5411\u4e0a\u8f6c\u6362\u7684\u65f6\u5019\uff0c\u548c static_cast \u6548\u679c\u4e00\u6837\uff0c\u4f46\u662f\u5411\u4e0b\u8f6c\u6362\u7684\u65f6\u5019\u6bd4 static_cast \u66f4\u5b89\u5168\uff0c\u56e0\u6b64\u8981\u6c42\u4e5f\u66f4\u9ad8 \u6765\u770b\u4e00\u6bb5\u4ee3\u7801 c++ int main() { A a; B b; A *ap = &a; if(dynamic_cast<B*>(ap)) { cout << \"OK1\" << endl; } else { cout << \"Fail\" << endl; } if(static_cast<B*>(ap)) { cout << \"OK2\" << endl; } else { cout << \"Fail\" << endl; } ap = &b; if(dynamic_cast<B*>(ap)) { cout << \"OK3\" << endl; } else { cout << \"Fail\" << endl; } if(static_cast<B*>(ap)) { cout << \"OK4\" << endl; } else { cout << \"Fail\" << endl; } return 0; } \u8fd0\u884c\u7684\u7ed3\u679c\u662f\u7b2c\u4e00\u4e2a\u5931\u8d25\uff0c\u5176\u4ed6\u7684\u90fd\u6210\u529f \u63a8\u6d4b\u5bfc\u81f4\u8fd9\u4e2a\u7ed3\u679c\u7684\u539f\u56e0\uff1a \u5f53ap\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u53d8\u6210\u6d3e\u751f\u7c7b\u662f\u53ef\u4ee5\u6210\u529f\u7684 \u5f53ap\u6307\u5411\u57fa\u7c7b\u7684\u65f6\u5019\uff0c dynamic_cast \u8f6c\u6362\u662f\u5426\u6210\u529f\u53d6\u51b3\u4e8e\u6307\u9488\u6307\u5411\u7684\u7c7b\u578b\u548c\u5373\u5c06\u8f6c\u6362\u7684\u7c7b\u578b\u662f\u4e0d\u662f\u4e00\u6837\uff0c\u4e0d\u4e00\u6837\u5c31\u4f1a\u5931\u8d25\uff0c\u8fd4\u56de\u4e00\u4e2aNULL\uff0c\u800cstatic\u662f\u53ef\u4ee5\u6210\u529f\u7684 \u5176\u5b9e\u662f\u66f4\u5b89\u5168\u7684\u673a\u5236\u5bfc\u81f4dynamic\u7684\u68c0\u67e5\u66f4\u591a\uff0c\u8981\u6c42\u66f4\u9ad8","title":"2.8.4 dynamic_cast"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#3","text":"","title":"3. \u91cd\u8f7d"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#30","text":"\u591a\u4e2a\u540c\u540d\u51fd\u6570\u7684\u53c2\u6570\u7684\u4e2a\u6570\u6216\u8005\u7c7b\u578b\u4e0d\u76f8\u540c\uff0c\u8fd9\u51e0\u4e2a\u51fd\u6570\u5c31\u6784\u6210\u91cd\u8f7d\u5173\u7cfb \u4e0d\u80fd\u4ec5\u901a\u8fc7\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u4e0d\u540c\u6765\u5f62\u6210\u51fd\u6570\u7684\u91cd\u8f7d\uff0c\u4e8b\u5b9e\u4e0a\u51fd\u6570\u91cd\u8f7d\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u5173\u7cfb\u4e0d\u5927 \u8c03\u7528\u7684\u65f6\u5019\u4f18\u5148\u8c03\u7528\u5339\u914d\u5ea6\u6700\u9ad8\u7684\u91cd\u8f7d\u51fd\u6570\uff0c\u91cd\u8f7d\u7684\u4f18\u5148\u7ea7\u662f\uff1a \u5148\u627e\u5b8c\u5168\u5339\u914d\u7684\u666e\u901a\u51fd\u6570 \u518d\u627e\u6a21\u677f\u51fd\u6570 \u518d\u627e\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u51fd\u6570 \u5f53\u6ca1\u6709\u53c2\u6570\u7c7b\u578b\u6070\u597d\u5339\u914d\u7684\u91cd\u8f7d\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c06\u53c2\u6570\u8fdb\u884c\u9690\u5f0f\u8f6c\u6362\u4e4b\u540e\u6765\u5bfb\u627e\u53ef\u4ee5\u8c03\u7528\u7684\u91cd\u8f7d\u51fd\u6570\uff0c\u6b64\u65f6\u5982\u679c\u91cd\u8f7d\u51fd\u6570\u6709\u591a\u4e2a\u7b26\u5408\u6761\u4ef6\uff0c\u5c31\u4f1a\u4ea7\u751ferror ```c++","title":"3.0 \u51fd\u6570\u7684\u91cd\u8f7d"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#include_2","text":"using namespace std; void foo(int a, int b) { cout<<1<<endl; } void foo(double a, double b) { cout<<2<<endl; } int main() { foo(1, 2); foo(1.0, 2.0); foo(1, 2.0); // \u8fd9\u4e00\u884c\u662f\u6709\u8bed\u6cd5\u9519\u8bef\u7684\uff01 } ```","title":"include "},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#31","text":"\u91cd\u8f7d\u7684\u4e00\u4e9b\u57fa\u672c\u6027\u8d28 \u5927\u90e8\u5206\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u91cd\u8f7d . :: ?: \u4e4b\u7c7b\u7684\u8fd0\u7b97\u7b26\u4e0d\u80fd\u91cd\u8f7d\uff0csizeof\uff0ctypeid\uff0cstatic\u4e4b\u7c7b\u7684 \u5173\u952e\u5b57\u4e0d\u80fd\u91cd\u8f7d \u4e0d\u80fd\u91cd\u8f7d\u4e0d\u5b58\u5728\u7684\u8fd0\u7b97\u7b26 \u5fc5\u987b\u5bf9\u4e8e\u6574\u4e2aclass\u6216\u8005enumeration type\u8fdb\u884c\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d \u91cd\u8f7d\u4e4b\u540e\u7684\u8fd0\u7b97\u7b26\u4f9d\u7136\u4fdd\u6301 \u539f\u6765\u4e00\u6837\u7684\u8fd0\u7b97\u4f18\u5148\u7ea7\u548c\u64cd\u4f5c\u6570\u7684\u4e2a\u6570 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u57fa\u672c\u8bed\u6cd5 \u5728\u7c7b\u5b9a\u4e49\u4e2d\u5bf9member function\u8fdb\u884c\u91cd\u8f7d return_type class_name::operator\u8fd0\u7b97\u7b26(parameters) \u6b64\u65f6\u53c2\u6570\u4e3a\u5bf9\u5e94\u8fd0\u7b97\u7b26\u6240\u9700\u53c2\u6570-1 \u5bf9\u5916\u90e8\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d \u8fd4\u56de\u503c\u7c7b\u578b operator\u8fd0\u7b97\u7b26(\u53c2\u6570\u8868) \u6b64\u65f6\u53c2\u6570\u4e2a\u6570\u548c\u5bf9\u5e94\u7684\u8fd0\u7b97\u7b26\u7684\u6240\u9700\u4e2a\u6570\u76f8\u540c \u5982\u679c\u8981\u8bbf\u95ee\u7c7b\u7684private\u5185\u5bb9\uff0c\u9700\u8981\u58f0\u660e\u8fd9\u4e2a\u91cd\u8f7d\u51fd\u6570\u4e3a \u53cb\u5143 \u5355\u76ee\u8fd0\u7b97\u7b26\u4e00\u822c\u58f0\u660e\u4e3a\u6210\u5458\u51fd\u6570\uff0c\u53cc\u76ee\u8fd0\u7b97\u7b26\u4e00\u822c\u4f5c\u4e3a\u5916\u90e8\u7684\u51fd\u6570 [ ] ( ) -> \u7b49\u8fd0\u7b97\u7b26\u5fc5\u987b\u4f5c\u4e3a\u6210\u5458\u51fd\u6570 \u524d\u7f00\u7684++\u548c\u540e\u7f00\u7684++ \u533a\u522b\uff1a\u540e\u7f00\u7684++\u53c2\u6570\u8868\u662f\u6709\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u7684 c++ Integer& operator++(); //prefix++ Integer operator++(int x); //postfix++ \u6bd4\u8f83\u5927\u5c0f\u5173\u7cfb\u7684\u8fd0\u7b97\u7b26\u91cd\u8f7d\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 \u4ee3\u7801\u7684\u590d\u7528 \u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u4ee3\u7801\u91cf \u81ea\u5b9a\u4e49\u7684 \u7c7b\u578b\u8f6c\u6362 \u4f8b\u5982 Rational::operator double() const {}; \u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff1a Single-argument constructors implicit type conversion operators \u907f\u514d\u9690\u5f0f\u8f6c\u6362\u7684\u65b9\u6cd5\uff1a\u628a\u590d\u5236\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3aexplicit\uff0c\u8868\u793a\u4e0d\u80fd\u8fdb\u884c\u9690\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362","title":"3.1 \u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#32","text":"stream\u7684\u79cd\u7c7b Text stream \u7528ASCII\u7801\u6765\u89e3\u6790\uff0c\u5305\u62ecfiles\u548ccharacter buffers Binary stream \u4e8c\u8fdb\u5236\u6570\u636e\uff0cno translation stream\u7684\u7c7b\u578b\uff1a cin\u6807\u51c6\u8f93\u5165\uff0c\u4f7f\u7528\u6d41\u63d0\u53d6\u8fd0\u7b97\u7b26>>\uff0c\u5728C++\u6807\u51c6\u5e93\u7684istream\u4e2d\u5b9a\u4e49 cout\u6807\u51c6\u8f93\u51fa\uff0c\u4f7f\u7528\u6d41\u63d2\u5165\u8fd0\u7b97\u7b26<<\uff0c\u5728ostream\u4e2d\u5b9a\u4e49 cerr\u6807\u51c6\u9519\u8bef\u63d0\u793a(unbuffered error) clog\u6807\u51c6\u9519\u8bef\u63d0\u793a(buffered error) \u5bf9>>\u548c<<\u7684\u91cd\u8f7d Has to be a 2-argument free function istream& operator>>(istream& is, T& obj){ //special way to read in obj return is; //Return an istream& for chaining } //<<\u7684\u91cd\u8f7d\u65b9\u5f0f\u4e0e\u4e4b\u7c7b\u4f3c ostream& operator<<(ostream& os, T& obj){ return os; } \u63a7\u5236\u8f93\u51fa\u7684\u683c\u5f0f\uff0c\u4f7f\u7528\u5934\u6587\u4ef6 #include<iomanip> \u5176\u4ed6\u7684\u8f93\u5165\u8f93\u51fa\u7684\u65b9\u5f0f\uff1a int get() \u652f\u6301\u5355\u4e2a\u5b57\u7b26\u8bfb\u5165 Returns the next character in the stream Returns EOF if no characters left get(char *buf, int limit, char delim='\\n') getline(char *buf, int limit, char delim='\\n')","title":"3.2 \u8f93\u5165\u8f93\u51fa\u6d41\u7684\u91cd\u8f7d"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#4","text":"","title":"4. \u6a21\u677f"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#41-namespace","text":"\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u6765\u5212\u5206\u5168\u5c40\u7684\u5404\u7c7b\u7c7b\u540d\u53ef\u4ee5\u907f\u514d\u540d\u5b57\u7684\u51b2\u7a81\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\u91cc\u5b9a\u4e49\u76f8\u540c\u7684\u53d8\u91cf\u540d \u5728\u5f15\u7528\u7684\u65f6\u5019\u52a0\u4e0a\u547d\u540d\u7a7a\u95f4\u7684\u9650\u5236\u7b26\u5c31\u53ef\u4ee5\u4e86 \u6216\u8005\u4e5f\u53ef\u4ee5\u7528 using namespace xxx \u6765\u8bf4\u660e\u7a0b\u5e8f\u4e2d\u63a5\u4e0b\u6765\u7528\u54ea\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u4e1c\u897f ```C++ namespace space1{ string name = \"randomstar\"; } namespace space2{ string name = \"ToyamaKasumi\"; } int main() { cout<<space1::name<<endl; using namespace space2; cout<<name<<endl; } ```","title":"4.1 namespace \u547d\u540d\u7a7a\u95f4"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#42-template","text":"\u6a21\u677f\u7f16\u7a0b\u662f\u4e00\u79cd\u590d\u7528\u4ee3\u7801\u7684\u624b\u6bb5\uff0c\u662fgeneric programming(\u6cdb\u578b\u7f16\u7a0b)\uff0c\u628a\u53d8\u91cf\u7684\u7c7b\u578b\u5f53\u4f5c\u53c2\u6570\u6765\u58f0\u660e \u51fd\u6570\u6a21\u677f\uff1a\u4f7f\u7528\u5173\u952e\u5b57template \u540e\u9762\u52a0\u82e5\u5e72\u4e2a\u53d8\u91cf\u4f5c\u4e3a\u7c7b\u578b\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\uff0c\u7c7b\u578b\u53d8\u91cf\u53ef\u4ee5\u4ee3\u66ff\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u53c2\u6570\u7c7b\u578b\u548c\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u7684\u7c7b\u578b \u51fd\u6570\u6a21\u677f\u9700\u8981 \u5b9e\u4f8b\u5316 (instantiation)\u4e4b\u540e\u518d\u4f7f\u7528\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u8c03\u7528\u5c31\u4e0d\u4f1a\u88ab\u5b9e\u4f8b\u5316 \u5b9e\u4f8b\u5316\u662f\u8bb2\u6a21\u677f\u51fd\u6570\u4e2d\u7684\u6a21\u677f\u66ff\u6362\u4e3a\u5bf9\u5e94\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u7136\u540e\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684\u51fd\u6570 \u51fd\u6570\u6a21\u677f\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u53d1\u751f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u5fc5\u987b\u8981 \u7c7b\u578b\u5b8c\u5168\u5339\u914d\u624d\u80fd\u4f7f\u7528","title":"4.2 template\u7f16\u7a0b"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#_1","text":"\u5148\u627e\u662f\u5426\u6709\u5b8c\u5168\u5339\u914d\u7684\u666e\u901a\u51fd\u6570 \u518d\u627e\u662f\u5426\u6709\u5b8c\u5168\u5339\u914d\u7684\u6a21\u677f\u51fd\u6570 \u518d\u627e\u6709\u6ca1\u6709\u901a\u8fc7\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570 \u7c7b\u6a21\u677f \u548c\u51fd\u6570\u6a21\u677f\u5dee\u4e0d\u591a\uff0ctemplate\u4e2d\u58f0\u660e\u7684\u65e2\u53ef\u4ee5\u662f\u7c7b\u5185\u5404\u79cd\u9700\u8981\u53d8\u91cf\u7c7b\u578b\u7684\u5730\u65b9 \u6a21\u677f\u7c7b\u4e5f\u53ef\u4ee5\u7ee7\u627f\u975e\u6a21\u677f\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u627f\u6a21\u677f\u7c7b(\u9700\u8981\u5b9e\u4f8b\u5316) \u975e\u6a21\u677f\u7c7b\u53ef\u4ee5\u7ee7\u627f\u81ea\u6a21\u677f\u7c7b(\u9700\u8981\u5b9e\u4f8b\u5316) Expression parameter \u6a21\u677f\u4e2d\u7684\u53ef\u4ee5\u58f0\u660e\u4e00\u4e9b\u5e38\u6570\uff0cclass\u548ctypename\u7684\u7c7b\u578b\u540d\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503cdefault value\uff0c\u6bd4\u5982 template<typename T = int> ```c++ template class FixedVector{ public: T& operator ; T elements[bounds]; }; template T& FixedVector ::operator[] (int i){ return elements[i]; //no error checking } //usage FixedVector v1; FixedVector v2; FixedVector v3 //default value ``` Specialization \u7279\u5316--\u7528\u4e8e\u8403\u53d6\u5668 \u5168\u7279\u5316\uff1a\u5c06\u6a21\u677f\u7c7b\u4e2d\u6240\u6709\u7684\u7c7b\u578b\u53c2\u6570\u8d4b\u4e88\u660e\u786e\u7684\u7c7b\u578b\uff0c\u5e76\u5199\u4e86\u4e00\u4e2a\u7c7b\u540d\u548c\u4e3b\u6a21\u677f\u7c7b\u540d\u76f8\u540c\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u662f\u5168\u7279\u5316\u7c7b \u5168\u7279\u5316\u4e4b\u540e\uff0c\u5df2\u7ecf\u5931\u53bb\u4e86template\u7684\u7279\u6027 ```cpp template bool compare(T x, T y) { return x>y; } // \u8fd9\u4e2a\u5c31\u662f\u5bf9\u4e0a\u9762\u5199\u7684\u6a21\u677f\u51fd\u6570\u7684\u5168\u7279\u5316 template<> bool compare(int x, int y) { return x>y; } ``` \u504f\u7279\u5316\uff1a\u53ea\u7ed9\u6a21\u677f\u7c7b\u8d4b\u4e00\u90e8\u5206\u7684\u7c7b\u578b\uff0c\u5f97\u5230\u7684\u504f\u7279\u5316\u7c7b/\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5b50\u6a21\u7248\u4f7f\u7528 \u8fd8\u4fdd\u7559\u4e86\u4e00\u90e8\u5206template\u7684\u529f\u80fd \u6a21\u677f\u7c7b\u8c03\u7528\u7684 \u4f18\u5148\u7ea7 \u5168\u7279\u5316\u7c7b>\u504f\u7279\u5316\u7c7b>\u4e3b\u7248\u672c\u7684\u6a21\u677f\u7c7b\uff08\u5c31\u662f\u76f4\u63a5\u8c03\u7528\u6a21\u677f\u7c7b\uff0c\u6700\u5e38\u89c1\u7684\u7528\u6cd5\uff09 \u6709\u9690\u5f0f\u8f6c\u6362\u7684\u4f18\u5148\u7ea7\u6bd4\u8f83\u4f4e\uff0c\u5148\u8003\u8651\u6240\u6709\u4e0d\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u6a21\u677f\uff0c\u518d\u8003\u8651\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u6a21\u677f","title":"\u51fd\u6570\u91cd\u8f7d\u65f6\u5019\u7684\u4f18\u5148\u7ea7"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#43-stl","text":"STL=Standard Template Library \u662f\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u4f7f\u7528C++STL\u53ef\u4ee5\u51cf\u5c11\u5f00\u53d1\u65f6\u95f4\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027\u548c \u9c81\u68d2\u6027 \uff0cSTL\u5305\u542b\u4e86\uff1a \u5bb9\u5668 \u8fed\u4ee3\u5668 \u51fd\u6570 STL\u5bb9\u5668\u7684\u4f7f\u7528\uff1a\u523b\u5728DNA\u91cc\uff0c\u4e0d\u9700\u8981\u6574\u7406 \u5173\u4e8emap\uff1amap\u7684key \u5fc5\u987b\u662f \u53ef\u4ee5\u6ee1\u8db3 \u53ef\u4ee5\u6392\u5e8f \u6027\u8d28\u7684\uff0c\u5982\u679c\u662f\u81ea\u5b9a\u4e49\u7684\u7c7b\u9700\u8981 \u91cd\u8f7d<\u51fd\u6570 \uff0c\u5426\u5219\u8fd9\u4e2a\u7c7b\u4e0d\u80fd\u4f5c\u4e3akey\u503c \u8fed\u4ee3\u5668\uff1a STL<parameters>::iterator xxx \u8fed\u4ee3\u5668\u662f\u4e00\u79cd\u987a\u5e8f\u8bbf\u95ee\u5bb9\u5668\u7684\u65b9\u5f0f\uff1aGeneralization of pointers \u4e24\u4e2a\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\uff1abegin( ) \u548c end( )\u5206\u522b\u8868\u793a\u5bb9\u5668\u7684 \u5934\u548c\u5c3e \u5f88\u591a\u65f6\u5019end\u5e76\u4e0d\u80fd\u8fbe\u5230\uff0c\u56e0\u6b64\u5230\u7ed3\u675f\u7684\u5224\u65ad\u6761\u4ef6\u5f80\u5f80\u662f !=stl.end() \u8fed\u4ee3\u5668\u652f\u6301\u7684\u64cd\u4f5c iter++ iter+=2 (\u4e0d\u662f\u4efb\u4f55\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u90fd\u53ef\u4ee5) *iter c++ list<int> L; list<int>::iterator li; li=L.begin(); L.erase(li); // li=L.erase(li); ++li;//error!!! \u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd \u6cdb\u5316\u7684\u6307\u9488","title":"4.3 STL\u548c\u8fed\u4ee3\u5668"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#5-exceptions","text":"\u7528\u4e8e\u5f02\u5e38\u5904\u7406\u7684\u8bed\u6cd5 try{ } catch{ } \uff1a\u6355\u83b7throw\u629b\u51fa\u7684\u5f02\u5e38 catch (...) \u8868\u793a\u6355\u6349 \u6240\u6709\u53ef\u80fd\u7684\u5f02\u5e38 try\u62ec\u53f7\u4e2d\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u4fdd\u62a4\u4ee3\u7801 throw\u8bed\u53e5\uff1a\u629b\u51fa\u5f02\u5e38 throw exp; \u629b\u51fa\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1athrow\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u7c7b\u578b\u51b3\u5b9a\u4e86\u629b\u51fa\u7684\u7ed3\u679c\u7684\u7c7b\u578b throw; \u53ea\u6709\u5728catch\u5b50\u53e5\u4e2d\u6709\u6548\uff0c\u628a\u539f\u672c\u6355\u6349\u5230\u7684\u5f02\u5e38\u629b\u51fa \u5f02\u5e38\u5904\u7406\u7684\u6267\u884c\u8fc7\u7a0b \u7a0b\u5e8f\u6309\u7167\u6b63\u5e38\u7684\u987a\u5e8f\u6267\u884c\uff0c\u5230\u8fbetry\u8bed\u53e5\uff0c\u5f00\u59cb\u6267\u884ctry\u5185\u7684\u4fdd\u62a4\u6bb5 \u5982\u679c\u5728\u4fdd\u62a4\u6bb5\u6267\u884c\u671f\u95f4\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u90a3\u4e48\u8df3\u8fc7\u6240\u6709\u7684catch \u5982\u679c\u4fdd\u62a4\u6bb5\u7684\u6267\u884c\u671f\u95f4\u6709\u8c03\u7528\u7684\u4efb\u4f55\u51fd\u6570\u4e2d\u6709\u5f02\u5e38\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7throw\u521b\u5efa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa\uff0c\u7a0b\u5e8f\u8f6c\u5230\u5bf9\u5e94\u7684catch\u5904\u7406\u6bb5 \u9996\u5148\u8981\u6309\u987a\u5e8f\u5bfb\u627e\u5339\u914d\u7684catch\u5904\u7406\u5668\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219 terminate( ) \u4f1a\u88ab\u81ea\u52a8\u8c03\u7528\uff0c\u8be5\u51fd\u6570\u4f1a\u8c03\u7528abort\u7ec8\u6b62\u7a0b\u5e8f \u5982\u679c\u5728\u51fd\u6570\u4e2d\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u5e76\u4e14\u89e6\u53d1\u4e86terminate\uff0c\u90a3\u4e48\u7ec8\u6b62\u7684\u662f\u5f53\u524d\u51fd\u6570 \u5f02\u5e38\u7c7b\u578b\u9700\u8981\u4e25\u683c\u7684\u5339\u914d \u5982\u679c\u627e\u5230\u4e86\u5339\u914d\u7684catch\u5904\u7406\u7a0b\u5e8f\uff0c\u5e76\u4e14\u901a\u8fc7\u503c\u8fdb\u884c\u6355\u83b7\uff0c\u5219\u5176\u5f62\u53c2\u901a\u8fc7\u62f7\u8d1d\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728\u5f62\u53c2\u88ab\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u5c55\u5f00\u6808\u7684\u8fc7\u7a0b\u5f00\u59cb\uff0c\u5f00\u59cb\u5bf9\u5bf9\u5e94\u7684try\u5757\u4e2d\uff0c\u4ece\u5f00\u59cb\u5230\u5f02\u5e38\u4e22\u5f03\u5730\u70b9\u4e4b\u95f4\u521b\u5efa\u7684\u6240\u6709\u5c40\u90e8\u5bf9\u8c61\u7684\u6790\u6784 C++\u4e2d\u81ea\u5e26\u7684\u5f02\u5e38\u7684\u7ee7\u627f\u4f53\u7cfb\uff0c\u5b9a\u4e49\u5728\u5934\u6587\u4ef6 <exception> \u4e2d what\u65b9\u6cd5\u7ed9\u51fa\u4e86\u4ea7\u751f\u5f02\u5e38\u7684\u539f\u56e0\uff0c\u662f\u5f02\u5e38\u7c7b\u4e4b\u95f4\u90fd\u6709\u7684\u516c\u5171\u65b9\u6cd5\uff0c\u5df2\u7ecf\u88ab\u6240\u6709\u7684\u5b50\u5f02\u5e38\u7c7b\u91cd\u8f7d \u81ea\u5b9a\u4e49\u7684\u5f02\u5e38\u7c7b\uff1a\u9700\u8981\u7ee7\u627fexception\u7c7b \u51fd\u6570\u5b9a\u4e49\u7684\u5f02\u5e38\u58f0\u660e \u53ef\u4ee5\u5728\u51fd\u6570\u540d\u540e\u9762\u52a0 noexcept \u5173\u952e\u5b57\uff0c\u8bf4\u660e\u8be5\u51fd\u6570\u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d \u4e0d\u629b\u51fa\u4efb\u4f55\u5f02\u5e38 \uff0c\u5982\u679c\u8fd8\u662f\u4ea7\u751f\u4e86\u5f02\u5e38\uff0c\u5c31\u4f1a\u8c03\u7528 std::terminate \u7ec8\u6b62\u7a0b\u5e8f \u53ef\u4ee5\u5728\u51fd\u6570\u58f0\u660e\u4e2d\u5217\u51fa\u6240\u6709\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u6bd4\u5982 double f(int, int) throw(int); \u5982\u679c\u662fthrow()\u8868\u793a\u4e0d\u629b\u51fa\u4e00\u573a\uff0c\u5c31\u7b97\u51fd\u6570\u91cc\u6709throw\u4e5f\u4e0d\u4f1a\u6267\u884c throw\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u51fd\u6570\u6ca1\u6709\u6267\u884c\u5b8c\u6bd5\uff0c\u4f46\u662f\u5728\u51fd\u6570throw\u4e4b\u524d\u4f1a\u6267\u884c\u6240\u6709 \u5c40\u90e8\u53d8\u91cf\u7684\u6790\u6784\u51fd\u6570 \u6700\u597d\u4e0d\u8981\u5728\u6790\u6784\u51fd\u6570\u4e2d\u629b\u51fa\u5f02\u5e38 class T { T(){ cout<<\"T()\"<<endl; } ~T(){ cout<<\"~T()\"<<endl; } } void foo() { T t; throw 1; } int main() { try{ foo(); } catch(...){ cout<<\"Catched!\"<<endl; } return 0; } //\u8fd0\u884c\u7684\u7ed3\u679c\u662f T() ~T() Catched","title":"5. Exceptions \u5f02\u5e38\u5904\u7406"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#6-smart-pointer","text":"\u666e\u901a\u6307\u9488\u7ba1\u7406\u5185\u5b58\u5bb9\u6613\u9020\u6210\u5185\u5b58\u6cc4\u6f0f(\u6bd4\u5982\u7528\u5b8c\u5fd8\u8bb0\u91ca\u653e)\uff0cC++\u63d0\u4f9b\u4e86\u667a\u80fd\u6307\u9488\u7528\u4e8e\u5185\u5b58\u7684\u7ba1\u7406 \u667a\u80fd\u6307\u9488\u4f7f\u7528\u4e86\u4e00\u79cdRAII(\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316)\u6280\u672f\u5bf9\u666e\u901a\u7684\u6307\u9488\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4f7f\u5f97\u667a\u80fd\u6307\u9488\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f\u884c\u4e3a\u8868\u73b0\u5f97\u50cf\u4e00\u4e2a\u6307\u9488 \u667a\u80fd\u6307\u9488\u7684\u76f8\u5173\u5185\u5bb9\u5305\u542b\u5728\u5934\u6587\u4ef6 \u6807\u51c6\u5e93\u4e2d\u652f\u6301\u7684\u667a\u80fd\u6307\u9488\u7c7b\u578b std::unique_ptr \u53ea\u5141\u8bb8\u8fd9\u4e2a\u6307\u9488\u6765\u7ba1\u7406\u5bf9\u5e94\u7684\u8d44\u6e90\uff0c \u4e0d\u5141\u8bb8\u6307\u9488\u4e4b\u95f4\u7684\u62f7\u8d1d \uff0c\u4f46\u662f \u4e0d\u5141\u8bb8\u8fdb\u884c\u6307\u9488\u7684\u8d4b\u503c\u548c\u62f7\u8d1d \u53ef\u4ee5\u7528 move \u65b9\u6cd5\u6765\u79fb\u52a8\u6307\u9488\u7684\u6240\u6709\u6743 \uff0c\u6bd4\u5982 unique_ptr<int> p2 = move(p1); \u53ef\u4ee5\u7528 release \u65b9\u6cd5 \u6765\u91ca\u653e\u6307\u9488\u7684\u6240\u6709\u6743 ```c++ class A{ public: A(){ cout<<\"A()\"<<endl; } ~A(){ cout<<\"~A()\"<<endl; } void foo(){ cout<<\"1\"<<endl; } } int main() { { unique_ptr pa(new (A)); pa->foo(); } } ``` std::shared_ptr \u975e\u72ec\u5360\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u591a\u4e2a\u6307\u9488\u7ba1\u7406\u4e00\u4e2a\u5bf9\u8c61\u3002shared_ptr\u4f7f\u7528 \u5f15\u7528\u8ba1\u6570 \uff0c\u6bcf\u4e00\u4e2ashared_ptr\u7684\u62f7\u8d1d\u90fd\u6307\u5411\u76f8\u540c\u7684\u5185\u5b58\u3002\u6bcf\u4f7f\u7528\u4ed6\u4e00\u6b21\uff0c\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u52a01\uff0c\u6bcf\u6790\u6784\u4e00\u6b21\uff0c\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u51cf1\uff0c\u51cf\u4e3a0\u65f6\uff0c\u81ea\u52a8\u5220\u9664\u6240\u6307\u5411\u7684\u5806\u5185\u5b58\u3002shared_ptr\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u662f \u7ebf\u7a0b\u5b89\u5168 \u7684\uff0c\u4f46\u662f\u5bf9\u8c61\u7684\u8bfb\u53d6\u9700\u8981 \u52a0\u9501 \u53ef\u4ee5\u7528 use_count \u51fd\u6570\u6765\u67e5\u770b\u67d0\u4e2a\u5bf9\u8c61\u62e5\u6709\u7684\u6307\u9488\u7684\u4e2a\u6570 \u53ef\u4ee5\u7528 get \u51fd\u6570\u6765\u83b7\u53d6\u539f\u59cb\u6307\u9488 \u4e0d\u80fd\u7528\u4e00\u4e2a\u539f\u59cb\u6307\u9488\u521d\u59cb\u5316\u591a\u4e2a shared_ptr \u5426\u5219\u4f1a\u9020\u6210\u5185\u5b58\u591a\u6b21\u91ca\u653e ```cpp","title":"6. Smart Pointer \u667a\u80fd\u6307\u9488"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#include_3","text":"","title":"include"},{"location":"OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/OOP-Review.html#include_4","text":"int main() { int a = 10; std::shared_ptr ptra = make_shared (a); srd::shared_prt ptrb(ptra); cout<<ptra.use_count<<endl; //\u8f93\u51fa\u7684\u7ed3\u679c\u662f2 } ``` std::weak_ptr \u662f\u6ca1\u7528\u91cd\u8f7d*\u548c->\u64cd\u4f5c\u7b26\uff0c\u6ca1\u6709\u666e\u901a\u6307\u9488\u5177\u6709\u7684\u884c\u4e3a\uff0c\u6700\u5927\u7684\u4f5c\u7528\u5728\u4e8e\u534f\u52a9\u5176\u4ed6\u6307\u9488\u7684\u5de5\u4f5c\uff0c\u67e5\u770b\u5bf9\u8c61\u4e2d\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5 weak_ptr\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2ashared_ptr\u6216\u8005weak_ptr\u6765\u8fdb\u884c\u6784\u9020\uff0c\u83b7\u53d6\u89c2\u6d4b\u6743\uff0c\u4f46\u662fweak_ptr \u4e0d\u4f1a\u9020\u6210\u6307\u9488\u5f15\u7528\u8ba1\u6570\u7684\u589e\u52a0","title":"include"},{"location":"OS%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/index.html","text":"\u64cd\u4f5c\u7cfb\u7edf lz\u662fjjm\u8001\u5e08\u73ed\u7ea7\u7684\uff0c\u7ed9\u5206\u5f88\u597d\uff0c\u4e8b\u60c5\u76f8\u5bf9\u4e8e\u6559\u6539\u73ed\u6bd4\u8f83\u5c11 \u671f\u672b\u8003\u8bd5\uff1a \u671f\u672b\u8003\u603b\u4f53\u96be\u5ea6\u4e00\u822c\uff0clz\u8ba4\u4e3a\u5df2\u7ecf\u662f\u672c\u5b66\u671f\u6700\u53cb\u5584\u7684\u4e00\u95e8\u8003\u8bd5\u4e86 \u6c42\u662f\u6f6eGitHub\u7684repo\u4e0a\u4f3c\u4e4e\u6709\u4e00\u4efdA4\u7eb8\u4e2d\u6709\u5f88\u591a\u8003\u8bd5\u539f\u9898\uff0c\u53ef\u60dclz\u6ca1\u6253\u5370\u8fd9\u4e00\u4efdA4\u7eb8 \u9009\u8bfe\uff1a lz\u662fjjm\u73ed\u7684\uff0c\u603b\u7684\u6765\u8bf4\u5e73\u65f6\u4e8b\u60c5\u6bd4\u8f83\u5c11(\u76f8\u6bd4\u6559\u6539\u73ed)\uff0c\u5f53\u7136\u8fd8\u6709\u4e8b\u60c5\u66f4\u5c11\u7684\u73ed\u7ea7\uff0c\u542c\u8bf4ws\u73ed\u4e09\u4e2a\u5b9e\u9a8c\u53ef\u4ee5\u7ec4\u961f\u505a\uff0cjjm\u73ed\u90fd\u662f\u4e00\u4e2a\u4eba\u505a\u7684 jjm\u73ed\u5e73\u65f6\u4f5c\u4e1a\u6709\u4e0d\u5c11\u9009\u62e9\u9898\uff0c\u8c8c\u4f3c\u6709\u4e0d\u5c11\u5728\u671f\u672b\u8003\u8bd5\u4e2d\u51fa\u73b0\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u7ec3\u4e60\u9898\u5728\u6c42\u662f\u6f6e\u7684repo\u4e0a\u9762\u4e5f\u53ef\u4ee5\u627e\u5230\uff0c\u63a8\u8350\u8003\u524d\u5237\u4e00\u5237 \u81f3\u4e8e\u6559\u6539\u73ed\uff0clz\u5df2\u7ecf\u542c\u4e0d\u5c11\u4eba\u5410\u69fd\u8fc7\u6559\u6539\u73ed\u7684lab\u975e\u5e38\u79bb\u8c31\uff0c\u5de5\u4f5c\u91cf\u975e\u5e38\u5927\uff0c\u53cd\u6b63lz\u8fd9\u6837\u7684\u83dc\u6bd4\u662f\u4e0d\u6562\u9009\u6559\u6539\u73ed\uff0c\u7ed9\u5206\u4e5f\u4e0d\u77e5\u9053\u5982\u4f55\uff08\u4e2a\u4eba\u8ba4\u4e3ajjm\u73ed\u7ed9\u5206\u8f83\u597d\uff09\uff0c\u6559\u6539\u73ed\u9009\u624b\u53ef\u4ee5\u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u7684\u5b66\u4e60\u4f53\u9a8c \u4e0d\u8fc7\u4f3c\u4e4e\u542c\u8bf4 \u4e0b\u6b21\u79cb\u51ac\u5b66\u671f\u6559\u6539\u73ed\u7684lab\u8981\u63a8\u5e7f\u5230\u6240\u6709\u73ed\u7ea7 \u4e86\uff0c\u6211\u89c9\u5f97\u5230\u65f6\u5019\u4e00\u5b9a\u4f1a\u54c0\u9e3f\u904d\u91ce\uff0c\u4e0d\u8fc7\u5230\u5e95\u4f1a\u4e0d\u4f1a\u5168\u90e8\u6539\u6210\u6559\u6539\u4e5f\u5b58\u7591\uff0c\u6bd5\u7adf\u6559\u6539\u73ed\u7684lab\u771f\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u6709\u8fd9\u4e2a\u6761\u4ef6\u505a\u5b8c\u7684\uff0c\u4e0d\u8fc7\u542c\u8bf4\u6559\u6539\u73ed\u4f1a\u8bb2\u5f88\u591a\u62d3\u5c55\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u771f\u7684\u60f3\u5b66\u786c\u6838\u7684\u4e1c\u897f\u53ef\u4ee5\u8003\u8651\u9009\u6559\u6539\uff0c\u800c\u4e14\u542c\u8bf4zyj\u73ed\u6700\u540e\u628a\u671f\u672b\u8003\u8bd5\u7684Linux\u57fa\u672c\u77e5\u8bc6\u90e8\u5206\u9898\u76ee\u90fd\u6cc4\u5b8c\u4e86\uff0c\u771f\u5047\u672a\u77e5","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"OS%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/index.html#_1","text":"lz\u662fjjm\u8001\u5e08\u73ed\u7ea7\u7684\uff0c\u7ed9\u5206\u5f88\u597d\uff0c\u4e8b\u60c5\u76f8\u5bf9\u4e8e\u6559\u6539\u73ed\u6bd4\u8f83\u5c11 \u671f\u672b\u8003\u8bd5\uff1a \u671f\u672b\u8003\u603b\u4f53\u96be\u5ea6\u4e00\u822c\uff0clz\u8ba4\u4e3a\u5df2\u7ecf\u662f\u672c\u5b66\u671f\u6700\u53cb\u5584\u7684\u4e00\u95e8\u8003\u8bd5\u4e86 \u6c42\u662f\u6f6eGitHub\u7684repo\u4e0a\u4f3c\u4e4e\u6709\u4e00\u4efdA4\u7eb8\u4e2d\u6709\u5f88\u591a\u8003\u8bd5\u539f\u9898\uff0c\u53ef\u60dclz\u6ca1\u6253\u5370\u8fd9\u4e00\u4efdA4\u7eb8 \u9009\u8bfe\uff1a lz\u662fjjm\u73ed\u7684\uff0c\u603b\u7684\u6765\u8bf4\u5e73\u65f6\u4e8b\u60c5\u6bd4\u8f83\u5c11(\u76f8\u6bd4\u6559\u6539\u73ed)\uff0c\u5f53\u7136\u8fd8\u6709\u4e8b\u60c5\u66f4\u5c11\u7684\u73ed\u7ea7\uff0c\u542c\u8bf4ws\u73ed\u4e09\u4e2a\u5b9e\u9a8c\u53ef\u4ee5\u7ec4\u961f\u505a\uff0cjjm\u73ed\u90fd\u662f\u4e00\u4e2a\u4eba\u505a\u7684 jjm\u73ed\u5e73\u65f6\u4f5c\u4e1a\u6709\u4e0d\u5c11\u9009\u62e9\u9898\uff0c\u8c8c\u4f3c\u6709\u4e0d\u5c11\u5728\u671f\u672b\u8003\u8bd5\u4e2d\u51fa\u73b0\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u7ec3\u4e60\u9898\u5728\u6c42\u662f\u6f6e\u7684repo\u4e0a\u9762\u4e5f\u53ef\u4ee5\u627e\u5230\uff0c\u63a8\u8350\u8003\u524d\u5237\u4e00\u5237 \u81f3\u4e8e\u6559\u6539\u73ed\uff0clz\u5df2\u7ecf\u542c\u4e0d\u5c11\u4eba\u5410\u69fd\u8fc7\u6559\u6539\u73ed\u7684lab\u975e\u5e38\u79bb\u8c31\uff0c\u5de5\u4f5c\u91cf\u975e\u5e38\u5927\uff0c\u53cd\u6b63lz\u8fd9\u6837\u7684\u83dc\u6bd4\u662f\u4e0d\u6562\u9009\u6559\u6539\u73ed\uff0c\u7ed9\u5206\u4e5f\u4e0d\u77e5\u9053\u5982\u4f55\uff08\u4e2a\u4eba\u8ba4\u4e3ajjm\u73ed\u7ed9\u5206\u8f83\u597d\uff09\uff0c\u6559\u6539\u73ed\u9009\u624b\u53ef\u4ee5\u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u7684\u5b66\u4e60\u4f53\u9a8c \u4e0d\u8fc7\u4f3c\u4e4e\u542c\u8bf4 \u4e0b\u6b21\u79cb\u51ac\u5b66\u671f\u6559\u6539\u73ed\u7684lab\u8981\u63a8\u5e7f\u5230\u6240\u6709\u73ed\u7ea7 \u4e86\uff0c\u6211\u89c9\u5f97\u5230\u65f6\u5019\u4e00\u5b9a\u4f1a\u54c0\u9e3f\u904d\u91ce\uff0c\u4e0d\u8fc7\u5230\u5e95\u4f1a\u4e0d\u4f1a\u5168\u90e8\u6539\u6210\u6559\u6539\u4e5f\u5b58\u7591\uff0c\u6bd5\u7adf\u6559\u6539\u73ed\u7684lab\u771f\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u6709\u8fd9\u4e2a\u6761\u4ef6\u505a\u5b8c\u7684\uff0c\u4e0d\u8fc7\u542c\u8bf4\u6559\u6539\u73ed\u4f1a\u8bb2\u5f88\u591a\u62d3\u5c55\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u771f\u7684\u60f3\u5b66\u786c\u6838\u7684\u4e1c\u897f\u53ef\u4ee5\u8003\u8651\u9009\u6559\u6539\uff0c\u800c\u4e14\u542c\u8bf4zyj\u73ed\u6700\u540e\u628a\u671f\u672b\u8003\u8bd5\u7684Linux\u57fa\u672c\u77e5\u8bc6\u90e8\u5206\u9898\u76ee\u90fd\u6cc4\u5b8c\u4e86\uff0c\u771f\u5047\u672a\u77e5","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"PCS%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/index.html","text":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u539f\u7406 \u611f\u52a8\u8f6f\u5de5\u5341\u5927sb\u8bfe\u524d\u4e94\u540d 2019-2020\u6625\u590f\u5b66\u4e60\uff0c\u697c\u5b66\u5e86\u8001\u5e08\u73ed \u8fd9\u95e8\u8bfe\u53ea\u6709\u8f6f\u5de5\u7684\u540c\u5b66\u5fc5\u4fee\uff0c\u5e76\u4e14\u53ea\u5f00\u8fd9\u4e00\u4e2a\u73ed\uff0c\u56e0\u6b64\u5efa\u8bae \u653e\u5f03\u5e7b\u60f3\uff0c\u51c6\u5907\u6597\u4e89 \u697csir \u57fa\u672c\u5b8c\u5168\u4e0d\u4f1a\u770b\u5e73\u65f6\u4f5c\u4e1a \uff0c\u56e0\u6b64\u5bf9\u4e8e\u5e73\u65f6\u4f5c\u4e1a \u4e0d\u7528\u592a\u4e0a\u5fc3 \uff0c\u867d\u7136\u524d\u671f\u91cf\u4f1a\u6bd4\u8f83\u5927 \u53e6\u5916\u542c\u8bf4\u4ee5\u5f80\u90fd\u6709\u671f\u4e2d\u8003\u8bd5\uff0c\u4e5f\u8981\u597d\u597d\u51c6\u5907\u4e00\u4e0b \u4eca\u5e74\u56e0\u4e3a\u75ab\u60c5\u539f\u56e0\u671f\u4e2d\u8003\u8bd5\u4e00\u76f4\u62d6\u7740\uff0c\u6700\u540e\u5c31\u6ca1\u4e86 \u4e0d\u7ba1\u5f00\u5b66\u7684\u65f6\u5019\u4ed6\u5bf9\u540c\u5b66\u8bf4\u7684\u6210\u7ee9\u6bd4\u4f8b\u662f\u591a\u5c11\uff0c\u6700\u540e\u4e00\u5b9a\u4f1a\u53d8\u6210 \u671f\u672b\u536070% \uff0c\u56e0\u6b64\u8981 \u683c\u5916\u91cd\u89c6\u8fd9\u95e8\u8bfe\u7684\u671f\u672b\u8003\u8bd5 \u4f46\u8fd9\u95e8\u8bfe\u76f8\u6bd4\u4e8e\u5176\u4ed6\u56db\u5b66\u5206\u7684\u4e13\u4e1a\u6838\u5fc3\u8bfe\u7a0b\u800c\u8a00\uff0c \u96be\u5ea6\u6bd4\u8f83\u4f4e\uff0c\u5e76\u4e14\u8003\u8bd5\u6bd4CS\u7684\u8ba1\u7ec4\u8981\u7b80\u5355 \u8003\u8bd5\u7684\u7279\u70b9\u662f \u8003\u5bdf\u7684\u70b9\u6bd4\u8f83\u7ec6 \uff0c\u6709\u9009\u62e9\u9898\u548c\u5927\u9898\uff0c\u5927\u9898\u8003\u70b9\u6bd4\u8f83\u56fa\u5b9a\uff0c\u9009\u62e9\u9898\u8003\u7684\u6bd4\u8f83\u7ec6 \u53e6\u5916\u8003\u8bd5\u4e0d\u4f1a\u8c03\u5206\uff0c\u7ed9\u5206\u5176\u5b9e\u6bd4\u8f83\u7cdf\u7cd5\uff0c70%\u7684\u6bd4\u4f8b\u4e00\u4e0d\u614e\u5c31\u4f1a\u62ff\u4f4e\u5206 ~~\u597d\u5728\u8f6f\u5de5\u90fd\u8981\u4fee\u8fd9\u95e8\u8bfe\uff0c\u4e00\u4e2a\u4e5f\u8dd1\u4e0d\u4e86~~ \u8003\u524d\u53ef\u4ee5\u770b\u770b\u8ba1\u7ec4\u4e4b\u7c7b\u7684\u9898\u76ee\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u738b\u9053\u8003\u7814\u4e00\u7c7b\u7684\u590d\u4e60\u8d44\u6599 \u542c\u8bf4\u660e\u5e74\u5f00\u59cb\u8ba1\u7ec4\u6539\u9769\u6210RISC-V\u4f53\u7cfb\u4e86\uff0c\u4e0d\u77e5\u9053\u8fd9\u95e8\u8bfe\u4f1a\u4e0d\u4f1a\u4e5f\u8fdb\u884c\u6539\u9769\uff0c\u5982\u679c\u4e0d\u5e78\u8fd9\u95e8\u8bfe\u4e5f\u6539\u4e86\uff0c\u90a3\u4e48\u8bf7\u91cd\u65b0\u8bc4\u4f30\u8fd9\u4e9b\u8d44\u6599\u5bf9\u8bf8\u4f4d\u7684\u53c2\u8003\u4ef7\u503c","title":"Index"},{"location":"PCS%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/index.html#_1","text":"\u611f\u52a8\u8f6f\u5de5\u5341\u5927sb\u8bfe\u524d\u4e94\u540d 2019-2020\u6625\u590f\u5b66\u4e60\uff0c\u697c\u5b66\u5e86\u8001\u5e08\u73ed \u8fd9\u95e8\u8bfe\u53ea\u6709\u8f6f\u5de5\u7684\u540c\u5b66\u5fc5\u4fee\uff0c\u5e76\u4e14\u53ea\u5f00\u8fd9\u4e00\u4e2a\u73ed\uff0c\u56e0\u6b64\u5efa\u8bae \u653e\u5f03\u5e7b\u60f3\uff0c\u51c6\u5907\u6597\u4e89 \u697csir \u57fa\u672c\u5b8c\u5168\u4e0d\u4f1a\u770b\u5e73\u65f6\u4f5c\u4e1a \uff0c\u56e0\u6b64\u5bf9\u4e8e\u5e73\u65f6\u4f5c\u4e1a \u4e0d\u7528\u592a\u4e0a\u5fc3 \uff0c\u867d\u7136\u524d\u671f\u91cf\u4f1a\u6bd4\u8f83\u5927 \u53e6\u5916\u542c\u8bf4\u4ee5\u5f80\u90fd\u6709\u671f\u4e2d\u8003\u8bd5\uff0c\u4e5f\u8981\u597d\u597d\u51c6\u5907\u4e00\u4e0b \u4eca\u5e74\u56e0\u4e3a\u75ab\u60c5\u539f\u56e0\u671f\u4e2d\u8003\u8bd5\u4e00\u76f4\u62d6\u7740\uff0c\u6700\u540e\u5c31\u6ca1\u4e86 \u4e0d\u7ba1\u5f00\u5b66\u7684\u65f6\u5019\u4ed6\u5bf9\u540c\u5b66\u8bf4\u7684\u6210\u7ee9\u6bd4\u4f8b\u662f\u591a\u5c11\uff0c\u6700\u540e\u4e00\u5b9a\u4f1a\u53d8\u6210 \u671f\u672b\u536070% \uff0c\u56e0\u6b64\u8981 \u683c\u5916\u91cd\u89c6\u8fd9\u95e8\u8bfe\u7684\u671f\u672b\u8003\u8bd5 \u4f46\u8fd9\u95e8\u8bfe\u76f8\u6bd4\u4e8e\u5176\u4ed6\u56db\u5b66\u5206\u7684\u4e13\u4e1a\u6838\u5fc3\u8bfe\u7a0b\u800c\u8a00\uff0c \u96be\u5ea6\u6bd4\u8f83\u4f4e\uff0c\u5e76\u4e14\u8003\u8bd5\u6bd4CS\u7684\u8ba1\u7ec4\u8981\u7b80\u5355 \u8003\u8bd5\u7684\u7279\u70b9\u662f \u8003\u5bdf\u7684\u70b9\u6bd4\u8f83\u7ec6 \uff0c\u6709\u9009\u62e9\u9898\u548c\u5927\u9898\uff0c\u5927\u9898\u8003\u70b9\u6bd4\u8f83\u56fa\u5b9a\uff0c\u9009\u62e9\u9898\u8003\u7684\u6bd4\u8f83\u7ec6 \u53e6\u5916\u8003\u8bd5\u4e0d\u4f1a\u8c03\u5206\uff0c\u7ed9\u5206\u5176\u5b9e\u6bd4\u8f83\u7cdf\u7cd5\uff0c70%\u7684\u6bd4\u4f8b\u4e00\u4e0d\u614e\u5c31\u4f1a\u62ff\u4f4e\u5206 ~~\u597d\u5728\u8f6f\u5de5\u90fd\u8981\u4fee\u8fd9\u95e8\u8bfe\uff0c\u4e00\u4e2a\u4e5f\u8dd1\u4e0d\u4e86~~ \u8003\u524d\u53ef\u4ee5\u770b\u770b\u8ba1\u7ec4\u4e4b\u7c7b\u7684\u9898\u76ee\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u738b\u9053\u8003\u7814\u4e00\u7c7b\u7684\u590d\u4e60\u8d44\u6599 \u542c\u8bf4\u660e\u5e74\u5f00\u59cb\u8ba1\u7ec4\u6539\u9769\u6210RISC-V\u4f53\u7cfb\u4e86\uff0c\u4e0d\u77e5\u9053\u8fd9\u95e8\u8bfe\u4f1a\u4e0d\u4f1a\u4e5f\u8fdb\u884c\u6539\u9769\uff0c\u5982\u679c\u4e0d\u5e78\u8fd9\u95e8\u8bfe\u4e5f\u6539\u4e86\uff0c\u90a3\u4e48\u8bf7\u91cd\u65b0\u8bc4\u4f30\u8fd9\u4e9b\u8d44\u6599\u5bf9\u8bf8\u4f4d\u7684\u53c2\u8003\u4ef7\u503c","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u539f\u7406"},{"location":"PIS%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%8E%9F%E7%90%86/index.html","text":"\u4fe1\u606f\u5b89\u5168\u539f\u7406 2019-2020\u6625\u590f\u5b66\u671f\uff0c\u8521\u4eae\u8001\u5e08 \u4ee5\u540e\u53ef\u80fd\u8521\u4eae\u8001\u5e08\u4e0d\u5f00\u8bfe\u4e86\uff0c\u56e0\u6b64\u5185\u5bb9\u4f1a\u4e0d\u592a\u4e00\u6837 \u56e0\u4e3a\u75ab\u60c5\u539f\u56e0\u672c\u6765\u7684\u8003\u8bd5\u4e5f\u53d6\u6d88\u4e86\uff0c\u56e0\u6b64\u5f88\u6c34\uff0c\u53ea\u6709\u4e24\u6b21\u5c0f\u4f5c\u4e1a+\u4e00\u4e2a\u7ec4\u961fproject\uff0c\u4e0d\u8fc7\u6211\u4eec\u7ec4\u7684project\u505a\u7684\u6bd4\u8f83\u6c34","title":"\u4fe1\u606f\u5b89\u5168\u539f\u7406"},{"location":"PIS%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%8E%9F%E7%90%86/index.html#_1","text":"2019-2020\u6625\u590f\u5b66\u671f\uff0c\u8521\u4eae\u8001\u5e08 \u4ee5\u540e\u53ef\u80fd\u8521\u4eae\u8001\u5e08\u4e0d\u5f00\u8bfe\u4e86\uff0c\u56e0\u6b64\u5185\u5bb9\u4f1a\u4e0d\u592a\u4e00\u6837 \u56e0\u4e3a\u75ab\u60c5\u539f\u56e0\u672c\u6765\u7684\u8003\u8bd5\u4e5f\u53d6\u6d88\u4e86\uff0c\u56e0\u6b64\u5f88\u6c34\uff0c\u53ea\u6709\u4e24\u6b21\u5c0f\u4f5c\u4e1a+\u4e00\u4e2a\u7ec4\u961fproject\uff0c\u4e0d\u8fc7\u6211\u4eec\u7ec4\u7684project\u505a\u7684\u6bd4\u8f83\u6c34","title":"\u4fe1\u606f\u5b89\u5168\u539f\u7406"},{"location":"SEM%26SRE-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%26%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/index.html","text":"\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406&\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b \u5c0f\u7ec4\u9879\u76ee\u768424\u7bc7\u6587\u6863\uff0c\u5176\u4e2d\u6709\u51e0\u7bc7\u662f\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u65b0\u589e\u7684\u6587\u6863\uff0c\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u5e76\u6ca1\u6709\u8981\u6c42 2020-2021\u5e74\u5ea6\u7684\u9879\u76ee\u4e3b\u9898\u662f\u7ebf\u4e0a\u6559\u5b66\u7cfb\u7edf \u4e00\u4e9btips \u7a76\u6781\u50bb\u903c\u8bfe\uff0c\u65f6\u95f4\u82b1\u7684\u8d8a\u591a\u8d8a\u4e8f\uff0c\u6574\u4e2a\u73ed\u8ddf\u7740\u51e0\u4e2a\u8001\u5e08\u778e\u6298\u817e\u4e86\u534a\u5929\uff0c \u6700\u540e\u6210\u7ee9\u51fa\u6765\u4e0a\u56db\u7684\u4eba\u5be5\u5be5\u65e0\u51e0 \uff0c\u5927\u90e8\u5206\u4eba\u90fd\u662f2.7-3.9\u4e4b\u95f4\u7684\u968f\u673a\u6210\u7ee9 \u5f53\u7ec4\u957f\u53ef\u80fd\u6709\u4e00\u5b9a\u52a0\u5206\uff0c\u4eb2\u6d4b\u6bcf\u95e8\u8bfe\u5404\u67093\u5206\u5de6\u53f3\u7684\u52a0\u5206 \u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u7684\u7ed9\u5206\u6bd4\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u597d\u5f88\u591a\uff0c\u5c5e\u4e8e\u4e13\u4e1a\u8bfe\u4e2d\u4e0a\u6c34\u5e73\uff0c\u4e00\u822c\u4f1a\u6bd4\u8f6f\u9700\u9ad82-3\u6863 \u8f6f\u9700\u4e8b\u60c5\u975e\u5e38\u591a\u7ed9\u5206\u5dee\uff0c\u53ef\u4ee5\u4e0d\u9009\u5c3d\u91cf\u522b\u9009 \u4e00\u5b9a\u8981\u627e\u5230\u9760\u8c31\u7684\u961f\u53cb \u4e0a\u8bfe\u56de\u7b54\u95ee\u9898\u53ef\u4ee5\u52a0\u5206\uff0c\u4f46\u597d\u50cf\u6211\u4eec\u8fd9\u5c4a\u51e0\u4e4e\u6ca1\u4eba\u4e0a\u8bfe\u4e3e\u624b\uff0c\u5c31\u7b97\u6709\u4e3e\u624b\u4e5f\u662f\u540c\u51e0\u4e2a\u4eba\uff0c\u6700\u540e\u597d\u50cf\u5927\u5bb6\u90fd\u5f88\u4f4e\uff0c\u6000\u7591\u4e3e\u624b\u53d1\u8a00\u5360\u4e00\u90e8\u5206\u603b\u5206 \u5173\u4e8e\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u7684\u8bfe\u580245\u5206\u949f\u5c55\u793a\uff1a \u8001\u5e08\u8981\u6c42\u6709\u4e92\u52a8\u73af\u8282\uff0c\u53ef\u4ee5\u5b89\u6392\u9002\u5f53\u4e2a\u6570\u7684\u6258\u8fdb\u884c\u53d1\u8a00 \u8001\u5e08\u597d\u50cf\u5f88\u559c\u6b22\u5168\u82f1\u6587pre\uff0c\u6709\u7684\u7ec4\u641e\u4e86\u5168\u82f1\u6587\u7684pre\u8fd8\u51c6\u5907\u4e86\u82e5\u5e72\u8d44\u6599\uff0c\u6700\u540e\u5c55\u793a\u5f97\u5206\u5f88\u9ad8 \u5173\u4e8e\u9700\u6c42\u8bbf\u8c08\uff1a \u51c6\u5907\u51e0\u4e2a\u95ee\u9898\u548c\u5927\u81f4\u7684\u8bbf\u8c08\u63d0\u7eb2\uff0c\u4e0d\u8fc7\u53cd\u6b63\u53bb\u4e86\u4e5f\u662f\u542c\u8001\u5e08\u4e71\u63d0\u9700\u6c42\u778e\u6bd4\u6bd4 \u641e\u4e86\u534a\u5929\u8fd9\u4e00\u90e8\u5206\u53ef\u80fd\u8ddf\u671f\u672b\u5206\u6570\u6ca1\u4ec0\u4e48\u5927\u7684\u5173\u7cfb \u5173\u4e8e\u5199\u5783\u573e\u6587\u6863\uff1a \u6ce8\u610f\u6587\u6863\u7684\u590d\u7528 \uff0c\u5f88\u591a \u4e0d\u540c\u7684\u6587\u6863\u4e2d\u4f1a\u6709\u82e5\u5e72\u4e2a\u90e8\u5206\u7684\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u81ea\u5df1\u5199\u597d\u7684\u6587\u6863 1.5\u500d\u884c\u95f4\u8ddd\u53ef\u4ee5\u8ba9\u6587\u6863\u770b\u8d77\u6765\u603b\u9875\u6570\u66f4\u591a \u5173\u4e8e\u6700\u540e\u5c55\u793a \u8001\u5e08\u4f1a\u968f\u673a\u53eb\u4eba\u63d0\u95ee\uff0c\u6700\u597d\u51c6\u5907\u82e5\u5e72\u5b89\u6392\u597d\u7684\u6258\uff0c\u65b9\u4fbf\u63d0\u95ee \u8fd9\u51e0\u4e2a\u8001\u5e08\u65e2\u4e0d\u61c2\u9700\u6c42\u5206\u6790\u53c8\u4e0d\u61c2\u5b9e\u9645\u7684\u5f00\u53d1\uff0c\u53ef\u4ee5\u5927\u80c6\u778e\u5439 \u6700\u540e\u7684\u7cfb\u7edf\u53ef\u4ee5\u4e0d\u5b8c\u5168\u5b9e\u73b0\u6240\u6709\u529f\u80fd\uff0c\u53ef\u4ee5\u5f55\u89c6\u9891\u5c55\u793a","title":"\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406&\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b"},{"location":"SEM%26SRE-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%26%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/index.html#_1","text":"\u5c0f\u7ec4\u9879\u76ee\u768424\u7bc7\u6587\u6863\uff0c\u5176\u4e2d\u6709\u51e0\u7bc7\u662f\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u65b0\u589e\u7684\u6587\u6863\uff0c\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u5e76\u6ca1\u6709\u8981\u6c42 2020-2021\u5e74\u5ea6\u7684\u9879\u76ee\u4e3b\u9898\u662f\u7ebf\u4e0a\u6559\u5b66\u7cfb\u7edf \u4e00\u4e9btips \u7a76\u6781\u50bb\u903c\u8bfe\uff0c\u65f6\u95f4\u82b1\u7684\u8d8a\u591a\u8d8a\u4e8f\uff0c\u6574\u4e2a\u73ed\u8ddf\u7740\u51e0\u4e2a\u8001\u5e08\u778e\u6298\u817e\u4e86\u534a\u5929\uff0c \u6700\u540e\u6210\u7ee9\u51fa\u6765\u4e0a\u56db\u7684\u4eba\u5be5\u5be5\u65e0\u51e0 \uff0c\u5927\u90e8\u5206\u4eba\u90fd\u662f2.7-3.9\u4e4b\u95f4\u7684\u968f\u673a\u6210\u7ee9 \u5f53\u7ec4\u957f\u53ef\u80fd\u6709\u4e00\u5b9a\u52a0\u5206\uff0c\u4eb2\u6d4b\u6bcf\u95e8\u8bfe\u5404\u67093\u5206\u5de6\u53f3\u7684\u52a0\u5206 \u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u7684\u7ed9\u5206\u6bd4\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u597d\u5f88\u591a\uff0c\u5c5e\u4e8e\u4e13\u4e1a\u8bfe\u4e2d\u4e0a\u6c34\u5e73\uff0c\u4e00\u822c\u4f1a\u6bd4\u8f6f\u9700\u9ad82-3\u6863 \u8f6f\u9700\u4e8b\u60c5\u975e\u5e38\u591a\u7ed9\u5206\u5dee\uff0c\u53ef\u4ee5\u4e0d\u9009\u5c3d\u91cf\u522b\u9009 \u4e00\u5b9a\u8981\u627e\u5230\u9760\u8c31\u7684\u961f\u53cb \u4e0a\u8bfe\u56de\u7b54\u95ee\u9898\u53ef\u4ee5\u52a0\u5206\uff0c\u4f46\u597d\u50cf\u6211\u4eec\u8fd9\u5c4a\u51e0\u4e4e\u6ca1\u4eba\u4e0a\u8bfe\u4e3e\u624b\uff0c\u5c31\u7b97\u6709\u4e3e\u624b\u4e5f\u662f\u540c\u51e0\u4e2a\u4eba\uff0c\u6700\u540e\u597d\u50cf\u5927\u5bb6\u90fd\u5f88\u4f4e\uff0c\u6000\u7591\u4e3e\u624b\u53d1\u8a00\u5360\u4e00\u90e8\u5206\u603b\u5206 \u5173\u4e8e\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u7684\u8bfe\u580245\u5206\u949f\u5c55\u793a\uff1a \u8001\u5e08\u8981\u6c42\u6709\u4e92\u52a8\u73af\u8282\uff0c\u53ef\u4ee5\u5b89\u6392\u9002\u5f53\u4e2a\u6570\u7684\u6258\u8fdb\u884c\u53d1\u8a00 \u8001\u5e08\u597d\u50cf\u5f88\u559c\u6b22\u5168\u82f1\u6587pre\uff0c\u6709\u7684\u7ec4\u641e\u4e86\u5168\u82f1\u6587\u7684pre\u8fd8\u51c6\u5907\u4e86\u82e5\u5e72\u8d44\u6599\uff0c\u6700\u540e\u5c55\u793a\u5f97\u5206\u5f88\u9ad8 \u5173\u4e8e\u9700\u6c42\u8bbf\u8c08\uff1a \u51c6\u5907\u51e0\u4e2a\u95ee\u9898\u548c\u5927\u81f4\u7684\u8bbf\u8c08\u63d0\u7eb2\uff0c\u4e0d\u8fc7\u53cd\u6b63\u53bb\u4e86\u4e5f\u662f\u542c\u8001\u5e08\u4e71\u63d0\u9700\u6c42\u778e\u6bd4\u6bd4 \u641e\u4e86\u534a\u5929\u8fd9\u4e00\u90e8\u5206\u53ef\u80fd\u8ddf\u671f\u672b\u5206\u6570\u6ca1\u4ec0\u4e48\u5927\u7684\u5173\u7cfb \u5173\u4e8e\u5199\u5783\u573e\u6587\u6863\uff1a","title":"\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406&amp;\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b"},{"location":"SEM%26SRE-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%26%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/index.html#_2","text":"1.5\u500d\u884c\u95f4\u8ddd\u53ef\u4ee5\u8ba9\u6587\u6863\u770b\u8d77\u6765\u603b\u9875\u6570\u66f4\u591a \u5173\u4e8e\u6700\u540e\u5c55\u793a \u8001\u5e08\u4f1a\u968f\u673a\u53eb\u4eba\u63d0\u95ee\uff0c\u6700\u597d\u51c6\u5907\u82e5\u5e72\u5b89\u6392\u597d\u7684\u6258\uff0c\u65b9\u4fbf\u63d0\u95ee \u8fd9\u51e0\u4e2a\u8001\u5e08\u65e2\u4e0d\u61c2\u9700\u6c42\u5206\u6790\u53c8\u4e0d\u61c2\u5b9e\u9645\u7684\u5f00\u53d1\uff0c\u53ef\u4ee5\u5927\u80c6\u778e\u5439 \u6700\u540e\u7684\u7cfb\u7edf\u53ef\u4ee5\u4e0d\u5b8c\u5168\u5b9e\u73b0\u6240\u6709\u529f\u80fd\uff0c\u53ef\u4ee5\u5f55\u89c6\u9891\u5c55\u793a","title":"\u6ce8\u610f\u6587\u6863\u7684\u590d\u7528\uff0c\u5f88\u591a\u4e0d\u540c\u7684\u6587\u6863\u4e2d\u4f1a\u6709\u82e5\u5e72\u4e2a\u90e8\u5206\u7684\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u81ea\u5df1\u5199\u597d\u7684\u6587\u6863"},{"location":"SEM%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86/index.html","text":"\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406 \u91d1\u6ce2\u548c\u90b5\u5065\u8001\u5e08\u4e3b\u8bb2\uff0c\u4e0a\u8bfe\u57fa\u672c\u4ee5\u778e\u626f\u4e3a\u4e3b\uff0c\u6ca1\u4ec0\u4e48\u4eba\u542c\u8bfe \u5f00\u5b66\u7684\u65f6\u5019\u66fe\u8bf4\u70b9\u540d\u4e00\u6b215\u5206\uff0c\u4f46\u4e00\u5b66\u671f\u4e0b\u6765\u4f3c\u4e4e\u6ca1\u6709\u70b9\u8fc7\u540d \u8fd9\u95e8\u8bfe\u548c\u9694\u58c1\u300a\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u300b\u6709\u4e00\u90e8\u5206\u5185\u5bb9\u662f\u5171\u4eab\u7684\uff0c\u4e24\u95e8\u8bfe\u8981\u6c42\u7ec4\u540c\u4e00\u4e2a\u961f\u4f0d\uff0c\u53ea\u4fee\u4e00\u95e8\u7684\u4eba\u4f1a\u88ab\u641e\u51fa\u6765\u5355\u72ec\u7ec4\u961f\uff0c\u56e0\u6b64\u4e5f\u662f6\u4eba\u4e00\u7ec4 \u7ec4\u957f\u6709\u4e00\u5b9a\u7684\u52a0\u5206\uff0c\u5927\u7ea63\u5206\u5de6\u53f3 \u5f53\u8bfe\u4ee3\u8868\u4f1a\u6709\u5f88\u9ad8\u7684\u52a0\u5206\uff0c\u5927\u7ea68\u5206\uff0c\u6211\u5ba4\u53cb\u662f\u8bfe\u4ee3\u8868\u6700\u540e\u6210\u7ee999\uff0c\u8fd9\u95e8\u8bfe\u662f3.5\u5b66\u5206\u7684\u8bfe\uff0c\u600e\u4e48\u505a\u5927\u5bb6\u81ea\u5df1\u6743\u8861\uff0c\u867d\u7136\u5f53\u8bfe\u4ee3\u8868\u9700\u8981\u5e2e\u8001\u5e08\u6279\u6539\u4f5c\u4e1a\u548c\u7edf\u8ba1\u6210\u7ee9(\u66f4\u50cf\u662f\u52a9\u6559) \u5c0f\u7ec4\u4f5c\u4e1a\u5927\u90e8\u5206\u5185\u5bb9\u548c\u8f6f\u9700\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u5199\u6587\u6863\uff0c\u4e24\u95e8\u8bfe\u5927\u7ea6\u670910\u591a\u7bc7\u6587\u6863\u662f\u5171\u4eab\u7684\uff0c\u4e5f\u5c31\u662f\u4e00\u4efd\u6587\u6863\u4f5c\u4e3a\u4e24\u95e8\u8bfe\u7684\u4f5c\u4e1a \u8f6f\u5de5\u7ba1\u53e6\u6709\u56db\u4efd\u4e13\u5c5e\u6587\u6863\uff0c\u6211\u4eec\u8fd9\u5c4a\u662f\u7b2c\u4e00\u6b21\u65b0\u589e\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u5f80\u5c4a\u4f3c\u4e4e\u6ca1\u6709 \u5efa\u8bae\u591a\u53c2\u8003\u5b66\u957f\u5b66\u59d0\u5f80\u5c4a\u6587\u6863 \u53e6\u5916\u8fd8\u6709\u4e09\u6b21\u4e2a\u4eba\u4f5c\u4e1a\uff0c\u5360\u603b\u6210\u7ee930\u5206\uff0c\u4e5f\u662f\u5199\u6587\u6863\uff0c\u5efa\u8bae\u591a\u53c2\u8003\u5b66\u957f\u5b66\u59d0\u7684\u4f5c\u4e1a\uff0c\u5927\u5bb6\u90fd\u662f\u8fd9\u4e48\u8fc7\u6765\u7684 \u8be5\u8bfe\u7a0b\u7ed9\u5206\u6bd4\u8f6f\u9700\u9ad8\u5927\u7ea62-3\u4e2a\u7b49\u7ea7\uff0c\u5982\u679c\u6709\u6761\u4ef6\u7684\u5efa\u8bae\u4ee5\u540e\u4e0d\u8981\u9009\u8f6f\u9700 \u4eca\u5e74\u65b0\u589e\u4e86\u4e00\u9879\u9879\u76ee\u4e2d\u671f\u68c0\u67e5\uff0c\u8001\u5e08\u4f1a\u5728\u4e0a\u673a\u8bfe\u7684\u65f6\u5019\u68c0\u67e5\u5c0f\u7ec4\u7684\u6587\u6863\u548c\u4ee3\u7801\u8fdb\u5ea6\uff0c\u4ee5\u53ca\u5c0f\u7ec4\u5206\u5de5\u5408\u4f5c\u7684\u60c5\u51b5 \u603b\u7684\u6765\u8bf4\u6bd4\u8f83\u6c34\uff0c\u4f46\u662f\u4e5f\u5b66\u4e0d\u5230\u4ec0\u4e48\u4e1c\u897f\uff0c\u5927\u6982\u5c31\u662f\u8fd9\u6837","title":"\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406"},{"location":"SEM%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86/index.html#_1","text":"\u91d1\u6ce2\u548c\u90b5\u5065\u8001\u5e08\u4e3b\u8bb2\uff0c\u4e0a\u8bfe\u57fa\u672c\u4ee5\u778e\u626f\u4e3a\u4e3b\uff0c\u6ca1\u4ec0\u4e48\u4eba\u542c\u8bfe \u5f00\u5b66\u7684\u65f6\u5019\u66fe\u8bf4\u70b9\u540d\u4e00\u6b215\u5206\uff0c\u4f46\u4e00\u5b66\u671f\u4e0b\u6765\u4f3c\u4e4e\u6ca1\u6709\u70b9\u8fc7\u540d \u8fd9\u95e8\u8bfe\u548c\u9694\u58c1\u300a\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u300b\u6709\u4e00\u90e8\u5206\u5185\u5bb9\u662f\u5171\u4eab\u7684\uff0c\u4e24\u95e8\u8bfe\u8981\u6c42\u7ec4\u540c\u4e00\u4e2a\u961f\u4f0d\uff0c\u53ea\u4fee\u4e00\u95e8\u7684\u4eba\u4f1a\u88ab\u641e\u51fa\u6765\u5355\u72ec\u7ec4\u961f\uff0c\u56e0\u6b64\u4e5f\u662f6\u4eba\u4e00\u7ec4 \u7ec4\u957f\u6709\u4e00\u5b9a\u7684\u52a0\u5206\uff0c\u5927\u7ea63\u5206\u5de6\u53f3 \u5f53\u8bfe\u4ee3\u8868\u4f1a\u6709\u5f88\u9ad8\u7684\u52a0\u5206\uff0c\u5927\u7ea68\u5206\uff0c\u6211\u5ba4\u53cb\u662f\u8bfe\u4ee3\u8868\u6700\u540e\u6210\u7ee999\uff0c\u8fd9\u95e8\u8bfe\u662f3.5\u5b66\u5206\u7684\u8bfe\uff0c\u600e\u4e48\u505a\u5927\u5bb6\u81ea\u5df1\u6743\u8861\uff0c\u867d\u7136\u5f53\u8bfe\u4ee3\u8868\u9700\u8981\u5e2e\u8001\u5e08\u6279\u6539\u4f5c\u4e1a\u548c\u7edf\u8ba1\u6210\u7ee9(\u66f4\u50cf\u662f\u52a9\u6559) \u5c0f\u7ec4\u4f5c\u4e1a\u5927\u90e8\u5206\u5185\u5bb9\u548c\u8f6f\u9700\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u5199\u6587\u6863\uff0c\u4e24\u95e8\u8bfe\u5927\u7ea6\u670910\u591a\u7bc7\u6587\u6863\u662f\u5171\u4eab\u7684\uff0c\u4e5f\u5c31\u662f\u4e00\u4efd\u6587\u6863\u4f5c\u4e3a\u4e24\u95e8\u8bfe\u7684\u4f5c\u4e1a \u8f6f\u5de5\u7ba1\u53e6\u6709\u56db\u4efd\u4e13\u5c5e\u6587\u6863\uff0c\u6211\u4eec\u8fd9\u5c4a\u662f\u7b2c\u4e00\u6b21\u65b0\u589e\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u5f80\u5c4a\u4f3c\u4e4e\u6ca1\u6709 \u5efa\u8bae\u591a\u53c2\u8003\u5b66\u957f\u5b66\u59d0\u5f80\u5c4a\u6587\u6863 \u53e6\u5916\u8fd8\u6709\u4e09\u6b21\u4e2a\u4eba\u4f5c\u4e1a\uff0c\u5360\u603b\u6210\u7ee930\u5206\uff0c\u4e5f\u662f\u5199\u6587\u6863\uff0c\u5efa\u8bae\u591a\u53c2\u8003\u5b66\u957f\u5b66\u59d0\u7684\u4f5c\u4e1a\uff0c\u5927\u5bb6\u90fd\u662f\u8fd9\u4e48\u8fc7\u6765\u7684 \u8be5\u8bfe\u7a0b\u7ed9\u5206\u6bd4\u8f6f\u9700\u9ad8\u5927\u7ea62-3\u4e2a\u7b49\u7ea7\uff0c\u5982\u679c\u6709\u6761\u4ef6\u7684\u5efa\u8bae\u4ee5\u540e\u4e0d\u8981\u9009\u8f6f\u9700 \u4eca\u5e74\u65b0\u589e\u4e86\u4e00\u9879\u9879\u76ee\u4e2d\u671f\u68c0\u67e5\uff0c\u8001\u5e08\u4f1a\u5728\u4e0a\u673a\u8bfe\u7684\u65f6\u5019\u68c0\u67e5\u5c0f\u7ec4\u7684\u6587\u6863\u548c\u4ee3\u7801\u8fdb\u5ea6\uff0c\u4ee5\u53ca\u5c0f\u7ec4\u5206\u5de5\u5408\u4f5c\u7684\u60c5\u51b5 \u603b\u7684\u6765\u8bf4\u6bd4\u8f83\u6c34\uff0c\u4f46\u662f\u4e5f\u5b66\u4e0d\u5230\u4ec0\u4e48\u4e1c\u897f\uff0c\u5927\u6982\u5c31\u662f\u8fd9\u6837","title":"\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406"},{"location":"SP%E5%AE%89%E5%85%A8%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/index.html","text":"\u5b89\u5168\u7f16\u7a0b\u6280\u672f \u80e1\u5929\u78ca\u8001\u5e08\uff0c2019-2020\u5b66\u5e74\u590f\u5b66\u671f \u9762\u5411\u8f6f\u5de5/\u4fe1\u5b89\u7684\u4fe1\u606f\u5b89\u5168\u5165\u95e8\u8bfe\u7a0b\uff0c\u5185\u5bb9\u6bd4\u8f83\u5e7f\uff0c\u8001\u5e08\u8bb2\u7684\u5f88\u597d\uff0c\u8ba4\u771f\u5b66\u53ef\u4ee5\u5b66\u5230\u5f88\u591a\u4e1c\u897f\uff0c\u7ed9\u5206\u4e5f\u5f88\u597d \u8bfe\u7a0b\u4f5c\u4e1a\u4e3b\u8981\u6709 \u53d1\u8a0010%\uff0c\u4e00\u6b21\u5927\u6982\u67092\u5206\uff0c\u4eca\u5e74\u4e0a\u7684\u7f51\u8bfe\uff0c\u901a\u8fc7\u8fde\u9ea6\u6765\u8bfe\u524d\u53d1\u8a00\uff0c\u4e3b\u8981\u662f\u603b\u7ed3\u4e0a\u8282\u8bfe\u5b66\u4e86\u4ec0\u4e48\uff0c~~\u6bd4\u8f83\u597d\u6c34\u7684~~ \u5b9e\u9a8c90%\uff0c\u4e3b\u8981\u5206\u62103\u5927\u5757\uff0c\u53e6\u5916\u8fd8\u6709\u4e24\u4e2abonus web\u5b89\u5168 1.1 \u73af\u5883\u5b89\u88c5(\u6bd4\u5982Eclispe+Java+Tomcat) \u4e5f\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u7684web\u5f00\u53d1\u6846\u67b6\u548c\u73af\u5883\u6765\u5b89\u88c5\uff0c\u6211\u4e2a\u4eba\u7528\u7684\u662fdjango+python 1.2 \u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7ad9\uff0c\u8981\u6709\u540e\u7aef\u548c\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u4f46\u662f\u603b\u4f53\u8981\u6c42\u975e\u5e38\u4f4e\uff0c\u4e0d\u50cf\u8f6f\u5de5\u57fa\u90a3\u6837\u6709\u975e\u5e38\u5177\u4f53\u7684\u9700\u6c42\uff0c\u53ea\u662f\u4e00\u6b21\u7b80\u5355\u7684\u5c1d\u8bd5\uff0c\u968f\u4fbf\u5199\u4e00\u4e2a\u5c31\u53ef\u4ee5 1.3 SQL\u6ce8\u5165\u653b\u51fb+XSS\u653b\u51fb(\u96be\u5ea6\u6bd4\u8f83\u5927\uff0c\u8017\u65f6\u8f83\u957f) 1.4 bonus \u7f51\u7edc\u653b\u51fb BufferOverflow\u653b\u51fb 2.1 \u5b89\u88c5\u865a\u62df\u673a\u548cUbuntu\u7cfb\u7edf 2.2 GDB\u7684\u4f7f\u7528\u548c\u8c03\u8bd5 2.3 \u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb(\u96be\u5ea6\u8f83\u5927) 2.4 bonus \u683c\u5f0f\u5b57\u7b26\u4e32\u653b\u51fb \u7f16\u7a0b\u8bed\u8a00\u5b89\u5168 3.1 C\u8bed\u8a00\u7684\u9759\u6001\u5b89\u5168\u68c0\u67e5 3.2 Java\u7684\u9759\u6001\u5b89\u5168\u68c0\u67e5 \u63a8\u8350\u5b66\u6709\u4f59\u529b\u7684\u8f6f\u5de5\u540c\u5b66\u4e00\u5b9a\u8981\u9009\u8fd9\u95e8\u8bfe\uff0c\u9009\u4e86\u4e0d\u540e\u6094\uff0c\u9009\u4e86\u4e0d\u4e0a\u5f53","title":"Index"},{"location":"SP%E5%AE%89%E5%85%A8%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/index.html#_1","text":"\u80e1\u5929\u78ca\u8001\u5e08\uff0c2019-2020\u5b66\u5e74\u590f\u5b66\u671f \u9762\u5411\u8f6f\u5de5/\u4fe1\u5b89\u7684\u4fe1\u606f\u5b89\u5168\u5165\u95e8\u8bfe\u7a0b\uff0c\u5185\u5bb9\u6bd4\u8f83\u5e7f\uff0c\u8001\u5e08\u8bb2\u7684\u5f88\u597d\uff0c\u8ba4\u771f\u5b66\u53ef\u4ee5\u5b66\u5230\u5f88\u591a\u4e1c\u897f\uff0c\u7ed9\u5206\u4e5f\u5f88\u597d \u8bfe\u7a0b\u4f5c\u4e1a\u4e3b\u8981\u6709 \u53d1\u8a0010%\uff0c\u4e00\u6b21\u5927\u6982\u67092\u5206\uff0c\u4eca\u5e74\u4e0a\u7684\u7f51\u8bfe\uff0c\u901a\u8fc7\u8fde\u9ea6\u6765\u8bfe\u524d\u53d1\u8a00\uff0c\u4e3b\u8981\u662f\u603b\u7ed3\u4e0a\u8282\u8bfe\u5b66\u4e86\u4ec0\u4e48\uff0c~~\u6bd4\u8f83\u597d\u6c34\u7684~~ \u5b9e\u9a8c90%\uff0c\u4e3b\u8981\u5206\u62103\u5927\u5757\uff0c\u53e6\u5916\u8fd8\u6709\u4e24\u4e2abonus web\u5b89\u5168 1.1 \u73af\u5883\u5b89\u88c5(\u6bd4\u5982Eclispe+Java+Tomcat) \u4e5f\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u7684web\u5f00\u53d1\u6846\u67b6\u548c\u73af\u5883\u6765\u5b89\u88c5\uff0c\u6211\u4e2a\u4eba\u7528\u7684\u662fdjango+python 1.2 \u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7ad9\uff0c\u8981\u6709\u540e\u7aef\u548c\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u4f46\u662f\u603b\u4f53\u8981\u6c42\u975e\u5e38\u4f4e\uff0c\u4e0d\u50cf\u8f6f\u5de5\u57fa\u90a3\u6837\u6709\u975e\u5e38\u5177\u4f53\u7684\u9700\u6c42\uff0c\u53ea\u662f\u4e00\u6b21\u7b80\u5355\u7684\u5c1d\u8bd5\uff0c\u968f\u4fbf\u5199\u4e00\u4e2a\u5c31\u53ef\u4ee5 1.3 SQL\u6ce8\u5165\u653b\u51fb+XSS\u653b\u51fb(\u96be\u5ea6\u6bd4\u8f83\u5927\uff0c\u8017\u65f6\u8f83\u957f) 1.4 bonus \u7f51\u7edc\u653b\u51fb BufferOverflow\u653b\u51fb 2.1 \u5b89\u88c5\u865a\u62df\u673a\u548cUbuntu\u7cfb\u7edf 2.2 GDB\u7684\u4f7f\u7528\u548c\u8c03\u8bd5 2.3 \u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb(\u96be\u5ea6\u8f83\u5927) 2.4 bonus \u683c\u5f0f\u5b57\u7b26\u4e32\u653b\u51fb \u7f16\u7a0b\u8bed\u8a00\u5b89\u5168 3.1 C\u8bed\u8a00\u7684\u9759\u6001\u5b89\u5168\u68c0\u67e5 3.2 Java\u7684\u9759\u6001\u5b89\u5168\u68c0\u67e5 \u63a8\u8350\u5b66\u6709\u4f59\u529b\u7684\u8f6f\u5de5\u540c\u5b66\u4e00\u5b9a\u8981\u9009\u8fd9\u95e8\u8bfe\uff0c\u9009\u4e86\u4e0d\u540e\u6094\uff0c\u9009\u4e86\u4e0d\u4e0a\u5f53","title":"\u5b89\u5168\u7f16\u7a0b\u6280\u672f"},{"location":"SQAT%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F%E4%BF%9D%E8%AF%81%E4%B8%8E%E6%B5%8B%E8%AF%95/index.html","text":"\u8f6f\u4ef6\u8d28\u91cf\u4fdd\u8bc1\u4e0e\u6d4b\u8bd5 \u300a\u8f6f\u4ef6\u8d28\u91cf\u4fdd\u8bc1\u4e0e\u6d4b\u8bd5\u300b\u662f\u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\u7684\u4e13\u4e1a\u9009\u4fee\u8bfe\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u5fc5\u4fee\u8bfe \u6211\u4e0d\u77e5\u9053\u662f\u8c01\u8bbe\u8ba1\u51fa\u6765\u7684\u57f9\u517b\u65b9\u6848\uff0c\u7136\u800c19\u7ea7\u4e4b\u540e\u4f3c\u4e4e\u53c8\u53d8\u6210\u4e86\u9009\u4fee\u8bfe \u8bfe\u7a0b\u57fa\u672c\u60c5\u51b5 \u8fd9\u95e8\u8bfe\u4ee5\u524d\u542c\u8bf4\u662f\u4e00\u4e2a\u7231\u5c14\u5170\u7684\u8001\u5e08\u548czxq\u4e00\u8d77\u8bb2\u7684\uff0c\u4f46\u4eca\u5e74\u597d\u50cf\u53ea\u6709zxq\u4e00\u4e2a\u4eba\uff0c\u63a8\u6d4b\u662f\u56e0\u4e3a\u75ab\u60c5\u539f\u56e0\u6765\u4e0d\u4e86\u4e86\uff0c\u4f46\u671f\u672b\u8003\u8bd5\u53c8\u662fhlq\u8001\u5e08\u8d1f\u8d23\u9605\u5377 \u542c\u8bf4\u4ee5\u524d\u671f\u672b\u8003\u8bd5\u9898\u90fd\u662f\u7231\u5c14\u5170\u7684\u8001\u5e08\u51fa\u7684\uff0c\u4f46\u4eca\u5e74\u597d\u50cf\u53d8\u6210\u4e86zxq\u51fa\u9898\uff0c \u5185\u5bb9\u57fa\u672c\u5168\u90fd\u5728\u4ed6\u6700\u540e\u4e00\u8282\u8bfe\u7684PPT\u4e0a \uff0c\u524d\u9762\u51e0\u8282\u8bfe\u90fd\u662f\u778e\u626f\u6de1\uff0c\u636e\u6211\u89c2\u5bdf\u6839\u672c\u6ca1\u6709\u4eba\u5728\u542c\u4ed6\u8bb2\u8bfe \u5076\u5c14\u51e0\u8282\u8bfe\u4e5f\u4f1a\u6709\u5176\u4ed6\u7684\u8001\u5e08\u6765\u4e0a\uff0c\u4e0a\u673a\u8bfe\u4e0d\u7528\u53bb \u8bfe\u7a0b\u8003\u6838 \u4eca\u5e74\u6709\u4e24\u4e2a\u7ec4\u961f\u4f5c\u4e1a+\u4e00\u4e2a\u4e2a\u4eba\u4f5c\u4e1a \u5360\u603b\u8bc450%\uff08\u4e5f\u53ef\u80fd\u662f60%\uff09 \u4e24\u4e2a\u7ec4\u961f\u4f5c\u4e1a\u5206\u522b\u662f \u4e00\u4efd\u6d4b\u8bd5\u8ba1\u5212+\u5c55\u793aPPT\uff0c\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u6284\u53e6\u4e00\u95e8\u8bfe\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u7684\u6d4b\u8bd5\u8ba1\u5212\uff0c\u683c\u5f0f\u57fa\u672c\u4e00\u81f4\uff0c\u5c31\u662f\u8981\u7ffb\u8bd1\u6210\u82f1\u6587 \u722c\u866b\u76f8\u5173\u7684\u4f5c\u4e1a\uff0c\u67096-7\u4e2a\u4e0d\u540c\u7684\u722c\u866b\u4efb\u52a1\uff0c\u6709bonus\uff0c\u4f46\u6211\u4eec\u7ec4\u6ca1\u505a\u8fc7\uff0c\u53cd\u6b63\u9898\u76ee\u90fd\u6bd4\u8f83\u83ab\u540d\u5176\u5999\uff0c\u611f\u89c9\u50cf\u662f\u73b0\u7f16\u7684 \u4e2a\u4eba\u4f5c\u4e1a\u662f\u5b9e\u73b0\u4e00\u4e2a\u7ec4\u5408\u6d4b\u8bd5\u7684\u7b97\u6cd5+\u5b9e\u9a8c\u62a5\u544a\uff0c\u6bd4\u8d77\u8f6f\u6d4b\u66f4\u50cfds\u7f16\u7a0b\u9898 \u7ec4\u961f\u4f5c\u4e1a\u7684 \u7ec4\u957f\u5b58\u5728\u4e00\u5b9a\u98ce\u9669 \uff0c\u5982\u679c\u5c0f\u7ec4\u5f97\u5206\u9ad8\u4e8e\u5168\u73ed\u5e73\u5747\u6c34\u5e73\u53ef\u4ee5\u52a0\u5206\uff0c\u53cd\u4e4b\u53ef\u80fd\u9700\u8981\u6263\u5206 \u671f\u672b\u8003\u8bd5 \u5f00\u5377\u8003\u8bd5\uff0c\u53ef\u4ee5\u5237\u4e00\u4e0b\u5386\u5e74\u5377\uff0c\u9898\u578b\u57fa\u672c\u76f8\u4f3c\uff0c\u53ea\u6709\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u3001\u753b\u56fe\u548c\u6284\u5199PPT\u4e09\u79cd\u9898\u578b\uff0c\u4f46\u76ee\u524d\u6709\u7684\u5386\u5e74\u5377\u597d\u50cf\u90fd\u662f\u7231\u5c14\u5170\u4eba\u51fa\u7684\u9898 zxq\u51fa\u9898\u8fd9\u4e00\u6b21\u8003\u8bd5\u7684\u56de\u5fc6\u5377\u53ef\u4ee5\u770b\uff1ahttps://www.cc98.org/topic/5029365 \u4eca\u5e74\u7684\u8003\u8bd5\u4f3c\u4e4e\u5185\u5bb9\u90fd\u5728zxq\u6700\u540e\u4e00\u8282\u8bfe\u590d\u4e60PPT\u4e2d\u51fa\u73b0\u4e86 \u6700\u540e\u8003\u8bd5\u57fa\u672c\u5c31\u662f\u6bd4\u8c01\u6284\u7684\u5feb\uff0c\u4f46\u524d\u9762\u7684\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u4e2a\u4eba\u8ba4\u4e3a\u51fa\u7684\u975e\u5e38\u4e0d\u4e25\u8c28 \u4e4b\u524d\u7684\u8003\u8bd5\u6839\u636e\u5b66\u957f\u7684\u7ecf\u9a8c\u4f3c\u4e4e\u90fd\u662f\u7231\u5c14\u5170\u4ebaPPT\u4e0a\u7684\u5185\u5bb9\uff0c\u4f46\u8fd9\u4e00\u6b21\u597d\u50cf\u90fd\u662fzxq\u7684\u5185\u5bb9\uff0c\u4ee5\u540e\u5927\u5bb6\u770b\u60c5\u51b5\u6253\u5370\u590d\u4e60\u8d44\u6599\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u5806\u7231\u5c14\u5170\u4eba\u7684PPT \u4f46\u597d\u50cf\u6ca1\u4ec0\u4e48\u7528\u5904\uff0c\u6700\u540e\u90fd\u662f\u6284\u7684zxq\u7684PPT","title":"\u8f6f\u4ef6\u8d28\u91cf\u4fdd\u8bc1\u4e0e\u6d4b\u8bd5"},{"location":"SQAT%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F%E4%BF%9D%E8%AF%81%E4%B8%8E%E6%B5%8B%E8%AF%95/index.html#_1","text":"\u300a\u8f6f\u4ef6\u8d28\u91cf\u4fdd\u8bc1\u4e0e\u6d4b\u8bd5\u300b\u662f\u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\u7684\u4e13\u4e1a\u9009\u4fee\u8bfe\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u5fc5\u4fee\u8bfe \u6211\u4e0d\u77e5\u9053\u662f\u8c01\u8bbe\u8ba1\u51fa\u6765\u7684\u57f9\u517b\u65b9\u6848\uff0c\u7136\u800c19\u7ea7\u4e4b\u540e\u4f3c\u4e4e\u53c8\u53d8\u6210\u4e86\u9009\u4fee\u8bfe \u8bfe\u7a0b\u57fa\u672c\u60c5\u51b5 \u8fd9\u95e8\u8bfe\u4ee5\u524d\u542c\u8bf4\u662f\u4e00\u4e2a\u7231\u5c14\u5170\u7684\u8001\u5e08\u548czxq\u4e00\u8d77\u8bb2\u7684\uff0c\u4f46\u4eca\u5e74\u597d\u50cf\u53ea\u6709zxq\u4e00\u4e2a\u4eba\uff0c\u63a8\u6d4b\u662f\u56e0\u4e3a\u75ab\u60c5\u539f\u56e0\u6765\u4e0d\u4e86\u4e86\uff0c\u4f46\u671f\u672b\u8003\u8bd5\u53c8\u662fhlq\u8001\u5e08\u8d1f\u8d23\u9605\u5377 \u542c\u8bf4\u4ee5\u524d\u671f\u672b\u8003\u8bd5\u9898\u90fd\u662f\u7231\u5c14\u5170\u7684\u8001\u5e08\u51fa\u7684\uff0c\u4f46\u4eca\u5e74\u597d\u50cf\u53d8\u6210\u4e86zxq\u51fa\u9898\uff0c \u5185\u5bb9\u57fa\u672c\u5168\u90fd\u5728\u4ed6\u6700\u540e\u4e00\u8282\u8bfe\u7684PPT\u4e0a \uff0c\u524d\u9762\u51e0\u8282\u8bfe\u90fd\u662f\u778e\u626f\u6de1\uff0c\u636e\u6211\u89c2\u5bdf\u6839\u672c\u6ca1\u6709\u4eba\u5728\u542c\u4ed6\u8bb2\u8bfe \u5076\u5c14\u51e0\u8282\u8bfe\u4e5f\u4f1a\u6709\u5176\u4ed6\u7684\u8001\u5e08\u6765\u4e0a\uff0c\u4e0a\u673a\u8bfe\u4e0d\u7528\u53bb","title":"\u8f6f\u4ef6\u8d28\u91cf\u4fdd\u8bc1\u4e0e\u6d4b\u8bd5"},{"location":"SQAT%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F%E4%BF%9D%E8%AF%81%E4%B8%8E%E6%B5%8B%E8%AF%95/index.html#_2","text":"\u4eca\u5e74\u6709\u4e24\u4e2a\u7ec4\u961f\u4f5c\u4e1a+\u4e00\u4e2a\u4e2a\u4eba\u4f5c\u4e1a \u5360\u603b\u8bc450%\uff08\u4e5f\u53ef\u80fd\u662f60%\uff09 \u4e24\u4e2a\u7ec4\u961f\u4f5c\u4e1a\u5206\u522b\u662f \u4e00\u4efd\u6d4b\u8bd5\u8ba1\u5212+\u5c55\u793aPPT\uff0c\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u6284\u53e6\u4e00\u95e8\u8bfe\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u7684\u6d4b\u8bd5\u8ba1\u5212\uff0c\u683c\u5f0f\u57fa\u672c\u4e00\u81f4\uff0c\u5c31\u662f\u8981\u7ffb\u8bd1\u6210\u82f1\u6587 \u722c\u866b\u76f8\u5173\u7684\u4f5c\u4e1a\uff0c\u67096-7\u4e2a\u4e0d\u540c\u7684\u722c\u866b\u4efb\u52a1\uff0c\u6709bonus\uff0c\u4f46\u6211\u4eec\u7ec4\u6ca1\u505a\u8fc7\uff0c\u53cd\u6b63\u9898\u76ee\u90fd\u6bd4\u8f83\u83ab\u540d\u5176\u5999\uff0c\u611f\u89c9\u50cf\u662f\u73b0\u7f16\u7684 \u4e2a\u4eba\u4f5c\u4e1a\u662f\u5b9e\u73b0\u4e00\u4e2a\u7ec4\u5408\u6d4b\u8bd5\u7684\u7b97\u6cd5+\u5b9e\u9a8c\u62a5\u544a\uff0c\u6bd4\u8d77\u8f6f\u6d4b\u66f4\u50cfds\u7f16\u7a0b\u9898 \u7ec4\u961f\u4f5c\u4e1a\u7684 \u7ec4\u957f\u5b58\u5728\u4e00\u5b9a\u98ce\u9669 \uff0c\u5982\u679c\u5c0f\u7ec4\u5f97\u5206\u9ad8\u4e8e\u5168\u73ed\u5e73\u5747\u6c34\u5e73\u53ef\u4ee5\u52a0\u5206\uff0c\u53cd\u4e4b\u53ef\u80fd\u9700\u8981\u6263\u5206","title":"\u8bfe\u7a0b\u8003\u6838"},{"location":"SQAT%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F%E4%BF%9D%E8%AF%81%E4%B8%8E%E6%B5%8B%E8%AF%95/index.html#_3","text":"\u5f00\u5377\u8003\u8bd5\uff0c\u53ef\u4ee5\u5237\u4e00\u4e0b\u5386\u5e74\u5377\uff0c\u9898\u578b\u57fa\u672c\u76f8\u4f3c\uff0c\u53ea\u6709\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u3001\u753b\u56fe\u548c\u6284\u5199PPT\u4e09\u79cd\u9898\u578b\uff0c\u4f46\u76ee\u524d\u6709\u7684\u5386\u5e74\u5377\u597d\u50cf\u90fd\u662f\u7231\u5c14\u5170\u4eba\u51fa\u7684\u9898 zxq\u51fa\u9898\u8fd9\u4e00\u6b21\u8003\u8bd5\u7684\u56de\u5fc6\u5377\u53ef\u4ee5\u770b\uff1ahttps://www.cc98.org/topic/5029365 \u4eca\u5e74\u7684\u8003\u8bd5\u4f3c\u4e4e\u5185\u5bb9\u90fd\u5728zxq\u6700\u540e\u4e00\u8282\u8bfe\u590d\u4e60PPT\u4e2d\u51fa\u73b0\u4e86 \u6700\u540e\u8003\u8bd5\u57fa\u672c\u5c31\u662f\u6bd4\u8c01\u6284\u7684\u5feb\uff0c\u4f46\u524d\u9762\u7684\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u4e2a\u4eba\u8ba4\u4e3a\u51fa\u7684\u975e\u5e38\u4e0d\u4e25\u8c28 \u4e4b\u524d\u7684\u8003\u8bd5\u6839\u636e\u5b66\u957f\u7684\u7ecf\u9a8c\u4f3c\u4e4e\u90fd\u662f\u7231\u5c14\u5170\u4ebaPPT\u4e0a\u7684\u5185\u5bb9\uff0c\u4f46\u8fd9\u4e00\u6b21\u597d\u50cf\u90fd\u662fzxq\u7684\u5185\u5bb9\uff0c\u4ee5\u540e\u5927\u5bb6\u770b\u60c5\u51b5\u6253\u5370\u590d\u4e60\u8d44\u6599\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u5806\u7231\u5c14\u5170\u4eba\u7684PPT \u4f46\u597d\u50cf\u6ca1\u4ec0\u4e48\u7528\u5904\uff0c\u6700\u540e\u90fd\u662f\u6284\u7684zxq\u7684PPT","title":"\u671f\u672b\u8003\u8bd5"},{"location":"SRE%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/index.html","text":"\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b \u5168\u662f\u5c0f\u7ec4\u4f5c\u4e1a\uff0c20\u7bc7\u6587\u6863+\u5c0f\u7ec445\u5206\u949f\u4e13\u9898\u5c55\u793a+14\u4efd\u7ec4\u4f1a\u7eaa\u8981+\u4ee3\u7801\u5f00\u53d1+\u671f\u672b\u9a8c\u6536\u7b54\u8fa9\uff0c \u5f53\u7ec4\u957f\u6709\u52a0\u5206 UML\u90e8\u5206\u6709\u4e00\u4e2a\u4e2a\u4eba\u5c0f\u4f5c\u4e1a\uff0c\u662f\u753b\u4e00\u4e9bUML\u56fe\uff0c\u7136\u540e\u6709\u4e2a\u671f\u672b\u8003\u8bd5\uff0c\u53ef\u4ee5\u53bb98\u641c\u4e00\u4e0b\u6700\u65b0\u7684\u56de\u5fc6\u5377\uff0c\u6000\u7591\u671f\u672b\u8003\u8bd5\u53ea\u6709\u4e00\u5957\u9898\u76ee\u4e0d\u592a\u4f1a\u53d8 \u7ed9\u5206\u5f88\u5dee\uff0c\u9009\u4e4b\u524d\u4e00\u5b9a\u8981\u5f53\u5fc3\uff01\uff01\uff01\uff01\u4e0d\u8fc7\u6211\u4eec\u8fd9\u5c4a\u662f\u5fc5\u4fee\uff0c\u5927\u5bb6\u4e00\u8d77\u62ff\u4f4e\u5206\u4e5f\u4e0d\u662f\u4e0d\u884c\uff0c\u4ee5\u540e\u5982\u679c\u6539\u6210\u9009\u4fee\u90a3\u4e48\u6211\u5f3a\u70c8\u4e0d\u5efa\u8bae\u4fee\u8bfb\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u3002","title":"\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b"},{"location":"SRE%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/index.html#_1","text":"\u5168\u662f\u5c0f\u7ec4\u4f5c\u4e1a\uff0c20\u7bc7\u6587\u6863+\u5c0f\u7ec445\u5206\u949f\u4e13\u9898\u5c55\u793a+14\u4efd\u7ec4\u4f1a\u7eaa\u8981+\u4ee3\u7801\u5f00\u53d1+\u671f\u672b\u9a8c\u6536\u7b54\u8fa9\uff0c \u5f53\u7ec4\u957f\u6709\u52a0\u5206 UML\u90e8\u5206\u6709\u4e00\u4e2a\u4e2a\u4eba\u5c0f\u4f5c\u4e1a\uff0c\u662f\u753b\u4e00\u4e9bUML\u56fe\uff0c\u7136\u540e\u6709\u4e2a\u671f\u672b\u8003\u8bd5\uff0c\u53ef\u4ee5\u53bb98\u641c\u4e00\u4e0b\u6700\u65b0\u7684\u56de\u5fc6\u5377\uff0c\u6000\u7591\u671f\u672b\u8003\u8bd5\u53ea\u6709\u4e00\u5957\u9898\u76ee\u4e0d\u592a\u4f1a\u53d8 \u7ed9\u5206\u5f88\u5dee\uff0c\u9009\u4e4b\u524d\u4e00\u5b9a\u8981\u5f53\u5fc3\uff01\uff01\uff01\uff01\u4e0d\u8fc7\u6211\u4eec\u8fd9\u5c4a\u662f\u5fc5\u4fee\uff0c\u5927\u5bb6\u4e00\u8d77\u62ff\u4f4e\u5206\u4e5f\u4e0d\u662f\u4e0d\u884c\uff0c\u4ee5\u540e\u5982\u679c\u6539\u6210\u9009\u4fee\u90a3\u4e48\u6211\u5f3a\u70c8\u4e0d\u5efa\u8bae\u4fee\u8bfb\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b\u3002","title":"\u8f6f\u4ef6\u9700\u6c42\u5de5\u7a0b"},{"location":"SS%E6%9C%8D%E5%8A%A1%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA/index.html","text":"\u670d\u52a1\u79d1\u5b66\u5bfc\u8bba 2019-2020\u6625\u590f\u5b66\u671f\uff0c\u5434\u5065\u8001\u5e08 \u7a76\u6781\u5927\u6c34\u8bfe\uff0c\u4e00\u4e2a\u83ab\u540d\u5176\u5999\u7684\u7ec4\u961f\u4f5c\u4e1a+\u4e00\u7bc76000\u5b57\u7684\u62a5\u544a\uff0c \u4e0a\u8bfe\u53ef\u80fd\u6709\u70b9\u540d \u7ec4\u961f\u5927\u4f5c\u4e1a\u66f4\u5f3a\u8c03\u4f60\u7684idea\u800c\u4e0d\u662f\u5177\u4f53\u5b9e\u73b0\uff0c\u56e0\u6b64\u6709\u7684\u7ec4\u867d\u7136\u5b8c\u6210\u5ea6\u5f88\u9ad8\u4f46\u662f\u5206\u6570\u4e5f\u4e00\u822c\uff0c\u6709\u7684\u7ec4idea\u5f88\u597d\u4f46\u662f\u5b8c\u6210\u5ea6\u4f4e\u4e5f\u80fd\u5f97\u9ad8\u5206 \u6211\u4eec\u7ec4\u5c5e\u4e8eidea\u5f88\u4e00\u822c\u5b8c\u6210\u5ea6\u4e5f\u4e0d\u9ad8\u7684 \u7ed9\u5206\u8fd8\u597d\uff0c\u4e00\u822c\u4e0d\u4f1a\u4f4e\u4e8e4.2\uff0c\u4e0d\u8fc7\u89814.8+\u4f3c\u4e4e\u4e5f\u6bd4\u8f83\u56f0\u96be","title":"\u670d\u52a1\u79d1\u5b66\u5bfc\u8bba"},{"location":"SS%E6%9C%8D%E5%8A%A1%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA/index.html#_1","text":"2019-2020\u6625\u590f\u5b66\u671f\uff0c\u5434\u5065\u8001\u5e08 \u7a76\u6781\u5927\u6c34\u8bfe\uff0c\u4e00\u4e2a\u83ab\u540d\u5176\u5999\u7684\u7ec4\u961f\u4f5c\u4e1a+\u4e00\u7bc76000\u5b57\u7684\u62a5\u544a\uff0c \u4e0a\u8bfe\u53ef\u80fd\u6709\u70b9\u540d \u7ec4\u961f\u5927\u4f5c\u4e1a\u66f4\u5f3a\u8c03\u4f60\u7684idea\u800c\u4e0d\u662f\u5177\u4f53\u5b9e\u73b0\uff0c\u56e0\u6b64\u6709\u7684\u7ec4\u867d\u7136\u5b8c\u6210\u5ea6\u5f88\u9ad8\u4f46\u662f\u5206\u6570\u4e5f\u4e00\u822c\uff0c\u6709\u7684\u7ec4idea\u5f88\u597d\u4f46\u662f\u5b8c\u6210\u5ea6\u4f4e\u4e5f\u80fd\u5f97\u9ad8\u5206 \u6211\u4eec\u7ec4\u5c5e\u4e8eidea\u5f88\u4e00\u822c\u5b8c\u6210\u5ea6\u4e5f\u4e0d\u9ad8\u7684 \u7ed9\u5206\u8fd8\u597d\uff0c\u4e00\u822c\u4e0d\u4f1a\u4f4e\u4e8e4.2\uff0c\u4e0d\u8fc7\u89814.8+\u4f3c\u4e4e\u4e5f\u6bd4\u8f83\u56f0\u96be","title":"\u670d\u52a1\u79d1\u5b66\u5bfc\u8bba"},{"location":"TC%E9%9D%A2%E5%90%91%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E7%9A%84%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/index.html","text":"\u9762\u5411\u4fe1\u606f\u6280\u672f\u7684\u6c9f\u901a\u6280\u5de7 \u7fc1\u607a\u8001\u5e08\uff0c2019-2020\u5b66\u5e74\u590f\u5b66\u671f \u8fd9\u95e8\u8bfe\u653e\u5728\u590f\u5b66\u671f\u771f\u7684\u975e\u5e38\u8ff7\uff0c\u4f5c\u4e1a\u5f88\u591a\uff0c\u5e76\u4e14\u9700\u898110\u4eba\u4e00\u7ec4\u7ec4\u961f\u8fdb\u884c\uff0c\u8bf7\u627e\u719f\u4eba\u7ec4\u961f\uff0c\u4e0d\u8981\u627e\u9634\u95f4\u961f\u53cb \u8bfe\u7a0b\u4f5c\u4e1a\u4e3b\u8981\u6709\u8fd9\u6837\u4e00\u4e9b\uff1a \u4e00\u4e2a\u521b\u610f\u526a\u8f91\u89c6\u9891 \u4e00\u6b21\u56e2\u961f\u4f1a\u8bae+\u89c6\u9891\u8bb0\u5f55 \u6587\u732e\u7efc\u8ff0\u4e00\u7bc7 \u4fee\u6539\u5f00\u9898\u62a5\u544a/\u6bd5\u8bbe/\u8bba\u6587 \u4e24\u6b21 \u56e2\u961f\u5c55\u793a\u4e00\u6b21 \u7fc1\u607a\u8001\u5e08\u73ed\u7684\u6c9f\u901a\u6280\u5de7\u867d\u7136\u4e4b\u524d\u98ce\u8bc4\u4e00\u76f4\u4e0d\u592a\u597d\uff0c\u4f46\u4eca\u5e74\u8c8c\u4f3c\u7ed9\u5206\u5f88\u9ad8\uff0c\u5e73\u65f6\u4f5c\u4e1a\u4ea4\u4e86\u57fa\u672c\u5c31\u662f100\u5206\uff0c\u5e76\u4e14\u4e92\u8bc4\u53ea\u536030%\uff0c\u5e73\u65f6\u5206\u4e0d\u4f1a\u6263\u592a\u591a \u671f\u672b\u8003\u6bd4\u8f83\u5bb9\u6613\uff0c\u53ef\u4ee5\u53bbPTA\u6559\u80b2\u8d85\u5e02 \u7528\u91d1\u5e01\u4e70\u9009\u62e9\u9898\u9898\u5e93 \u6240\u4ee5\u4e00\u5b9a\u8981\u8bb0\u5f97\u6bcf\u5929\u53bb\u7b7e\u5230\uff0c\u8fd9\u6837 \u5c31\u4e0d\u7528\u5145\u94b1\u4e70\u8fd9\u4e2a\u9898\u5e93 \u4e86 \u53e6\u5916\u4f1a\u6709\u4e3b\u89c2\u9898\uff0c\u5305\u62ec\u5199\u8bba\u6587\u6458\u8981\uff0c\u9009\u76f8\u5173\u8bba\u6587\uff0c\u505aPPT\u7b49(\u4e0a\u673a\u8003\u8bd5) \u7fc1\u607a\u8001\u5e08\u73ed\u8981\u6c42\u63d0\u4ea4\u7b14\u8bb0\u4f5c\u4e3a\u5e73\u65f6\u5206\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u5206\u4eab\u4e00\u4e0b\u6211\u505a\u7684\u5783\u573e\u7b14\u8bb0\uff0c\u8fd9\u4e2a\u56e0\u4e3a\u611f\u89c9\u5e76\u4e0d\u91cd\u8981\u6240\u4ee5\u505a\u7684\u6bd4\u8f83\u968f\u4fbf\u4e86","title":"Index"},{"location":"TC%E9%9D%A2%E5%90%91%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E7%9A%84%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/index.html#_1","text":"\u7fc1\u607a\u8001\u5e08\uff0c2019-2020\u5b66\u5e74\u590f\u5b66\u671f \u8fd9\u95e8\u8bfe\u653e\u5728\u590f\u5b66\u671f\u771f\u7684\u975e\u5e38\u8ff7\uff0c\u4f5c\u4e1a\u5f88\u591a\uff0c\u5e76\u4e14\u9700\u898110\u4eba\u4e00\u7ec4\u7ec4\u961f\u8fdb\u884c\uff0c\u8bf7\u627e\u719f\u4eba\u7ec4\u961f\uff0c\u4e0d\u8981\u627e\u9634\u95f4\u961f\u53cb \u8bfe\u7a0b\u4f5c\u4e1a\u4e3b\u8981\u6709\u8fd9\u6837\u4e00\u4e9b\uff1a \u4e00\u4e2a\u521b\u610f\u526a\u8f91\u89c6\u9891 \u4e00\u6b21\u56e2\u961f\u4f1a\u8bae+\u89c6\u9891\u8bb0\u5f55 \u6587\u732e\u7efc\u8ff0\u4e00\u7bc7 \u4fee\u6539\u5f00\u9898\u62a5\u544a/\u6bd5\u8bbe/\u8bba\u6587 \u4e24\u6b21 \u56e2\u961f\u5c55\u793a\u4e00\u6b21 \u7fc1\u607a\u8001\u5e08\u73ed\u7684\u6c9f\u901a\u6280\u5de7\u867d\u7136\u4e4b\u524d\u98ce\u8bc4\u4e00\u76f4\u4e0d\u592a\u597d\uff0c\u4f46\u4eca\u5e74\u8c8c\u4f3c\u7ed9\u5206\u5f88\u9ad8\uff0c\u5e73\u65f6\u4f5c\u4e1a\u4ea4\u4e86\u57fa\u672c\u5c31\u662f100\u5206\uff0c\u5e76\u4e14\u4e92\u8bc4\u53ea\u536030%\uff0c\u5e73\u65f6\u5206\u4e0d\u4f1a\u6263\u592a\u591a \u671f\u672b\u8003\u6bd4\u8f83\u5bb9\u6613\uff0c\u53ef\u4ee5\u53bbPTA\u6559\u80b2\u8d85\u5e02 \u7528\u91d1\u5e01\u4e70\u9009\u62e9\u9898\u9898\u5e93 \u6240\u4ee5\u4e00\u5b9a\u8981\u8bb0\u5f97\u6bcf\u5929\u53bb\u7b7e\u5230\uff0c\u8fd9\u6837 \u5c31\u4e0d\u7528\u5145\u94b1\u4e70\u8fd9\u4e2a\u9898\u5e93 \u4e86 \u53e6\u5916\u4f1a\u6709\u4e3b\u89c2\u9898\uff0c\u5305\u62ec\u5199\u8bba\u6587\u6458\u8981\uff0c\u9009\u76f8\u5173\u8bba\u6587\uff0c\u505aPPT\u7b49(\u4e0a\u673a\u8003\u8bd5) \u7fc1\u607a\u8001\u5e08\u73ed\u8981\u6c42\u63d0\u4ea4\u7b14\u8bb0\u4f5c\u4e3a\u5e73\u65f6\u5206\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u5206\u4eab\u4e00\u4e0b\u6211\u505a\u7684\u5783\u573e\u7b14\u8bb0\uff0c\u8fd9\u4e2a\u56e0\u4e3a\u611f\u89c9\u5e76\u4e0d\u91cd\u8981\u6240\u4ee5\u505a\u7684\u6bd4\u8f83\u968f\u4fbf\u4e86","title":"\u9762\u5411\u4fe1\u606f\u6280\u672f\u7684\u6c9f\u901a\u6280\u5de7"},{"location":"%E5%9F%BA%E7%A1%80%E8%AF%BE-%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%86/index.html","text":"\u5927\u7269+\u6982\u7edf \u901a\u8bc6\u8bfe\uff0c\u4e0d\u540c\u8001\u5e08\u7ed9\u5206\u5e94\u8be5\u4e0d\u4f1a\u5dee\u8ddd\u7279\u522b\u5927\uff0c\u4e3b\u8981\u9760\u8003\u8bd5\u5b9a\u6210\u7ee9 \u8fd9\u4e24\u95e8\u8bfe\u4e8b\u5b9e\u4e0a\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u57fa\u672c\u80cc\u80cc\u516c\u5f0f\u5c31\u53ef\u4ee5\u62ff\u6bd4\u8f83\u9ad8\u7684\u6210\u7ee9 \u591a\u5237\u70b9\u5386\u5e74\u5377\u5c31\u53ef\u4ee5\uff0c\u5e73\u65f6\u4f5c\u4e1a\u548c\u5c0f\u6d4b\u8981\u6ce8\u610f\u505a\u597d\u4e00\u70b9\uff0c\u6570\u7406\u57fa\u7840\u8bfe\u5927\u5bb6\u90fd\u61c2\u7684 \u53ef\u60dc\u6211\u8003\u8bd5\u7684\u65f6\u5019\u53d1\u6325\u7684\u6bd4\u8f83\u4e00\u822c\uff0c\u56e0\u6b64\u5206\u6570\u4e5f\u6ca1\u6709\u7279\u522b\u9ad8\uff0c\u5176\u4ed6\u4eba\u4f3c\u4e4e\u80cc\u4e00\u80cc\u5237\u4e00\u5237\u5386\u5e74\u5377\u57fa\u672c\u5c31\u6ee1\u4e86 \u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u4e4b\u524d\u6284\u5199\u7684\u7b14\u8bb0\uff0c\u56e0\u4e3a\u8bb0\u6027\u6bd4\u8f83\u5dee\u5c31\u6284\u4e86\u4e00\u904d \u56e0\u4e3a\u662f\u7528notability\u5199\u7684\u6240\u4ee5\u6587\u4ef6\u4f1a\u6bd4\u8f83\u5927\uff0c\u5982\u679c\u8981\u4e0b\u8f7d\u5efa\u8bae\u6302VPN\u4e0b\u8f7d\uff0c\u6216\u800598\u79c1\u4fe1\u6211","title":"Index"},{"location":"%E5%9F%BA%E7%A1%80%E8%AF%BE-%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%86/index.html#_1","text":"\u901a\u8bc6\u8bfe\uff0c\u4e0d\u540c\u8001\u5e08\u7ed9\u5206\u5e94\u8be5\u4e0d\u4f1a\u5dee\u8ddd\u7279\u522b\u5927\uff0c\u4e3b\u8981\u9760\u8003\u8bd5\u5b9a\u6210\u7ee9 \u8fd9\u4e24\u95e8\u8bfe\u4e8b\u5b9e\u4e0a\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u57fa\u672c\u80cc\u80cc\u516c\u5f0f\u5c31\u53ef\u4ee5\u62ff\u6bd4\u8f83\u9ad8\u7684\u6210\u7ee9 \u591a\u5237\u70b9\u5386\u5e74\u5377\u5c31\u53ef\u4ee5\uff0c\u5e73\u65f6\u4f5c\u4e1a\u548c\u5c0f\u6d4b\u8981\u6ce8\u610f\u505a\u597d\u4e00\u70b9\uff0c\u6570\u7406\u57fa\u7840\u8bfe\u5927\u5bb6\u90fd\u61c2\u7684 \u53ef\u60dc\u6211\u8003\u8bd5\u7684\u65f6\u5019\u53d1\u6325\u7684\u6bd4\u8f83\u4e00\u822c\uff0c\u56e0\u6b64\u5206\u6570\u4e5f\u6ca1\u6709\u7279\u522b\u9ad8\uff0c\u5176\u4ed6\u4eba\u4f3c\u4e4e\u80cc\u4e00\u80cc\u5237\u4e00\u5237\u5386\u5e74\u5377\u57fa\u672c\u5c31\u6ee1\u4e86 \u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u4e4b\u524d\u6284\u5199\u7684\u7b14\u8bb0\uff0c\u56e0\u4e3a\u8bb0\u6027\u6bd4\u8f83\u5dee\u5c31\u6284\u4e86\u4e00\u904d \u56e0\u4e3a\u662f\u7528notability\u5199\u7684\u6240\u4ee5\u6587\u4ef6\u4f1a\u6bd4\u8f83\u5927\uff0c\u5982\u679c\u8981\u4e0b\u8f7d\u5efa\u8bae\u6302VPN\u4e0b\u8f7d\uff0c\u6216\u800598\u79c1\u4fe1\u6211","title":"\u5927\u7269+\u6982\u7edf"},{"location":"%E5%9F%BA%E7%A1%80%E8%AF%BE-%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%28%E7%94%B2%29/index.html","text":"\u5fae\u89c2\u7ecf\u6d4e\u5b66 \u4f59\u4e00\u5e06\u8001\u5e08\uff0c2019-2020\u79cb\u51ac\u5b66\u671f \u5f53\u65f6\u8bfe\u6bd4\u8f83\u5c11\u9009\u4e86\u5f53\u4e2a\u6027\u4e0a\u7684\uff0c\u4f46\u662f\u8bfe\u7a0b\u5185\u5bb9\u6bd4\u8f83\u67af\u71e5\uff0c\u540e\u6765\u5c31\u540e\u6094\u4e86\uff0c\u4f46\u8fd9\u8bfe\u671f\u672b70%\uff0c\u6240\u4ee5\u8003\u524d\u4e00\u5b9a\u8981\u82b1\u65f6\u95f4\u53bb\u80cc\u4e66 \u7b14\u8bb0\u5c31\u662f\u6211\u5728\u80cc\u4e66\u7684\u8fc7\u7a0b\u4e2d\u6574\u7406\u51fa\u6765\u7684\uff0c\u8fd9\u79cd\u75db\u82e6\u7684\u8fc7\u7a0b\u4e0d\u60f3\u518d\u6709\u7b2c\u4e8c\u6b21 \u5efa\u8bae\u4e0d\u8981\u9009\u8fd9\u95e8\u8bfe\u5f53\u4e2a\u6027\uff0c\u867d\u7136\u6700\u540e\u5206\u6570\u8fd8\u53ef\u4ee5 \u4f59\u4e00\u5e06\u8001\u5e08\u4e0a\u8bfe\u6bd4\u8f83\u67af\u71e5\uff0c\u4f46\u662f\u4eba\u5f88\u597d\uff0c\u4ed6\u505a\u7684PPT\u4e5f\u5f88\u597d\uff0c\u9009\u4e86\u7684\u4eba\u53ef\u4ee5\u770b\u770b \u6253\u5370\u5e97\u7684\u5386\u5e74\u5377\u4e0d\u9760\u8c31\uff0c~~\u65b0\u7248\u7684\u751a\u81f3\u8fd8\u6709\u6211\u5ba4\u53cb\u768498\u56de\u5fc6\u5377~~ \u5e73\u65f6\u4f5c\u4e1a\u5176\u5b9e\u6ca1\u4ec0\u4e48\u4e1c\u897f\uff0c\u5c31\u662f\u4e00\u7bc7\u83ab\u540d\u5176\u5999\u778e\u7f16\u7684\u5e02\u573a\u8c03\u7814\u8bba\u6587+\u4e00\u6b21\u5c55\u793a\uff0c\u6211\u4eec\u7ec4\u5f53\u65f6\u505a\u7684\u5e76\u4e0d\u597d","title":"Index"},{"location":"%E5%9F%BA%E7%A1%80%E8%AF%BE-%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%28%E7%94%B2%29/index.html#_1","text":"\u4f59\u4e00\u5e06\u8001\u5e08\uff0c2019-2020\u79cb\u51ac\u5b66\u671f \u5f53\u65f6\u8bfe\u6bd4\u8f83\u5c11\u9009\u4e86\u5f53\u4e2a\u6027\u4e0a\u7684\uff0c\u4f46\u662f\u8bfe\u7a0b\u5185\u5bb9\u6bd4\u8f83\u67af\u71e5\uff0c\u540e\u6765\u5c31\u540e\u6094\u4e86\uff0c\u4f46\u8fd9\u8bfe\u671f\u672b70%\uff0c\u6240\u4ee5\u8003\u524d\u4e00\u5b9a\u8981\u82b1\u65f6\u95f4\u53bb\u80cc\u4e66 \u7b14\u8bb0\u5c31\u662f\u6211\u5728\u80cc\u4e66\u7684\u8fc7\u7a0b\u4e2d\u6574\u7406\u51fa\u6765\u7684\uff0c\u8fd9\u79cd\u75db\u82e6\u7684\u8fc7\u7a0b\u4e0d\u60f3\u518d\u6709\u7b2c\u4e8c\u6b21 \u5efa\u8bae\u4e0d\u8981\u9009\u8fd9\u95e8\u8bfe\u5f53\u4e2a\u6027\uff0c\u867d\u7136\u6700\u540e\u5206\u6570\u8fd8\u53ef\u4ee5 \u4f59\u4e00\u5e06\u8001\u5e08\u4e0a\u8bfe\u6bd4\u8f83\u67af\u71e5\uff0c\u4f46\u662f\u4eba\u5f88\u597d\uff0c\u4ed6\u505a\u7684PPT\u4e5f\u5f88\u597d\uff0c\u9009\u4e86\u7684\u4eba\u53ef\u4ee5\u770b\u770b \u6253\u5370\u5e97\u7684\u5386\u5e74\u5377\u4e0d\u9760\u8c31\uff0c~~\u65b0\u7248\u7684\u751a\u81f3\u8fd8\u6709\u6211\u5ba4\u53cb\u768498\u56de\u5fc6\u5377~~ \u5e73\u65f6\u4f5c\u4e1a\u5176\u5b9e\u6ca1\u4ec0\u4e48\u4e1c\u897f\uff0c\u5c31\u662f\u4e00\u7bc7\u83ab\u540d\u5176\u5999\u778e\u7f16\u7684\u5e02\u573a\u8c03\u7814\u8bba\u6587+\u4e00\u6b21\u5c55\u793a\uff0c\u6211\u4eec\u7ec4\u5f53\u65f6\u505a\u7684\u5e76\u4e0d\u597d","title":"\u5fae\u89c2\u7ecf\u6d4e\u5b66"},{"location":"%E6%80%9D%E6%94%BF-%E5%86%9B%E4%BA%8B%E7%90%86%E8%AE%BA/index.html","text":"\u519b\u4e8b\u7406\u8bba \u4e0a\u8bfe\u4e0d\u7528\u542c\uff0c\u6211\u662fslp\u73ed\u7684\uff0c\u5e73\u65f6\u4f5c\u4e1a\u5c31\u53ea\u6709\u4e00\u7bc7\u8bba\u6587 \u4f46\u662f\u671f\u672b\u8003\u8bd5\u53ef\u80fd\u9700\u8981\u51c6\u5907\u4e00\u4e0b\uff0c\u6211\u8003\u7684\u4e0d\u592a\u597d\uff0c\u5168\u662f\u9009\u62e9\u9898\uff0c\u53ef\u4ee5\u5f00\u5377\u8003","title":"\u519b\u4e8b\u7406\u8bba"},{"location":"%E6%80%9D%E6%94%BF-%E5%86%9B%E4%BA%8B%E7%90%86%E8%AE%BA/index.html#_1","text":"\u4e0a\u8bfe\u4e0d\u7528\u542c\uff0c\u6211\u662fslp\u73ed\u7684\uff0c\u5e73\u65f6\u4f5c\u4e1a\u5c31\u53ea\u6709\u4e00\u7bc7\u8bba\u6587 \u4f46\u662f\u671f\u672b\u8003\u8bd5\u53ef\u80fd\u9700\u8981\u51c6\u5907\u4e00\u4e0b\uff0c\u6211\u8003\u7684\u4e0d\u592a\u597d\uff0c\u5168\u662f\u9009\u62e9\u9898\uff0c\u53ef\u4ee5\u5f00\u5377\u8003","title":"\u519b\u4e8b\u7406\u8bba"},{"location":"%E6%80%9D%E6%94%BF-%E5%BD%A2%E5%8A%BF%E4%B8%8E%E6%94%BF%E7%AD%96I/index.html","text":"\u5f62\u52bf\u4e0e\u653f\u7b56I \u5927\u6c34\u8bfe\uff0c\u4e0a\u8bfe\u968f\u610f\u542c\uff0c\u8bba\u6587\u968f\u610f\u5199\uff0c\u8003\u8bd5\u4e0d\u600e\u4e48\u9700\u8981\u590d\u4e60\uff0c\u4e0d\u8fc7\u7ed9\u5206\u6bd4\u8f83\u968f\u673a\uff0c\u5e73\u65f6\u4e0d\u5fd8\u8bb0\u4ea4\u5c0f\u4f5c\u4e1a\u5e94\u8be5\u95ee\u9898\u5c31\u4e0d\u5927","title":"\u5f62\u52bf\u4e0e\u653f\u7b56I"},{"location":"%E6%80%9D%E6%94%BF-%E5%BD%A2%E5%8A%BF%E4%B8%8E%E6%94%BF%E7%AD%96I/index.html#i","text":"\u5927\u6c34\u8bfe\uff0c\u4e0a\u8bfe\u968f\u610f\u542c\uff0c\u8bba\u6587\u968f\u610f\u5199\uff0c\u8003\u8bd5\u4e0d\u600e\u4e48\u9700\u8981\u590d\u4e60\uff0c\u4e0d\u8fc7\u7ed9\u5206\u6bd4\u8f83\u968f\u673a\uff0c\u5e73\u65f6\u4e0d\u5fd8\u8bb0\u4ea4\u5c0f\u4f5c\u4e1a\u5e94\u8be5\u95ee\u9898\u5c31\u4e0d\u5927","title":"\u5f62\u52bf\u4e0e\u653f\u7b56I"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html","text":"\u6bdb\u6982\u671f\u672b\u901f\u6210 \u7b2c\u4e00\u7ae0\uff1a\u6bdb\u6cfd\u4e1c\u601d\u60f3 1.1\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u4ea7\u751f \u5386\u53f2\u6761\u4ef6\uff1a\u4fc4\u56fd\u5341\u6708\u9769\u547d\u7684\u80dc\u5229\u7ed9\u4e2d\u56fd\u9001\u6765\u4e86\u9a6c\u5217\u4e3b\u4e49\uff0c\u4e2d\u56fd\u9769\u547d\u4ece\u6b64\u6709\u4e86\u79d1\u5b66\u7684\u6307\u5bfc\u601d\u60f3 \u5b9e\u8df5\u57fa\u7840\uff1a\u4e2d\u56fd\u5171\u4ea7\u515a\u9886\u5bfc\u4eba\u6c11\u8fdb\u884c\u9769\u547d\u548c\u5efa\u8bbe\u7684\u6210\u529f\u5b9e\u8df5\u662f\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u5b9e\u8df5\u57fa\u7840\uff0c\u6bdb\u6cfd\u4e1c\u601d\u60f3\u662f\u5bf9\u7ecf\u9a8c\u6559\u8bad\u8fdb\u884c\u6df1\u523b\u603b\u7ed3\u7684\u7406\u8bba\u6210\u679c 1.2\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u53d1\u5c55\u5386\u7a0b \u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u5f62\u6210\uff1a \u7b2c\u4e00\u6b21\u56fd\u5185\u9769\u547d\u6218\u4e89\u65f6\u671f\uff0c\u300a\u4e2d\u56fd\u793e\u4f1a\u5404\u9636\u7ea7\u7684\u5206\u6790\u300b\u3001\u300a\u6e56\u5357\u519c\u6c11\u8fd0\u52a8\u8003\u5bdf\u62a5\u544a\u300b\u5206\u6790\u4e86\u4e2d\u56fd\u793e\u4f1a\u5404\u9636\u7ea7\u5728\u9769\u547d\u4e2d\u7684\u5730\u4f4d\u548c\u4f5c\u7528\uff0c\u63d0\u51fa\u4e86\u65b0\u6c11\u4e3b\u4e3b\u4e49\u9769\u547d\u7684\u57fa\u672c\u601d\u60f3 \u571f\u5730\u9769\u547d\u6218\u4e89\u65f6\u671f\uff0c\u575a\u6301\u4e86\u4e0e\u4e2d\u56fd\u9769\u547d\u5177\u4f53\u5b9e\u9645\u76f8\u7ed3\u5408\u7684\u57fa\u672c\u539f\u5219 \u300a\u4e2d\u56fd\u7ea2\u8272\u653f\u6743\u300b\u3001\u300a\u4e95\u5188\u5c71\u7684\u4e1c\u5f81\u300b\u7b49\u8457\u4f5c\u4e2d\u63d0\u51fa\u4e86\u6b66\u88c5\u593a\u53d6\u653f\u6743\u7684\u601d\u60f3\uff0c\u6807\u5fd7\u7740\u521d\u6b65\u5f62\u6210 \u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u6210\u719f \u77db\u76fe\u8bba\u548c\u5b9e\u8df5\u8bba\u7cfb\u7edf\u5206\u6790\u4e86\u5de6\u53f3\u9519\u8bef\u7684\u601d\u60f3\u6839\u6e90 \u65b0\u6c11\u4e3b\u4e3b\u4e49\u8bba\u3001\u8bba\u8054\u5408\u653f\u5e9c\u7b49\u8457\u4f5c\u4e2d\u9610\u8ff0\u4e86\u65b0\u6c11\u4e3b\u4e3b\u4e49\u9769\u547d\u7684\u603b\u8def\u7ebf \u7cfb\u7edf\u6027\u7684\u65b0\u6c11\u4e3b\u4e3b\u4e49\u7406\u8bba\u7684\u9610\u8ff0\uff0c\u5b9e\u73b0\u4e86\u9a6c\u514b\u601d\u4e3b\u4e49\u548c\u4e2d\u56fd\u9769\u547d\u5b9e\u9645\u76f8\u7ed3\u5408\u7684\u5386\u53f2\u6027\u98de\u8dc3 \u6807\u5fd7\u7740\u6bdb\u6cfd\u4e1c\u601d\u60f3\u8d8b\u4e8e\u6210\u719f \u7ee7\u7eed\u53d1\u5c55 \u4eba\u6c11\u6c11\u4e3b\u4e13\u653f\u7406\u8bba\u3001\u793e\u4f1a\u4e3b\u4e49\u6539\u9020\u7406\u8bba\u3001\u5173\u4e8e\u4e25\u683c\u533a\u5206\u548c\u6b63\u786e\u5904\u7406\u4e24\u7c7b\u77db\u76fe\u7684\u5b66\u8bf4 \u8fd9\u4e00\u65f6\u671f\u7684\u201c\u7b2c\u4e8c\u6b21\u7ed3\u5408\u201d\u5f62\u6210\u4e86\u5173\u4e8e\u793e\u4f1a\u4e3b\u4e49\u9769\u547d\u548c\u793e\u4f1a\u4e3b\u4e49\u5efa\u8bbe\u7684\u91cd\u8981\u601d\u60f3 1.3\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u4e3b\u8981\u5185\u5bb9 \u65b0\u6c11\u4e3b\u4e3b\u4e49\u9769\u547d\u7406\u8bba\uff1a\u4fdd\u6301\u65e0\u4ea7\u9636\u7ea7\u7684\u72ec\u7acb\u6027 \u793e\u4f1a\u4e3b\u4e49\u9769\u547d\u548c\u793e\u4f1a\u4e3b\u4e49\u5efa\u8bbe\u7406\u8bba \u4eba\u6c11\u5185\u90e8\uff1a\u56e2\u7ed3--\u6279\u8bc4--\u56e2\u7ed3 \u5176\u4ed6\u515a\u6d3e\uff1a\u957f\u671f\u5171\u5b58\uff0c\u4e92\u76f8\u7b80\u4ecb \u6587\u5316\uff1a\u767e\u82b1\u9f50\u653e\uff0c\u767e\u5bb6\u4e89\u9e23 \u7ecf\u6d4e\u5de5\u4f5c\uff1a\u7edf\u7b79\u517c\u987e\u3001\u9002\u5f53\u5b89\u6392 \u9769\u547d\u519b\u961f\u5efa\u8bbe\u548c\u519b\u4e8b\u6218\u7565\u7406\u8bba \u515a\u6307\u6325\u67aa\uff0c\u7edd\u5bf9\u9886\u5bfc \u653f\u7b56\u548c\u7b56\u7565\u7684\u7406\u8bba \u601d\u60f3\u653f\u6cbb\u5de5\u4f5c\u548c\u6587\u5316\u5de5\u4f5c\u7684\u7406\u8bba \u515a\u7684\u5efa\u8bbe\u7406\u8bba\u3001\u56fd\u9645\u6218\u7565\u548c\u5916\u4ea4\u5de5\u4f5c\u7406\u8bba 1.4\u6bdb\u6cfd\u4e1c\u601d\u60f3\u6d3b\u7684\u7075\u9b42 \u8d2f\u7a7f\u4e8e\u6bdb\u6cfd\u4e1c\u601d\u60f3\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u7acb\u573a\u3001\u89c2\u70b9\u548c\u65b9\u6cd5\u662f\u6bdb\u6cfd\u4e1c\u601d\u60f3\u83b7\u5f97\u7075\u9b42\uff0c\u5305\u62ec\u4e09\u4e2a\u57fa\u672c\u65b9\u9762\uff1a \u5b9e\u4e8b\u6c42\u662f\uff1a\u4e00\u5207\u4ece\u5b9e\u9645\u51fa\u53d1\uff0c\u7406\u8bba\u8054\u7cfb\u5b9e\u9645 \u7fa4\u4f17\u8def\u7ebf\uff1a\u4e00\u5207\u4e3a\u4e86\u7fa4\u4f17\uff0c\u4e00\u5207\u4f9d\u9760\u7fa4\u4f17 \u72ec\u7acb\u81ea\u4e3b\uff1a\u575a\u6301\u72ec\u7acb\u601d\u8003\uff0c\u8d70\u81ea\u5df1\u7684\u8def 1.5\u5386\u53f2\u5730\u4f4d \u662f\u9a6c\u514b\u601d\u4e3b\u4e49\u4e2d\u56fd\u5316\u7684\u7b2c\u4e00\u4e2a\u91cd\u5927\u7406\u8bba\u6210\u679c\uff0c\u7b2c\u4e00\u6b21\u5386\u53f2\u6027\u7684\u98de\u8dc3 \u4e2d\u56fd\u9769\u547d\u548c\u5efa\u8bbe\u7684\u79d1\u5b66\u6307\u5357 \u4e2d\u56fd\u5171\u4ea7\u515a\u548c\u4e2d\u56fd\u4eba\u6c11\u5b9d\u8d35\u7684\u7cbe\u795e\u8d22\u5bcc \u7b2c\u4e94\u7ae0\uff1a\u9093\u5c0f\u5e73\u7406\u8bba 5.1\u9093\u5c0f\u5e73\u7406\u8bba\u7684\u5f62\u6210 \u65f6\u4ee3\u80cc\u666f\uff1a\u548c\u5e73\u4e0e\u53d1\u5c55\u6210\u4e3a\u65f6\u4ee3\u4e3b\u9898 \u5386\u53f2\u4f9d\u636e\uff1a\u793e\u4f1a\u4e3b\u4e49\u5efa\u8bbe\u7684\u7ecf\u9a8c\u6559\u8bad \u73b0\u5b9e\u4f9d\u636e\uff1a\u6539\u9769\u5f00\u653e\u548c\u73b0\u4ee3\u5316\u5efa\u8bbe\u7684\u5b9e\u8df5 5.2\u5f62\u6210\u8fc7\u7a0b 1978\u5e7412\u6708\uff0c\u7b2c\u5341\u4e00\u5c4a\u4e09\u4e2d\u5168\u4f1a\u4e2d\u5fc3\u786e\u7acb\u4e86\u89e3\u653e\u601d\u60f3\uff0c\u5b9e\u4e8b\u6c42\u662f\u7684\u601d\u60f3\u8def\u7ebf\uff0c\u505c\u6b62\u4f7f\u7528\u4ee5\u9636\u7ea7\u6597\u4e89\u4e3a\u7eb2\uff0c\u4f1f\u5927\u8f6c\u6298 1982\u5e74\u5341\u4e8c\u5927\u5f00\u5e55\u8bcd\u4e2d\u7b2c\u4e00\u6b21\u63d0\u51fa\u5efa\u8bbe\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49 1984\u5e74\u5341\u4e8c\u5c4a\u4e09\u4e2d\u5168\u4f1a\uff1a\u300a\u5173\u4e8e\u7ecf\u6d4e\u4f53\u5236\u6539\u9769\u7684\u51b3\u5b9a\u300b 1987\u5e74\u5341\u4e09\u5927\uff0c\u7cfb\u7edf\u8bba\u8ff0\u4e86\u793e\u4f1a\u4e3b\u4e49\u521d\u7ea7\u9636\u6bb5\u7406\u8bba\uff0c\u660e\u786e\u4e86\u4e00\u4e2a\u4e2d\u5fc3\u4e24\u4e2a\u57fa\u672c\u70b9\uff0c\u6807\u5fd7\u7740\u9093\u5c0f\u5e73\u7406\u8bba\u7684\u8f6e\u5ed3\u5f62\u6210 1992\u5e74\u5357\u65b9\u8c08\u8bdd\u662f\u9093\u5c0f\u5e73\u7406\u8bba\u7684\u96c6\u5927\u6210\u4e4b\u4f5c 1992\u5e74\u5341\u56db\u5927\u7cfb\u7edf\u603b\u7ed3\u4e86\u6539\u9769\u5f00\u653e\u4ee5\u6765\u5341\u56db\u5e74\u53d6\u5f97\u7684\u6210\u5c31\uff0c\u6982\u62ec\u4e86\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u7684\u4e3b\u8981\u5185\u5bb9 1997\u5e74\u5341\u4e94\u5927\u6b63\u5f0f\u63d0\u51fa\u4e86\u9093\u5c0f\u5e73\u7406\u8bba\u7684\u6982\u5ff5\uff0c\u5199\u5165\u515a\u7ae0\uff0c1999\u5e74\u8f7d\u5165\u5baa\u6cd5 5.3\u57fa\u672c\u95ee\u9898\u548c\u4e3b\u8981\u5185\u5bb9 \u57fa\u672c\u95ee\u9898\uff1a\u4ec0\u4e48\u662f\u793e\u4f1a\u4e3b\u4e49\uff1f\u600e\u4e48\u6837\u5efa\u8bbe\u793e\u4f1a\u4e3b\u4e49\uff1f \u575a\u6301\u56db\u9879\u57fa\u672c\u539f\u5219\uff1a \u575a\u6301\u793e\u4f1a\u4e3b\u4e49\u57fa\u672c\u5236\u5ea6 \u575a\u6301\u516c\u6709\u5236\u4e3a\u57fa\u7840\uff0c\u5b9e\u884c\u6309\u52b3\u5206\u914d\u539f\u5219\u7684\u793e\u4f1a\u4e3b\u4e49\u57fa\u672c\u7ecf\u6d4e\u5236\u5ea6 \u575a\u6301\u5171\u4ea7\u515a\u94c3\u94db\uff0c\u5b9e\u884c\u4eba\u6c11\u6c11\u4e3b\u4e13\u653f\u7684\u793e\u4f1a\u4e3b\u4e49\u57fa\u672c\u653f\u6cbb\u5236\u5ea6 \u575a\u6301\u4ee5\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u3001\u6bdb\u6cfd\u4e1c\u601d\u60f3\u6307\u5bfc\u7684\u793e\u4f1a\u4e3b\u4e49\u610f\u8bc6\u5f62\u6001 \u793e\u4f1a\u4e3b\u4e49\u7684\u672c\u8d28\u662f\u89e3\u653e\u751f\u4ea7\u529b\u3001\u53d1\u5c55\u751f\u4ea7\u529b\u3001\u6d88\u706d\u5265\u524a\u3001\u6d88\u9664\u4e24\u6781\u5206\u5316\u3001\u6700\u7ec8\u8fbe\u5230\u5171\u540c\u5bcc\u88d5 \u4e3b\u8981\u5185\u5bb9 \u89e3\u653e\u601d\u60f3\uff0c\u5b9e\u4e8b\u6c42\u662f\u7684\u601d\u60f3\u8def\u7ebf \u793e\u4f1a\u4e3b\u4e49\u521d\u7ea7\u9636\u6bb5\u7406\u8bba\uff1a\u5341\u4e09\u5927\u3001\u5341\u4e94\u5927 \u515a\u7684\u57fa\u672c\u8def\u7ebf \u4ee5\u7ecf\u6d4e\u5efa\u8bbe\u4e3a\u4e2d\u5fc3 \u575a\u6301\u56db\u9879\u57fa\u672c\u539f\u5219\u3001\u575a\u6301\u6539\u9769\u5f00\u653e \u793e\u4f1a\u4e3b\u4e49\u6839\u672c\u4efb\u52a1\u7684\u7406\u8bba \u4e09\u6b65\u8d70\u6218\u7565 \u6e29\u9971\u95ee\u9898 \u5c0f\u5eb7\u6c34\u5e73 \u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316 \u6539\u9769\u5f00\u653e\u7406\u8bba \u793e\u4f1a\u4e3b\u4e49\u5e02\u573a\u7ecf\u6d4e\u7406\u8bba \u4e24\u624b\u6293\uff0c\u4e24\u624b\u90fd\u8981\u786c\uff1a\u7269\u8d28\u6587\u660e\u548c\u7cbe\u795e\u6587\u660e \u4e00\u56fd\u4e24\u5236\u4f1f\u5927\u6784\u60f3 \u4e2d\u56fd\u7684\u5173\u952e\u95ee\u9898\u5728\u4e8e\u515a 5.4\u5386\u53f2\u5730\u4f4d \u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u548c\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u7ee7\u627f\u548c\u53d1\u5c55 \u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u4f53\u7cfb\u7684\u5f00\u7bc7\u4e4b\u4f5c \u6539\u9769\u5f00\u653e\u548c\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5efa\u8bbe\u7684\u79d1\u5b66\u6307\u5357 \u7b2c\u516d\u7ae0\uff1a\u201c\u4e09\u4e2a\u4ee3\u8868\u201d\u91cd\u8981\u601d\u60f3 6.1\u5f62\u6210\u6761\u4ef6 \u5bf9\u51b7\u6218\u7ed3\u675f\u540e\u56fd\u9645\u5c40\u52bf\u79d1\u5b66\u5224\u65ad\u7684\u57fa\u7840\u4e0a\u5f62\u6210\u7684 \u662f\u5728\u79d1\u5b66\u5224\u65ad\u515a\u7684\u5386\u53f2\u65b9\u4f4d\u548c\u603b\u7ed3\u5386\u53f2\u7ecf\u9a8c\u7684\u57fa\u7840\u4e0a\u63d0\u51fa\u6765\u7684 \u662f\u5728\u5efa\u8bbe\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u4f1f\u5927\u5b9e\u8df5\u7684\u57fa\u7840\u4e0a\u5f62\u6210\u7684 6.2\u5f62\u6210\u8fc7\u7a0b 2002\u5e74\uff0c\u6c5f\u6cfd\u6c11\u5728\u4e2d\u5171\u4e2d\u592e\u515a\u6821\u6df1\u523b\u9610\u8ff0\u4e86\u4e09\u4e2a\u4ee3\u8868\u91cd\u8981\u601d\u60f3\u7684\u5185\u5728\u8054\u7cfb\uff0c\u63d0\u51fa\u5173\u952e\u5728\u575a\u6301\u4e0e\u65f6\u4ff1\u8fdb\uff0c\u6838\u5fc3\u5728\u4fdd\u6301\u515a\u7684\u5148\u8fdb\u6027\uff0c\u672c\u8d28\u5728\u6267\u653f\u4e3a\u6c11 \u5176\u4ed6\u7684\u7565\u4e86\uff0c\u770b\u8d77\u6765\u4e0d\u592a\u91cd\u8981 6.3\u6838\u5fc3\u89c2\u70b9\u548c\u4e3b\u8981\u5185\u5bb9 \u6838\u5fc3\u89c2\u70b9 \u59cb\u7ec8\u4ee3\u8868\u4e2d\u56fd\u5148\u8fdb\u751f\u4ea7\u529b\u7684\u53d1\u5c55\u8981\u6c42 \u59cb\u7ec8\u4ee3\u8868\u4e2d\u56fd\u5148\u8fdb\u6587\u5316\u7684\u524d\u8fdb\u65b9\u5411 \u59cb\u7ec8\u4ee3\u8868\u4e2d\u56fd\u6700\u5e7f\u5927\u4eba\u6c11\u7684\u6839\u672c\u5229\u76ca \u4e3b\u8981\u5185\u5bb9 \u53d1\u5c55\u662f\u515a\u6267\u653f\u5174\u56fd\u7684\u7b2c\u4e00\u8981\u52a1 \u5efa\u7acb\u793e\u4f1a\u4e3b\u4e49\u5e02\u573a\u7ecf\u6d4e\u4f53\u5236 \u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a \u5efa\u8bbe\u793e\u4f1a\u4e3b\u4e49\u653f\u6cbb\u6587\u660e \u63a8\u8fdb\u515a\u7684\u5efa\u8bbe\u65b0\u7684\u4f1f\u5927\u5de5\u7a0b 6.4\u5386\u53f2\u5730\u4f4d \u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u4f53\u7cfb\u7684\u63a5\u7eed\u53d1\u5c55 \u4e09\u4e2a\u4ee3\u8868\u662f\u7acb\u515a\u4e4b\u672c\u3001\u6267\u653f\u4e4b\u57fa\u3001\u529b\u91cf\u4e4b\u6e90 \u52a0\u5f3a\u548c\u6539\u8fdb\u515a\u7684\u5efa\u8bbe\uff0c\u63a8\u8fdb\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u4e8b\u4e1a\u7684\u5f3a\u5927\u7406\u8bba\u6b66\u5668 \u7b2c\u4e03\u7ae0\uff1a\u79d1\u5b66\u53d1\u5c55\u89c2 7.1\u5f62\u6210\u6761\u4ef6 \u6df1\u523b\u628a\u63e1\u6211\u56fd\u57fa\u672c\u56fd\u60c5\u548c\u65b0\u7684\u9636\u6bb5\u6027\u7279\u5f81\u7684\u57fa\u7840\u4e0a\u5f62\u6210\u53d1\u5c55 \u518d\u6df1\u5165\u603b\u7ed3\u6539\u9769\u5f00\u653e\u4ee5\u6765\u7279\u522b\u662f\u5341\u516d\u5927\u4ee5\u6765\u5b9e\u8df5\u7ecf\u9a8c\u7684\u57fa\u7840\u4e0a\u5f62\u6210\u548c\u53d1\u5c55\u7684 \u6df1\u523b\u5206\u6790\u56fd\u9645\u5f62\u52bf\u3001\u987a\u5e94\u4e16\u754c\u53d1\u5c55\u8d8b\u52bf\u3001\u501f\u9274\u56fd\u5916\u53d1\u5c55\u7ecf\u9a8c 7.2\u53d1\u5c55\u5386\u7a0b \u515a\u7684\u5341\u516d\u5c4a\u56db\u4e2d\u5168\u4f1a\u628a\u68b3\u7406\u843d\u5b9e\u79d1\u5b66\u53d1\u5c55\u89c2\u4f5c\u4e3a\u63d0\u9ad8\u515a\u7684\u6267\u653f\u80fd\u529b\u7684\u91cd\u8981\u5185\u5bb9 \u5341\u4e03\u5927\u53ec\u5f00\u4f7f\u5f97\u79d1\u5b66\u53d1\u5c55\u89c2\u4e5f\u8fdb\u5165\u4e86\u4e00\u4e2a\u84ec\u52c3\u7684\u53d1\u5c55\u9636\u6bb5\uff0c\u79d1\u5b66\u53d1\u5c55\u89c2\u8fdb\u4e00\u6b65\u6210\u719f \u5341\u4e03\u5927\u63d0\u51fa\u4e86\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u4f53\u7cfb 7.3\u5185\u6db5\u548c\u4e3b\u8981\u5185\u5bb9 \u5185\u6db5 \u63a8\u52a8\u793e\u4f1a\u7ecf\u6d4e\u53d1\u5c55\u662f\u79d1\u5b66\u53d1\u5c55\u89c2\u7684\u7b2c\u4e00\u8981\u4e49 \u4ee5\u4eba\u4e3a\u672c\u7684\u6838\u5fc3\u7acb\u573a \u5168\u9762\u534f\u8c03\u53ef\u6301\u7eed\u7684\u57fa\u672c\u8981\u6c42 \u7edf\u7b79\u517c\u987e\u7684\u6839\u672c\u65b9\u6cd5 \u79d1\u5b66\u53d1\u5c55\u89c2\u7684\u4e3b\u8981\u5185\u5bb9 \u52a0\u5feb\u8f6c\u53d8\u7ecf\u6d4e\u53d1\u5c55\u65b9\u5f0f \u53d1\u5c55\u793e\u4f1a\u4e3b\u4e49\u6c11\u4e3b\u653f\u6cbb \u63a8\u8fdb\u793e\u4f1a\u4e3b\u4e49\u6587\u5316\u5f3a\u56fd\u7684\u5efa\u8bbe \u6784\u5efa\u793e\u4f1a\u4e3b\u4e49\u548c\u8c10\u793e\u4f1a \u63a8\u8fdb\u751f\u6001\u6587\u660e\u5efa\u8bbe \u5168\u9762\u63d0\u9ad8\u515a\u7684\u5efa\u8bbe\u79d1\u5b66\u5316\u6c34\u5e73 7.4 \u5730\u4f4d \u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u4f53\u7cfb\u7684\u63a5\u7eed\u53d1\u5c55 \u53d1\u5c55\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u5fc5\u987b\u957f\u671f\u575a\u6301\u7684\u6307\u5bfc\u601d\u60f3 \u7b2c\u516b\u7ae0\uff1a\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u601d\u60f3 8.1\u793e\u4f1a\u77db\u76fe\u7684\u53d8\u5316 \u4e3b\u8981\u77db\u76fe\u4ece\u539f\u6765\u7684\u4eba\u6c11\u65e5\u76ca\u589e\u957f\u7684\u7269\u8d28\u6587\u5316\u9700\u8981\u540c\u843d\u540e\u7684\u793e\u4f1a\u751f\u4ea7\u4e4b\u95f4\u7684\u77db\u76fe\u53d8\u6210\u4e86\u4eba\u6c11\u65e5\u76ca\u589e\u957f\u7684\u7f8e\u597d\u751f\u6d3b\u9700\u8981\u548c\u4e0d\u5e73\u8861\u4e0d\u5145\u5206\u7684\u53d1\u5c55\u4e4b\u95f4\u7684\u77db\u76fe 8.2\u6838\u5fc3\u8981\u4e49\u548c\u4e30\u5bcc\u5185\u6db5 \u516b\u4e2a\u660e\u786e\u3001\u4e94\u4f4d\u4e00\u4f53\u3001\u56db\u4e2a\u5168\u9762\u3001\u56db\u4e2a\u81ea\u4fe1 \u57fa\u672c\u65b9\u7565 \u575a\u6301\u515a\u5bf9\u4e00\u5207\u5de5\u4f5c\u7684\u9886\u5bfc \u4ee5\u4eba\u6c11\u4e3a\u4e2d\u5fc3 \u5168\u9762\u6df1\u5316\u6539\u9769 \u575a\u6301\u65b0\u53d1\u5c55\u7406\u5ff5 \u4eba\u6c11\u5f53\u5bb6\u4f5c\u4e3b \u5168\u9762\u4f9d\u6cd5\u6cbb\u56fd \u793e\u4f1a\u4e3b\u4e49\u6838\u5fc3\u4ef7\u503c\u4f53\u7cfb \u53d1\u5c55\u4e2d\u4fdd\u969c\u548c\u6539\u5584\u6c11\u751f \u4eba\u4e0e\u81ea\u7136\u548c\u8c10\u5171\u751f \u603b\u4f53\u56fd\u5bb6\u5b89\u5168\u89c2 \u5bf9\u4eba\u6c11\u519b\u961f\u7684\u7edd\u5bf9\u9886\u5bfc \u575a\u6301\u4e00\u56fd\u4e24\u5236\u548c\u63a8\u8fdb\u7956\u56fd\u7edf\u4e00 \u4eba\u7c7b\u547d\u8fd0\u5171\u540c\u4f53 \u4ece\u4e25\u6cbb\u515a 8.3\u5730\u4f4d \u662f\u9a6c\u514b\u601d\u4e3b\u4e49\u4e2d\u56fd\u5316\u7684\u6700\u65b0\u6210\u679c\uff0c\u65b0\u65f6\u4ee3\u7684\u7cbe\u795e\u65d7\u5e1c\uff0c\u5b9e\u73b0\u4e2d\u534e\u6c11\u65cf\u4f1f\u5927\u590d\u5174\u7684\u884c\u52a8\u6307\u5357 \u7b2c\u4e5d\u7ae0\uff1a\u575a\u6301\u548c\u53d1\u5c55\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7684\u603b\u4efb\u52a1 9.1\u4e2d\u56fd\u68a6 \u662f\u4e2d\u534e\u6c11\u65cf\u8fd1\u4ee3\u4ee5\u6765\u6700\u4f1f\u5927\u7684\u68a6\u60f3\uff0c\u5f52\u6839\u5230\u5e95\u662f\u4eba\u6c11\u7684\u731b\u3001\u56fd\u5bb6\u7684\u68a6\u3001\u6c11\u65cf\u7684\u68a6\uff0c\u4e5f\u662f\u6bcf\u4e00\u4e2a\u4e2d\u56fd\u4eba\u7684\u68a6\uff0c\u548c\u4e16\u754c\u5404\u56fd\u4eba\u6c11\u7684\u7f8e\u597d\u613f\u671b\u76f8\u901a \u8981\u5b9e\u73b0\u4e2d\u56fd\u68a6\u5fc5\u987b\u8d70\u4e2d\u56fd\u9053\u8def\uff0c\u4e5f\u5c31\u662f\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u9053\u8def\uff0c\u5f18\u626c\u4e2d\u56fd\u7cbe\u795e\uff0c\u51dd\u805a\u4e2d\u56fd\u529b\u91cf 9.2\u5efa\u6210\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5f3a\u56fd \u5f00\u542f\u5168\u9762\u5efa\u8bbe\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5f3a\u56fd\u7684\u65b0\u5f81\u7a0b \u5b9e\u73b0\u4e24\u6b65\u8d70\u6218\u7565 2020-2035\u57fa\u672c\u5b9e\u73b0\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u7684\u76ee\u6807\u8981\u6c42 2035-\u672c\u4e16\u7eaa\u4e2d\u53f6\uff0c\u7b80\u79f0\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5f3a\u56fd \u7b2c\u5341\u7ae0\uff1a\u201c\u4e94\u4f4d\u4e00\u4f53\u201d\u603b\u5e03\u5c40 10.1\u5efa\u8bbe\u73b0\u4ee3\u5316\u7ecf\u6d4e\u4f53\u7cfb \u8d2f\u5f7b\u65b0\u53d1\u5c55\u7406\u5ff5 \u662f\u53d1\u5c55\u7406\u8bba\u7684\u91cd\u5927\u5347\u534e\uff0c\u662f\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7ecf\u6d4e\u601d\u60f3\u7684\u4e3b\u8981\u5185\u5bb9 \u8981\u7d20\uff1a\u521b\u85aa\u3001\u534f\u8c03\u3001\u7eff\u8272\u3001\u5f00\u653e\u3001\u5171\u4eab\u7684\u65b0\u53d1\u5c55\u7406\u5ff5 \u6df1\u5316\u4f9b\u7ed9\u4fa7\u7ed3\u6784\u6027\u6539\u9769 \u63a8\u8fdb\u589e\u957f\u52a8\u80fd\u8f6c\u6362 \u6df1\u5316\u8981\u7d20\u5e02\u573a\u914d\u7f6e\u6539\u9769 \u52a0\u5927\u4eba\u529b\u8d44\u672c\u57f9\u80b2\u529b\u5ea6 \u6301\u7eed\u63a8\u8fdb\u4e09\u53bb\u4e00\u964d\u4e00\u8865 \u5efa\u8bbe\u73b0\u4ee3\u5316\u7ecf\u6d4e\u7cfb\u7684\u4e3b\u8981\u4efb\u52a1 \u4e24\u4e2a\u4e00\u767e\u5e74\u594b\u6597\u76ee\u6807 \u5927\u529b\u53d1\u5c55\u5b9e\u4f53\u7ecf\u6d4e \u52a0\u5feb\u5b9e\u65bd\u521b\u65b0\u9a71\u52a8\u53d1\u5c55\u6218\u7565 \u6fc0\u53d1\u5404\u7c7b\u5e02\u573a\u4e3b\u4f53\u6d3b\u529b \u79ef\u6781\u63a8\u52a8\u57ce\u4e61\u533a\u57df\u534f\u8c03\u53d1\u5c55 \u7740\u529b\u53d1\u5c55\u5f00\u653e\u578b\u7ecf\u6d4e \u52a0\u5feb\u5b8c\u5584\u793e\u4f1a\u4e3b\u4e49\u5e02\u573a\u7ecf\u6d4e\u4f53\u5236 10.2\u53d1\u5c55\u793e\u4f1a\u4e3b\u4e49\u6c11\u4e3b\u653f\u6cbb \u575a\u6301\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u653f\u6cbb\u53d1\u5c55\u9053\u8def \u662f\u575a\u6301\u515a\u7684\u672c\u8d28\u5c5e\u6027\uff0c\u8df5\u884c\u515a\u7684\u6839\u672c\u5b97\u65e8\u7684\u5fc5\u7136\u8981\u6c42 \u575a\u6301\u515a\u7684\u9886\u5bfc\uff0c\u4eba\u6c11\u5f53\u5bb6\u4f5c\u4e3b\u548c\u4f9d\u6cd5\u6cbb\u56fd\u7684\u6709\u673a\u7edf\u4e00 \u5065\u5168\u4eba\u6c11\u5f53\u5bb6\u4f5c\u4e3b\u5236\u5ea6\u4f53\u7cfb \u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u662f\u6211\u56fd\u6839\u672c\u653f\u6cbb\u5236\u5ea6 \u591a\u515a\u5408\u4f5c\u548c\u653f\u6cbb\u534f\u5546\u662f\u57fa\u672c\u653f\u6cbb\u5236\u5ea6\uff0c\u8fd8\u6709\u6c11\u65cf\u533a\u57df\u81ea\u6cbb\u3001\u57fa\u5c42\u7fa4\u4f17\u81ea\u6cbb \u5de9\u56fa\u548c\u53d1\u5c55\u7231\u56fd\u7edf\u4e00\u6218\u7ebf \u652f\u6301\u6c11\u4e3b\u515a\u6d3e \u6df1\u5316\u6c11\u65cf\u56e2\u7ed3 \u8d2f\u5f7b\u515a\u7684\u5b97\u6559\u5de5\u4f5c\u65b9\u9488 \u5927\u56e2\u7ed3\u3001\u5927\u8054\u5408 \u575a\u6301\u4e00\u56fd\u4e24\u5236\uff0c\u63a8\u8fdb\u7956\u56fd\u7edf\u4e00 10.3\u63a8\u52a8\u793e\u4f1a\u4e3b\u4e49\u6587\u5316\u7e41\u8363\u660c\u76db \u7262\u7262\u638c\u63e1\u610f\u8bc6\u5f62\u6001\u5de5\u4f5c\u9886\u5bfc\u6743 \u575a\u6301\u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u6307\u5bfc\u5730\u4f4d \u52a0\u5feb\u6784\u5efa\u4e2d\u56fd\u7279\u8272\u54f2\u5b66\u793e\u4f1a\u79d1\u5b66 \u575a\u6301\u6b63\u786e\u7684\u8206\u8bba\u5bfc\u5411 \u5efa\u8bbe\u597d\u7f51\u7edc\u7a7a\u95f4 \u843d\u5b9e\u597d\u610f\u8bc6\u5f62\u6001\u5de5\u4f5c\u7684\u8d23\u4efb\u5236 \u57f9\u80b2\u548c\u8df5\u884c\u793e\u4f1a\u4e3b\u4e49\u6838\u5fc3\u4ef7\u503c\u89c2 \u5168\u6c11\u884c\u52a8\uff0c\u5e72\u90e8\u5e26\u5934 \u7acb\u8db3\u4e2d\u534e\u4f18\u79c0\u4f20\u7edf\u6587\u5316\u548c\u9769\u547d\u6587\u5316 \u53d1\u8a00\u4f1f\u5927\u6c11\u65cf\u7cbe\u795e \u575a\u5b9a\u6587\u5316\u81ea\u4fe1\uff0c\u89c1\u793e\u4f1a\u4e3b\u4e49\u6587\u5316\u5f3a\u56fd 10.4\u575a\u6301\u5728\u53d1\u5c55\u4e2d\u4fdd\u969c\u548c\u6539\u5584\u6c11\u751f \u63d0\u9ad8\u4fdd\u969c\u548c\u6539\u5584\u6c11\u751f\u6c34\u5e73 \u4f18\u5148\u53d1\u5c55\u6559\u80b2 \u63d0\u9ad8\u5c31\u4e1a\u8d28\u91cf\u548c\u4eba\u6c11\u6536\u5165\u6c34\u5e73 \u52a0\u5f3a\u793e\u4f1a\u4fdd\u969c\u4f53\u7cfb\u5efa\u8bbe \u575a\u51b3\u6253\u8d62\u8131\u8d2b\u653b\u575a\u6218 \u52a0\u5f3a\u548c\u521b\u65b0\u793e\u4f1a\u6cbb\u7406 \u575a\u6301\u603b\u4f53\u56fd\u5bb6\u5b89\u5168\u89c2 10.5\u5efa\u8bbe\u7f8e\u4e3d\u4e2d\u56fd \u4eba\u4e0e\u81ea\u7136\u548c\u8c10\u5171\u751f \u5f62\u6210\u4eba\u4e0e\u81ea\u7136\u548c\u8c10\u53d1\u5c55\u65b0\u683c\u5c40 \u52a0\u5feb\u751f\u6001\u6587\u660e\u4f53\u5236\u6539\u9769 \u7b2c\u5341\u4e00\u7ae0\uff1a\u201c\u56db\u4e2a\u5168\u9762\u201d\u6218\u7565\u5e03\u5c40 11.1\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a \u5185\u6db5\u662f\u201c\u5168\u9762\u201d\uff0c\u6ce8\u91cd\u5e73\u8861\u6027\uff0c\u534f\u8c03\u6027\u548c\u53ef\u6301\u7eed\u6027 \u5b9e\u4e8b\u6c42\u662f\uff0c\u56e0\u5730\u5236\u5b9c \u9886\u57df\u8981\u5168\u9762 \u76ee\u6807\u8981\u6c42 \u7ecf\u6d4e\u4e2d\u9ad8\u901f\u3001\u521b\u65b0\u9a71\u52a8\u3001\u53d1\u5c55\u534f\u8c03 \u4eba\u6c11\u751f\u6d3b\u6c34\u5e73\u641e\u3001\u56fd\u6c11\u7d20\u8d28\u548c\u793e\u4f1a\u6587\u660e\u7a0b\u5ea6\u663e\u8457\u63d0\u9ad8 \u51b3\u80dc\u5168\u9762\u5c0f\u5eb7 \u575a\u51b3\u6253\u597d\u9632\u8303\u5316\u89e3\u91cd\u5927\u98ce\u9669\u7684\u653b\u575a\u6218 \u7cbe\u51c6\u8131\u8d2b\u653b\u575a\u6218\uff0c\u7cbe\u51c6\u6276\u8d2b \u6c61\u67d3\u6cbb\u7406\u653b\u575a\u6218 \u786e\u4fdd\u7ecf\u6d4e\u793e\u4f1a\u6301\u7eed\u5065\u5eb7\u53d1\u5c55 11.2\u5168\u9762\u6df1\u5316\u6539\u9769 \u575a\u5b9a\u4e0d\u79fb\u5730\u5168\u9762\u6df1\u5316\u6539\u9769\uff1a\u56db\u4e2a\u5168\u9762\u4e2d\u7a81\u7834\u6027\u548c\u5148\u5bfc\u6027\u7684\u5173\u952e\u73af\u8282 \u575a\u6301\u515a\u7684\u96c6\u4e2d\u7edf\u4e00\u9886\u5bfc\uff0c\u6cbf\u7740\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7684\u65b9\u5411\u524d\u8fdb \u575a\u6301\u6539\u9769\u6709\u5229\u4e8e\u7ef4\u62a4\u793e\u4f1a\u7684 \u516c\u5e73\u6b63\u4e49 \u575a\u6301\u793e\u4f1a\u4e3b\u4e49\u5e02\u573a\u7ecf\u6d4e\u7684\u6539\u9769\u65b9\u5411 \u5168\u9762\u6df1\u5316\u6539\u9769\u7684\u603b\u76ee\u6807\uff1a \u5b8c\u5584\u548c\u53d1\u5c55\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u5236\u5ea6 \uff0c \u63a8\u8fdb\u56fd\u5bb6\u6cbb\u7406\u4f53\u7cfb\u548c\u6cbb\u7406\u80fd\u529b \u7684\u73b0\u4ee3\u5316 \u6b63\u786e\u5904\u7406\u597d\u91cd\u5927\u5173\u7cfb \u6478\u7740\u77f3\u5934\u8fc7\u6cb3\u548c\u52a0\u5f3a\u9876\u5c42\u8bbe\u8ba1\u7684\u8fa9\u8bc1\u7edf\u4e00 \u5904\u7406\u597d\u6574\u4f53\u63a8\u8fdb\u548c\u91cd\u70b9\u7a81\u7834\u7684\u5173\u7cfb \u5904\u7406\u597d\u80c6\u5b50\u8981\u5927\u3001\u6b65\u5b50\u8981\u7a33\u7684\u5173\u7cfb \u5904\u7406\u597d\u6539\u9769\u3001\u53d1\u5c55\u3001\u7a33\u5b9a\u7684\u5173\u7cfb 11.3\u5168\u9762\u4f9d\u6cd5\u6cbb\u56fd \u515a\u7684\u5341\u516b\u5927\u660e\u786e\u63d0\u51fa\u4e86\u5168\u9762\u63a8\u8fdb\u4f9d\u6cd5\u6cbb\u56fd\u7684\u91cd\u8981\u76ee\u6807 \u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u6cd5\u6cbb\u9053\u8def \u515a\u7684\u9886\u5bfc \u4eba\u6c11\u7684\u4e3b\u4f53\u5730\u4f4d \u6cd5\u5f8b\u9762\u524d\u4eba\u4eba\u5e73\u7b49 \u4f9d\u6cd5\u6cbb\u56fd\u548c\u4ee5\u5fb7\u6cbb\u56fd\u76f8\u7ed3\u5408 \u575a\u6301\u4ece\u4e2d\u56fd\u5b9e\u9645\u51fa\u53d1 \u795e\u8bdd\u4f9d\u6cd5\u6cbb\u56fd\u65f6\u95f4\u7684\u91cd\u70b9\u4efb\u52a1 \u63a8\u8fdb\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u6cd5\u6cbb\u4f53\u7cfb\u7684\u5efa\u8bbe \u6df1\u5316\u4f9d\u6cd5\u6cbb\u56fd\u7684\u5b9e\u8df5 11.4\u5168\u9762\u4ece\u4e25\u6cbb\u515a \u65b0\u65f6\u4ee3\u515a\u7684\u5efa\u8bbe\u603b\u4f53\u8981\u6c42 \u6839\u672c\u65b9\u9488\uff1a\u575a\u6301\u515a\u8981\u7ba1\u515a\uff0c\u5168\u9762\u4ece\u4e25\u6cbb\u515a \u5efa\u8bbe\u76ee\u6807\uff1a\u628a\u515a\u5efa\u8bbe\u6210\u8d70\u5728\u65f6\u4ee3\u524d\u5217\uff0c\u4eba\u6c11\u62e5\u62a4\uff0c\u52c7\u4e8e\u81ea\u6211\u9769\u547d\u7684\u9a6c\u514b\u601d\u4e3b\u4e49\u6267\u653f\u515a \u628a\u515a\u7684\u653f\u6cbb\u5efa\u8bbe\u6446\u5728\u9996\u4f4d \u6839\u672c\u8981\u6c42\uff1a\u65d7\u5e1c\u9c9c\u660e\u8bb2\u653f\u6cbb \u653f\u6cbb\u5efa\u8bbe\u662f\u6839\u672c\u6027\u5efa\u8bbe\uff0c\u653f\u6cbb\u5c5e\u6027\u662f\u653f\u515a\u7b2c\u4e00\u4f4d\u7684\u5c5e\u6027 \u5168\u9762\u4ece\u4e25\u6cbb\u515a\u6c38\u8fdc\u5728\u8def\u4e0a","title":"\u6bdb\u6982\u671f\u672b\u901f\u6210"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_1","text":"","title":"\u6bdb\u6982\u671f\u672b\u901f\u6210"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_2","text":"","title":"\u7b2c\u4e00\u7ae0\uff1a\u6bdb\u6cfd\u4e1c\u601d\u60f3"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#11","text":"\u5386\u53f2\u6761\u4ef6\uff1a\u4fc4\u56fd\u5341\u6708\u9769\u547d\u7684\u80dc\u5229\u7ed9\u4e2d\u56fd\u9001\u6765\u4e86\u9a6c\u5217\u4e3b\u4e49\uff0c\u4e2d\u56fd\u9769\u547d\u4ece\u6b64\u6709\u4e86\u79d1\u5b66\u7684\u6307\u5bfc\u601d\u60f3 \u5b9e\u8df5\u57fa\u7840\uff1a\u4e2d\u56fd\u5171\u4ea7\u515a\u9886\u5bfc\u4eba\u6c11\u8fdb\u884c\u9769\u547d\u548c\u5efa\u8bbe\u7684\u6210\u529f\u5b9e\u8df5\u662f\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u5b9e\u8df5\u57fa\u7840\uff0c\u6bdb\u6cfd\u4e1c\u601d\u60f3\u662f\u5bf9\u7ecf\u9a8c\u6559\u8bad\u8fdb\u884c\u6df1\u523b\u603b\u7ed3\u7684\u7406\u8bba\u6210\u679c","title":"1.1\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u4ea7\u751f"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#12","text":"\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u5f62\u6210\uff1a \u7b2c\u4e00\u6b21\u56fd\u5185\u9769\u547d\u6218\u4e89\u65f6\u671f\uff0c\u300a\u4e2d\u56fd\u793e\u4f1a\u5404\u9636\u7ea7\u7684\u5206\u6790\u300b\u3001\u300a\u6e56\u5357\u519c\u6c11\u8fd0\u52a8\u8003\u5bdf\u62a5\u544a\u300b\u5206\u6790\u4e86\u4e2d\u56fd\u793e\u4f1a\u5404\u9636\u7ea7\u5728\u9769\u547d\u4e2d\u7684\u5730\u4f4d\u548c\u4f5c\u7528\uff0c\u63d0\u51fa\u4e86\u65b0\u6c11\u4e3b\u4e3b\u4e49\u9769\u547d\u7684\u57fa\u672c\u601d\u60f3 \u571f\u5730\u9769\u547d\u6218\u4e89\u65f6\u671f\uff0c\u575a\u6301\u4e86\u4e0e\u4e2d\u56fd\u9769\u547d\u5177\u4f53\u5b9e\u9645\u76f8\u7ed3\u5408\u7684\u57fa\u672c\u539f\u5219 \u300a\u4e2d\u56fd\u7ea2\u8272\u653f\u6743\u300b\u3001\u300a\u4e95\u5188\u5c71\u7684\u4e1c\u5f81\u300b\u7b49\u8457\u4f5c\u4e2d\u63d0\u51fa\u4e86\u6b66\u88c5\u593a\u53d6\u653f\u6743\u7684\u601d\u60f3\uff0c\u6807\u5fd7\u7740\u521d\u6b65\u5f62\u6210 \u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u6210\u719f \u77db\u76fe\u8bba\u548c\u5b9e\u8df5\u8bba\u7cfb\u7edf\u5206\u6790\u4e86\u5de6\u53f3\u9519\u8bef\u7684\u601d\u60f3\u6839\u6e90 \u65b0\u6c11\u4e3b\u4e3b\u4e49\u8bba\u3001\u8bba\u8054\u5408\u653f\u5e9c\u7b49\u8457\u4f5c\u4e2d\u9610\u8ff0\u4e86\u65b0\u6c11\u4e3b\u4e3b\u4e49\u9769\u547d\u7684\u603b\u8def\u7ebf \u7cfb\u7edf\u6027\u7684\u65b0\u6c11\u4e3b\u4e3b\u4e49\u7406\u8bba\u7684\u9610\u8ff0\uff0c\u5b9e\u73b0\u4e86\u9a6c\u514b\u601d\u4e3b\u4e49\u548c\u4e2d\u56fd\u9769\u547d\u5b9e\u9645\u76f8\u7ed3\u5408\u7684\u5386\u53f2\u6027\u98de\u8dc3 \u6807\u5fd7\u7740\u6bdb\u6cfd\u4e1c\u601d\u60f3\u8d8b\u4e8e\u6210\u719f \u7ee7\u7eed\u53d1\u5c55 \u4eba\u6c11\u6c11\u4e3b\u4e13\u653f\u7406\u8bba\u3001\u793e\u4f1a\u4e3b\u4e49\u6539\u9020\u7406\u8bba\u3001\u5173\u4e8e\u4e25\u683c\u533a\u5206\u548c\u6b63\u786e\u5904\u7406\u4e24\u7c7b\u77db\u76fe\u7684\u5b66\u8bf4 \u8fd9\u4e00\u65f6\u671f\u7684\u201c\u7b2c\u4e8c\u6b21\u7ed3\u5408\u201d\u5f62\u6210\u4e86\u5173\u4e8e\u793e\u4f1a\u4e3b\u4e49\u9769\u547d\u548c\u793e\u4f1a\u4e3b\u4e49\u5efa\u8bbe\u7684\u91cd\u8981\u601d\u60f3","title":"1.2\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u53d1\u5c55\u5386\u7a0b"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#13","text":"\u65b0\u6c11\u4e3b\u4e3b\u4e49\u9769\u547d\u7406\u8bba\uff1a\u4fdd\u6301\u65e0\u4ea7\u9636\u7ea7\u7684\u72ec\u7acb\u6027 \u793e\u4f1a\u4e3b\u4e49\u9769\u547d\u548c\u793e\u4f1a\u4e3b\u4e49\u5efa\u8bbe\u7406\u8bba \u4eba\u6c11\u5185\u90e8\uff1a\u56e2\u7ed3--\u6279\u8bc4--\u56e2\u7ed3 \u5176\u4ed6\u515a\u6d3e\uff1a\u957f\u671f\u5171\u5b58\uff0c\u4e92\u76f8\u7b80\u4ecb \u6587\u5316\uff1a\u767e\u82b1\u9f50\u653e\uff0c\u767e\u5bb6\u4e89\u9e23 \u7ecf\u6d4e\u5de5\u4f5c\uff1a\u7edf\u7b79\u517c\u987e\u3001\u9002\u5f53\u5b89\u6392 \u9769\u547d\u519b\u961f\u5efa\u8bbe\u548c\u519b\u4e8b\u6218\u7565\u7406\u8bba \u515a\u6307\u6325\u67aa\uff0c\u7edd\u5bf9\u9886\u5bfc \u653f\u7b56\u548c\u7b56\u7565\u7684\u7406\u8bba \u601d\u60f3\u653f\u6cbb\u5de5\u4f5c\u548c\u6587\u5316\u5de5\u4f5c\u7684\u7406\u8bba \u515a\u7684\u5efa\u8bbe\u7406\u8bba\u3001\u56fd\u9645\u6218\u7565\u548c\u5916\u4ea4\u5de5\u4f5c\u7406\u8bba","title":"1.3\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u4e3b\u8981\u5185\u5bb9"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#14","text":"\u8d2f\u7a7f\u4e8e\u6bdb\u6cfd\u4e1c\u601d\u60f3\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u7acb\u573a\u3001\u89c2\u70b9\u548c\u65b9\u6cd5\u662f\u6bdb\u6cfd\u4e1c\u601d\u60f3\u83b7\u5f97\u7075\u9b42\uff0c\u5305\u62ec\u4e09\u4e2a\u57fa\u672c\u65b9\u9762\uff1a \u5b9e\u4e8b\u6c42\u662f\uff1a\u4e00\u5207\u4ece\u5b9e\u9645\u51fa\u53d1\uff0c\u7406\u8bba\u8054\u7cfb\u5b9e\u9645 \u7fa4\u4f17\u8def\u7ebf\uff1a\u4e00\u5207\u4e3a\u4e86\u7fa4\u4f17\uff0c\u4e00\u5207\u4f9d\u9760\u7fa4\u4f17 \u72ec\u7acb\u81ea\u4e3b\uff1a\u575a\u6301\u72ec\u7acb\u601d\u8003\uff0c\u8d70\u81ea\u5df1\u7684\u8def","title":"1.4\u6bdb\u6cfd\u4e1c\u601d\u60f3\u6d3b\u7684\u7075\u9b42"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#15","text":"\u662f\u9a6c\u514b\u601d\u4e3b\u4e49\u4e2d\u56fd\u5316\u7684\u7b2c\u4e00\u4e2a\u91cd\u5927\u7406\u8bba\u6210\u679c\uff0c\u7b2c\u4e00\u6b21\u5386\u53f2\u6027\u7684\u98de\u8dc3 \u4e2d\u56fd\u9769\u547d\u548c\u5efa\u8bbe\u7684\u79d1\u5b66\u6307\u5357 \u4e2d\u56fd\u5171\u4ea7\u515a\u548c\u4e2d\u56fd\u4eba\u6c11\u5b9d\u8d35\u7684\u7cbe\u795e\u8d22\u5bcc","title":"1.5\u5386\u53f2\u5730\u4f4d"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_3","text":"","title":"\u7b2c\u4e94\u7ae0\uff1a\u9093\u5c0f\u5e73\u7406\u8bba"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#51","text":"\u65f6\u4ee3\u80cc\u666f\uff1a\u548c\u5e73\u4e0e\u53d1\u5c55\u6210\u4e3a\u65f6\u4ee3\u4e3b\u9898 \u5386\u53f2\u4f9d\u636e\uff1a\u793e\u4f1a\u4e3b\u4e49\u5efa\u8bbe\u7684\u7ecf\u9a8c\u6559\u8bad \u73b0\u5b9e\u4f9d\u636e\uff1a\u6539\u9769\u5f00\u653e\u548c\u73b0\u4ee3\u5316\u5efa\u8bbe\u7684\u5b9e\u8df5","title":"5.1\u9093\u5c0f\u5e73\u7406\u8bba\u7684\u5f62\u6210"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#52","text":"1978\u5e7412\u6708\uff0c\u7b2c\u5341\u4e00\u5c4a\u4e09\u4e2d\u5168\u4f1a\u4e2d\u5fc3\u786e\u7acb\u4e86\u89e3\u653e\u601d\u60f3\uff0c\u5b9e\u4e8b\u6c42\u662f\u7684\u601d\u60f3\u8def\u7ebf\uff0c\u505c\u6b62\u4f7f\u7528\u4ee5\u9636\u7ea7\u6597\u4e89\u4e3a\u7eb2\uff0c\u4f1f\u5927\u8f6c\u6298 1982\u5e74\u5341\u4e8c\u5927\u5f00\u5e55\u8bcd\u4e2d\u7b2c\u4e00\u6b21\u63d0\u51fa\u5efa\u8bbe\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49 1984\u5e74\u5341\u4e8c\u5c4a\u4e09\u4e2d\u5168\u4f1a\uff1a\u300a\u5173\u4e8e\u7ecf\u6d4e\u4f53\u5236\u6539\u9769\u7684\u51b3\u5b9a\u300b 1987\u5e74\u5341\u4e09\u5927\uff0c\u7cfb\u7edf\u8bba\u8ff0\u4e86\u793e\u4f1a\u4e3b\u4e49\u521d\u7ea7\u9636\u6bb5\u7406\u8bba\uff0c\u660e\u786e\u4e86\u4e00\u4e2a\u4e2d\u5fc3\u4e24\u4e2a\u57fa\u672c\u70b9\uff0c\u6807\u5fd7\u7740\u9093\u5c0f\u5e73\u7406\u8bba\u7684\u8f6e\u5ed3\u5f62\u6210 1992\u5e74\u5357\u65b9\u8c08\u8bdd\u662f\u9093\u5c0f\u5e73\u7406\u8bba\u7684\u96c6\u5927\u6210\u4e4b\u4f5c 1992\u5e74\u5341\u56db\u5927\u7cfb\u7edf\u603b\u7ed3\u4e86\u6539\u9769\u5f00\u653e\u4ee5\u6765\u5341\u56db\u5e74\u53d6\u5f97\u7684\u6210\u5c31\uff0c\u6982\u62ec\u4e86\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u7684\u4e3b\u8981\u5185\u5bb9 1997\u5e74\u5341\u4e94\u5927\u6b63\u5f0f\u63d0\u51fa\u4e86\u9093\u5c0f\u5e73\u7406\u8bba\u7684\u6982\u5ff5\uff0c\u5199\u5165\u515a\u7ae0\uff0c1999\u5e74\u8f7d\u5165\u5baa\u6cd5","title":"5.2\u5f62\u6210\u8fc7\u7a0b"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#53","text":"\u57fa\u672c\u95ee\u9898\uff1a\u4ec0\u4e48\u662f\u793e\u4f1a\u4e3b\u4e49\uff1f\u600e\u4e48\u6837\u5efa\u8bbe\u793e\u4f1a\u4e3b\u4e49\uff1f \u575a\u6301\u56db\u9879\u57fa\u672c\u539f\u5219\uff1a \u575a\u6301\u793e\u4f1a\u4e3b\u4e49\u57fa\u672c\u5236\u5ea6 \u575a\u6301\u516c\u6709\u5236\u4e3a\u57fa\u7840\uff0c\u5b9e\u884c\u6309\u52b3\u5206\u914d\u539f\u5219\u7684\u793e\u4f1a\u4e3b\u4e49\u57fa\u672c\u7ecf\u6d4e\u5236\u5ea6 \u575a\u6301\u5171\u4ea7\u515a\u94c3\u94db\uff0c\u5b9e\u884c\u4eba\u6c11\u6c11\u4e3b\u4e13\u653f\u7684\u793e\u4f1a\u4e3b\u4e49\u57fa\u672c\u653f\u6cbb\u5236\u5ea6 \u575a\u6301\u4ee5\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u3001\u6bdb\u6cfd\u4e1c\u601d\u60f3\u6307\u5bfc\u7684\u793e\u4f1a\u4e3b\u4e49\u610f\u8bc6\u5f62\u6001 \u793e\u4f1a\u4e3b\u4e49\u7684\u672c\u8d28\u662f\u89e3\u653e\u751f\u4ea7\u529b\u3001\u53d1\u5c55\u751f\u4ea7\u529b\u3001\u6d88\u706d\u5265\u524a\u3001\u6d88\u9664\u4e24\u6781\u5206\u5316\u3001\u6700\u7ec8\u8fbe\u5230\u5171\u540c\u5bcc\u88d5 \u4e3b\u8981\u5185\u5bb9 \u89e3\u653e\u601d\u60f3\uff0c\u5b9e\u4e8b\u6c42\u662f\u7684\u601d\u60f3\u8def\u7ebf \u793e\u4f1a\u4e3b\u4e49\u521d\u7ea7\u9636\u6bb5\u7406\u8bba\uff1a\u5341\u4e09\u5927\u3001\u5341\u4e94\u5927 \u515a\u7684\u57fa\u672c\u8def\u7ebf \u4ee5\u7ecf\u6d4e\u5efa\u8bbe\u4e3a\u4e2d\u5fc3 \u575a\u6301\u56db\u9879\u57fa\u672c\u539f\u5219\u3001\u575a\u6301\u6539\u9769\u5f00\u653e \u793e\u4f1a\u4e3b\u4e49\u6839\u672c\u4efb\u52a1\u7684\u7406\u8bba \u4e09\u6b65\u8d70\u6218\u7565 \u6e29\u9971\u95ee\u9898 \u5c0f\u5eb7\u6c34\u5e73 \u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316 \u6539\u9769\u5f00\u653e\u7406\u8bba \u793e\u4f1a\u4e3b\u4e49\u5e02\u573a\u7ecf\u6d4e\u7406\u8bba \u4e24\u624b\u6293\uff0c\u4e24\u624b\u90fd\u8981\u786c\uff1a\u7269\u8d28\u6587\u660e\u548c\u7cbe\u795e\u6587\u660e \u4e00\u56fd\u4e24\u5236\u4f1f\u5927\u6784\u60f3 \u4e2d\u56fd\u7684\u5173\u952e\u95ee\u9898\u5728\u4e8e\u515a","title":"5.3\u57fa\u672c\u95ee\u9898\u548c\u4e3b\u8981\u5185\u5bb9"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#54","text":"\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u548c\u6bdb\u6cfd\u4e1c\u601d\u60f3\u7684\u7ee7\u627f\u548c\u53d1\u5c55 \u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u4f53\u7cfb\u7684\u5f00\u7bc7\u4e4b\u4f5c \u6539\u9769\u5f00\u653e\u548c\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5efa\u8bbe\u7684\u79d1\u5b66\u6307\u5357","title":"5.4\u5386\u53f2\u5730\u4f4d"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_4","text":"","title":"\u7b2c\u516d\u7ae0\uff1a\u201c\u4e09\u4e2a\u4ee3\u8868\u201d\u91cd\u8981\u601d\u60f3"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#61","text":"\u5bf9\u51b7\u6218\u7ed3\u675f\u540e\u56fd\u9645\u5c40\u52bf\u79d1\u5b66\u5224\u65ad\u7684\u57fa\u7840\u4e0a\u5f62\u6210\u7684 \u662f\u5728\u79d1\u5b66\u5224\u65ad\u515a\u7684\u5386\u53f2\u65b9\u4f4d\u548c\u603b\u7ed3\u5386\u53f2\u7ecf\u9a8c\u7684\u57fa\u7840\u4e0a\u63d0\u51fa\u6765\u7684 \u662f\u5728\u5efa\u8bbe\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u4f1f\u5927\u5b9e\u8df5\u7684\u57fa\u7840\u4e0a\u5f62\u6210\u7684","title":"6.1\u5f62\u6210\u6761\u4ef6"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#62","text":"2002\u5e74\uff0c\u6c5f\u6cfd\u6c11\u5728\u4e2d\u5171\u4e2d\u592e\u515a\u6821\u6df1\u523b\u9610\u8ff0\u4e86\u4e09\u4e2a\u4ee3\u8868\u91cd\u8981\u601d\u60f3\u7684\u5185\u5728\u8054\u7cfb\uff0c\u63d0\u51fa\u5173\u952e\u5728\u575a\u6301\u4e0e\u65f6\u4ff1\u8fdb\uff0c\u6838\u5fc3\u5728\u4fdd\u6301\u515a\u7684\u5148\u8fdb\u6027\uff0c\u672c\u8d28\u5728\u6267\u653f\u4e3a\u6c11 \u5176\u4ed6\u7684\u7565\u4e86\uff0c\u770b\u8d77\u6765\u4e0d\u592a\u91cd\u8981","title":"6.2\u5f62\u6210\u8fc7\u7a0b"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#63","text":"\u6838\u5fc3\u89c2\u70b9 \u59cb\u7ec8\u4ee3\u8868\u4e2d\u56fd\u5148\u8fdb\u751f\u4ea7\u529b\u7684\u53d1\u5c55\u8981\u6c42 \u59cb\u7ec8\u4ee3\u8868\u4e2d\u56fd\u5148\u8fdb\u6587\u5316\u7684\u524d\u8fdb\u65b9\u5411 \u59cb\u7ec8\u4ee3\u8868\u4e2d\u56fd\u6700\u5e7f\u5927\u4eba\u6c11\u7684\u6839\u672c\u5229\u76ca \u4e3b\u8981\u5185\u5bb9 \u53d1\u5c55\u662f\u515a\u6267\u653f\u5174\u56fd\u7684\u7b2c\u4e00\u8981\u52a1 \u5efa\u7acb\u793e\u4f1a\u4e3b\u4e49\u5e02\u573a\u7ecf\u6d4e\u4f53\u5236 \u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a \u5efa\u8bbe\u793e\u4f1a\u4e3b\u4e49\u653f\u6cbb\u6587\u660e \u63a8\u8fdb\u515a\u7684\u5efa\u8bbe\u65b0\u7684\u4f1f\u5927\u5de5\u7a0b","title":"6.3\u6838\u5fc3\u89c2\u70b9\u548c\u4e3b\u8981\u5185\u5bb9"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#64","text":"\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u4f53\u7cfb\u7684\u63a5\u7eed\u53d1\u5c55 \u4e09\u4e2a\u4ee3\u8868\u662f\u7acb\u515a\u4e4b\u672c\u3001\u6267\u653f\u4e4b\u57fa\u3001\u529b\u91cf\u4e4b\u6e90 \u52a0\u5f3a\u548c\u6539\u8fdb\u515a\u7684\u5efa\u8bbe\uff0c\u63a8\u8fdb\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u4e8b\u4e1a\u7684\u5f3a\u5927\u7406\u8bba\u6b66\u5668","title":"6.4\u5386\u53f2\u5730\u4f4d"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_5","text":"","title":"\u7b2c\u4e03\u7ae0\uff1a\u79d1\u5b66\u53d1\u5c55\u89c2"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#71","text":"\u6df1\u523b\u628a\u63e1\u6211\u56fd\u57fa\u672c\u56fd\u60c5\u548c\u65b0\u7684\u9636\u6bb5\u6027\u7279\u5f81\u7684\u57fa\u7840\u4e0a\u5f62\u6210\u53d1\u5c55 \u518d\u6df1\u5165\u603b\u7ed3\u6539\u9769\u5f00\u653e\u4ee5\u6765\u7279\u522b\u662f\u5341\u516d\u5927\u4ee5\u6765\u5b9e\u8df5\u7ecf\u9a8c\u7684\u57fa\u7840\u4e0a\u5f62\u6210\u548c\u53d1\u5c55\u7684 \u6df1\u523b\u5206\u6790\u56fd\u9645\u5f62\u52bf\u3001\u987a\u5e94\u4e16\u754c\u53d1\u5c55\u8d8b\u52bf\u3001\u501f\u9274\u56fd\u5916\u53d1\u5c55\u7ecf\u9a8c","title":"7.1\u5f62\u6210\u6761\u4ef6"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#72","text":"\u515a\u7684\u5341\u516d\u5c4a\u56db\u4e2d\u5168\u4f1a\u628a\u68b3\u7406\u843d\u5b9e\u79d1\u5b66\u53d1\u5c55\u89c2\u4f5c\u4e3a\u63d0\u9ad8\u515a\u7684\u6267\u653f\u80fd\u529b\u7684\u91cd\u8981\u5185\u5bb9 \u5341\u4e03\u5927\u53ec\u5f00\u4f7f\u5f97\u79d1\u5b66\u53d1\u5c55\u89c2\u4e5f\u8fdb\u5165\u4e86\u4e00\u4e2a\u84ec\u52c3\u7684\u53d1\u5c55\u9636\u6bb5\uff0c\u79d1\u5b66\u53d1\u5c55\u89c2\u8fdb\u4e00\u6b65\u6210\u719f \u5341\u4e03\u5927\u63d0\u51fa\u4e86\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u4f53\u7cfb","title":"7.2\u53d1\u5c55\u5386\u7a0b"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#73","text":"\u5185\u6db5 \u63a8\u52a8\u793e\u4f1a\u7ecf\u6d4e\u53d1\u5c55\u662f\u79d1\u5b66\u53d1\u5c55\u89c2\u7684\u7b2c\u4e00\u8981\u4e49 \u4ee5\u4eba\u4e3a\u672c\u7684\u6838\u5fc3\u7acb\u573a \u5168\u9762\u534f\u8c03\u53ef\u6301\u7eed\u7684\u57fa\u672c\u8981\u6c42 \u7edf\u7b79\u517c\u987e\u7684\u6839\u672c\u65b9\u6cd5 \u79d1\u5b66\u53d1\u5c55\u89c2\u7684\u4e3b\u8981\u5185\u5bb9 \u52a0\u5feb\u8f6c\u53d8\u7ecf\u6d4e\u53d1\u5c55\u65b9\u5f0f \u53d1\u5c55\u793e\u4f1a\u4e3b\u4e49\u6c11\u4e3b\u653f\u6cbb \u63a8\u8fdb\u793e\u4f1a\u4e3b\u4e49\u6587\u5316\u5f3a\u56fd\u7684\u5efa\u8bbe \u6784\u5efa\u793e\u4f1a\u4e3b\u4e49\u548c\u8c10\u793e\u4f1a \u63a8\u8fdb\u751f\u6001\u6587\u660e\u5efa\u8bbe \u5168\u9762\u63d0\u9ad8\u515a\u7684\u5efa\u8bbe\u79d1\u5b66\u5316\u6c34\u5e73","title":"7.3\u5185\u6db5\u548c\u4e3b\u8981\u5185\u5bb9"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#74","text":"\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7406\u8bba\u4f53\u7cfb\u7684\u63a5\u7eed\u53d1\u5c55 \u53d1\u5c55\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u5fc5\u987b\u957f\u671f\u575a\u6301\u7684\u6307\u5bfc\u601d\u60f3","title":"7.4 \u5730\u4f4d"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_6","text":"","title":"\u7b2c\u516b\u7ae0\uff1a\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u601d\u60f3"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#81","text":"\u4e3b\u8981\u77db\u76fe\u4ece\u539f\u6765\u7684\u4eba\u6c11\u65e5\u76ca\u589e\u957f\u7684\u7269\u8d28\u6587\u5316\u9700\u8981\u540c\u843d\u540e\u7684\u793e\u4f1a\u751f\u4ea7\u4e4b\u95f4\u7684\u77db\u76fe\u53d8\u6210\u4e86\u4eba\u6c11\u65e5\u76ca\u589e\u957f\u7684\u7f8e\u597d\u751f\u6d3b\u9700\u8981\u548c\u4e0d\u5e73\u8861\u4e0d\u5145\u5206\u7684\u53d1\u5c55\u4e4b\u95f4\u7684\u77db\u76fe","title":"8.1\u793e\u4f1a\u77db\u76fe\u7684\u53d8\u5316"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#82","text":"\u516b\u4e2a\u660e\u786e\u3001\u4e94\u4f4d\u4e00\u4f53\u3001\u56db\u4e2a\u5168\u9762\u3001\u56db\u4e2a\u81ea\u4fe1 \u57fa\u672c\u65b9\u7565 \u575a\u6301\u515a\u5bf9\u4e00\u5207\u5de5\u4f5c\u7684\u9886\u5bfc \u4ee5\u4eba\u6c11\u4e3a\u4e2d\u5fc3 \u5168\u9762\u6df1\u5316\u6539\u9769 \u575a\u6301\u65b0\u53d1\u5c55\u7406\u5ff5 \u4eba\u6c11\u5f53\u5bb6\u4f5c\u4e3b \u5168\u9762\u4f9d\u6cd5\u6cbb\u56fd \u793e\u4f1a\u4e3b\u4e49\u6838\u5fc3\u4ef7\u503c\u4f53\u7cfb \u53d1\u5c55\u4e2d\u4fdd\u969c\u548c\u6539\u5584\u6c11\u751f \u4eba\u4e0e\u81ea\u7136\u548c\u8c10\u5171\u751f \u603b\u4f53\u56fd\u5bb6\u5b89\u5168\u89c2 \u5bf9\u4eba\u6c11\u519b\u961f\u7684\u7edd\u5bf9\u9886\u5bfc \u575a\u6301\u4e00\u56fd\u4e24\u5236\u548c\u63a8\u8fdb\u7956\u56fd\u7edf\u4e00 \u4eba\u7c7b\u547d\u8fd0\u5171\u540c\u4f53 \u4ece\u4e25\u6cbb\u515a","title":"8.2\u6838\u5fc3\u8981\u4e49\u548c\u4e30\u5bcc\u5185\u6db5"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#83","text":"\u662f\u9a6c\u514b\u601d\u4e3b\u4e49\u4e2d\u56fd\u5316\u7684\u6700\u65b0\u6210\u679c\uff0c\u65b0\u65f6\u4ee3\u7684\u7cbe\u795e\u65d7\u5e1c\uff0c\u5b9e\u73b0\u4e2d\u534e\u6c11\u65cf\u4f1f\u5927\u590d\u5174\u7684\u884c\u52a8\u6307\u5357","title":"8.3\u5730\u4f4d"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_7","text":"","title":"\u7b2c\u4e5d\u7ae0\uff1a\u575a\u6301\u548c\u53d1\u5c55\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7684\u603b\u4efb\u52a1"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#91","text":"\u662f\u4e2d\u534e\u6c11\u65cf\u8fd1\u4ee3\u4ee5\u6765\u6700\u4f1f\u5927\u7684\u68a6\u60f3\uff0c\u5f52\u6839\u5230\u5e95\u662f\u4eba\u6c11\u7684\u731b\u3001\u56fd\u5bb6\u7684\u68a6\u3001\u6c11\u65cf\u7684\u68a6\uff0c\u4e5f\u662f\u6bcf\u4e00\u4e2a\u4e2d\u56fd\u4eba\u7684\u68a6\uff0c\u548c\u4e16\u754c\u5404\u56fd\u4eba\u6c11\u7684\u7f8e\u597d\u613f\u671b\u76f8\u901a \u8981\u5b9e\u73b0\u4e2d\u56fd\u68a6\u5fc5\u987b\u8d70\u4e2d\u56fd\u9053\u8def\uff0c\u4e5f\u5c31\u662f\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u9053\u8def\uff0c\u5f18\u626c\u4e2d\u56fd\u7cbe\u795e\uff0c\u51dd\u805a\u4e2d\u56fd\u529b\u91cf","title":"9.1\u4e2d\u56fd\u68a6"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#92","text":"\u5f00\u542f\u5168\u9762\u5efa\u8bbe\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5f3a\u56fd\u7684\u65b0\u5f81\u7a0b \u5b9e\u73b0\u4e24\u6b65\u8d70\u6218\u7565 2020-2035\u57fa\u672c\u5b9e\u73b0\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u7684\u76ee\u6807\u8981\u6c42 2035-\u672c\u4e16\u7eaa\u4e2d\u53f6\uff0c\u7b80\u79f0\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5f3a\u56fd","title":"9.2\u5efa\u6210\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5f3a\u56fd"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_8","text":"","title":"\u7b2c\u5341\u7ae0\uff1a\u201c\u4e94\u4f4d\u4e00\u4f53\u201d\u603b\u5e03\u5c40"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#101","text":"\u8d2f\u5f7b\u65b0\u53d1\u5c55\u7406\u5ff5 \u662f\u53d1\u5c55\u7406\u8bba\u7684\u91cd\u5927\u5347\u534e\uff0c\u662f\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7ecf\u6d4e\u601d\u60f3\u7684\u4e3b\u8981\u5185\u5bb9 \u8981\u7d20\uff1a\u521b\u85aa\u3001\u534f\u8c03\u3001\u7eff\u8272\u3001\u5f00\u653e\u3001\u5171\u4eab\u7684\u65b0\u53d1\u5c55\u7406\u5ff5 \u6df1\u5316\u4f9b\u7ed9\u4fa7\u7ed3\u6784\u6027\u6539\u9769 \u63a8\u8fdb\u589e\u957f\u52a8\u80fd\u8f6c\u6362 \u6df1\u5316\u8981\u7d20\u5e02\u573a\u914d\u7f6e\u6539\u9769 \u52a0\u5927\u4eba\u529b\u8d44\u672c\u57f9\u80b2\u529b\u5ea6 \u6301\u7eed\u63a8\u8fdb\u4e09\u53bb\u4e00\u964d\u4e00\u8865 \u5efa\u8bbe\u73b0\u4ee3\u5316\u7ecf\u6d4e\u7cfb\u7684\u4e3b\u8981\u4efb\u52a1 \u4e24\u4e2a\u4e00\u767e\u5e74\u594b\u6597\u76ee\u6807 \u5927\u529b\u53d1\u5c55\u5b9e\u4f53\u7ecf\u6d4e \u52a0\u5feb\u5b9e\u65bd\u521b\u65b0\u9a71\u52a8\u53d1\u5c55\u6218\u7565 \u6fc0\u53d1\u5404\u7c7b\u5e02\u573a\u4e3b\u4f53\u6d3b\u529b \u79ef\u6781\u63a8\u52a8\u57ce\u4e61\u533a\u57df\u534f\u8c03\u53d1\u5c55 \u7740\u529b\u53d1\u5c55\u5f00\u653e\u578b\u7ecf\u6d4e \u52a0\u5feb\u5b8c\u5584\u793e\u4f1a\u4e3b\u4e49\u5e02\u573a\u7ecf\u6d4e\u4f53\u5236","title":"10.1\u5efa\u8bbe\u73b0\u4ee3\u5316\u7ecf\u6d4e\u4f53\u7cfb"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#102","text":"\u575a\u6301\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u653f\u6cbb\u53d1\u5c55\u9053\u8def \u662f\u575a\u6301\u515a\u7684\u672c\u8d28\u5c5e\u6027\uff0c\u8df5\u884c\u515a\u7684\u6839\u672c\u5b97\u65e8\u7684\u5fc5\u7136\u8981\u6c42 \u575a\u6301\u515a\u7684\u9886\u5bfc\uff0c\u4eba\u6c11\u5f53\u5bb6\u4f5c\u4e3b\u548c\u4f9d\u6cd5\u6cbb\u56fd\u7684\u6709\u673a\u7edf\u4e00 \u5065\u5168\u4eba\u6c11\u5f53\u5bb6\u4f5c\u4e3b\u5236\u5ea6\u4f53\u7cfb \u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u662f\u6211\u56fd\u6839\u672c\u653f\u6cbb\u5236\u5ea6 \u591a\u515a\u5408\u4f5c\u548c\u653f\u6cbb\u534f\u5546\u662f\u57fa\u672c\u653f\u6cbb\u5236\u5ea6\uff0c\u8fd8\u6709\u6c11\u65cf\u533a\u57df\u81ea\u6cbb\u3001\u57fa\u5c42\u7fa4\u4f17\u81ea\u6cbb \u5de9\u56fa\u548c\u53d1\u5c55\u7231\u56fd\u7edf\u4e00\u6218\u7ebf \u652f\u6301\u6c11\u4e3b\u515a\u6d3e \u6df1\u5316\u6c11\u65cf\u56e2\u7ed3 \u8d2f\u5f7b\u515a\u7684\u5b97\u6559\u5de5\u4f5c\u65b9\u9488 \u5927\u56e2\u7ed3\u3001\u5927\u8054\u5408 \u575a\u6301\u4e00\u56fd\u4e24\u5236\uff0c\u63a8\u8fdb\u7956\u56fd\u7edf\u4e00","title":"10.2\u53d1\u5c55\u793e\u4f1a\u4e3b\u4e49\u6c11\u4e3b\u653f\u6cbb"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#103","text":"\u7262\u7262\u638c\u63e1\u610f\u8bc6\u5f62\u6001\u5de5\u4f5c\u9886\u5bfc\u6743 \u575a\u6301\u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u6307\u5bfc\u5730\u4f4d \u52a0\u5feb\u6784\u5efa\u4e2d\u56fd\u7279\u8272\u54f2\u5b66\u793e\u4f1a\u79d1\u5b66 \u575a\u6301\u6b63\u786e\u7684\u8206\u8bba\u5bfc\u5411 \u5efa\u8bbe\u597d\u7f51\u7edc\u7a7a\u95f4 \u843d\u5b9e\u597d\u610f\u8bc6\u5f62\u6001\u5de5\u4f5c\u7684\u8d23\u4efb\u5236 \u57f9\u80b2\u548c\u8df5\u884c\u793e\u4f1a\u4e3b\u4e49\u6838\u5fc3\u4ef7\u503c\u89c2 \u5168\u6c11\u884c\u52a8\uff0c\u5e72\u90e8\u5e26\u5934 \u7acb\u8db3\u4e2d\u534e\u4f18\u79c0\u4f20\u7edf\u6587\u5316\u548c\u9769\u547d\u6587\u5316 \u53d1\u8a00\u4f1f\u5927\u6c11\u65cf\u7cbe\u795e \u575a\u5b9a\u6587\u5316\u81ea\u4fe1\uff0c\u89c1\u793e\u4f1a\u4e3b\u4e49\u6587\u5316\u5f3a\u56fd","title":"10.3\u63a8\u52a8\u793e\u4f1a\u4e3b\u4e49\u6587\u5316\u7e41\u8363\u660c\u76db"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#104","text":"\u63d0\u9ad8\u4fdd\u969c\u548c\u6539\u5584\u6c11\u751f\u6c34\u5e73 \u4f18\u5148\u53d1\u5c55\u6559\u80b2 \u63d0\u9ad8\u5c31\u4e1a\u8d28\u91cf\u548c\u4eba\u6c11\u6536\u5165\u6c34\u5e73 \u52a0\u5f3a\u793e\u4f1a\u4fdd\u969c\u4f53\u7cfb\u5efa\u8bbe \u575a\u51b3\u6253\u8d62\u8131\u8d2b\u653b\u575a\u6218 \u52a0\u5f3a\u548c\u521b\u65b0\u793e\u4f1a\u6cbb\u7406 \u575a\u6301\u603b\u4f53\u56fd\u5bb6\u5b89\u5168\u89c2","title":"10.4\u575a\u6301\u5728\u53d1\u5c55\u4e2d\u4fdd\u969c\u548c\u6539\u5584\u6c11\u751f"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#105","text":"\u4eba\u4e0e\u81ea\u7136\u548c\u8c10\u5171\u751f \u5f62\u6210\u4eba\u4e0e\u81ea\u7136\u548c\u8c10\u53d1\u5c55\u65b0\u683c\u5c40 \u52a0\u5feb\u751f\u6001\u6587\u660e\u4f53\u5236\u6539\u9769","title":"10.5\u5efa\u8bbe\u7f8e\u4e3d\u4e2d\u56fd"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#_9","text":"","title":"\u7b2c\u5341\u4e00\u7ae0\uff1a\u201c\u56db\u4e2a\u5168\u9762\u201d\u6218\u7565\u5e03\u5c40"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#111","text":"\u5185\u6db5\u662f\u201c\u5168\u9762\u201d\uff0c\u6ce8\u91cd\u5e73\u8861\u6027\uff0c\u534f\u8c03\u6027\u548c\u53ef\u6301\u7eed\u6027 \u5b9e\u4e8b\u6c42\u662f\uff0c\u56e0\u5730\u5236\u5b9c \u9886\u57df\u8981\u5168\u9762 \u76ee\u6807\u8981\u6c42 \u7ecf\u6d4e\u4e2d\u9ad8\u901f\u3001\u521b\u65b0\u9a71\u52a8\u3001\u53d1\u5c55\u534f\u8c03 \u4eba\u6c11\u751f\u6d3b\u6c34\u5e73\u641e\u3001\u56fd\u6c11\u7d20\u8d28\u548c\u793e\u4f1a\u6587\u660e\u7a0b\u5ea6\u663e\u8457\u63d0\u9ad8 \u51b3\u80dc\u5168\u9762\u5c0f\u5eb7 \u575a\u51b3\u6253\u597d\u9632\u8303\u5316\u89e3\u91cd\u5927\u98ce\u9669\u7684\u653b\u575a\u6218 \u7cbe\u51c6\u8131\u8d2b\u653b\u575a\u6218\uff0c\u7cbe\u51c6\u6276\u8d2b \u6c61\u67d3\u6cbb\u7406\u653b\u575a\u6218 \u786e\u4fdd\u7ecf\u6d4e\u793e\u4f1a\u6301\u7eed\u5065\u5eb7\u53d1\u5c55","title":"11.1\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#112","text":"\u575a\u5b9a\u4e0d\u79fb\u5730\u5168\u9762\u6df1\u5316\u6539\u9769\uff1a\u56db\u4e2a\u5168\u9762\u4e2d\u7a81\u7834\u6027\u548c\u5148\u5bfc\u6027\u7684\u5173\u952e\u73af\u8282 \u575a\u6301\u515a\u7684\u96c6\u4e2d\u7edf\u4e00\u9886\u5bfc\uff0c\u6cbf\u7740\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u7684\u65b9\u5411\u524d\u8fdb \u575a\u6301\u6539\u9769\u6709\u5229\u4e8e\u7ef4\u62a4\u793e\u4f1a\u7684 \u516c\u5e73\u6b63\u4e49 \u575a\u6301\u793e\u4f1a\u4e3b\u4e49\u5e02\u573a\u7ecf\u6d4e\u7684\u6539\u9769\u65b9\u5411 \u5168\u9762\u6df1\u5316\u6539\u9769\u7684\u603b\u76ee\u6807\uff1a \u5b8c\u5584\u548c\u53d1\u5c55\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u5236\u5ea6 \uff0c \u63a8\u8fdb\u56fd\u5bb6\u6cbb\u7406\u4f53\u7cfb\u548c\u6cbb\u7406\u80fd\u529b \u7684\u73b0\u4ee3\u5316 \u6b63\u786e\u5904\u7406\u597d\u91cd\u5927\u5173\u7cfb \u6478\u7740\u77f3\u5934\u8fc7\u6cb3\u548c\u52a0\u5f3a\u9876\u5c42\u8bbe\u8ba1\u7684\u8fa9\u8bc1\u7edf\u4e00 \u5904\u7406\u597d\u6574\u4f53\u63a8\u8fdb\u548c\u91cd\u70b9\u7a81\u7834\u7684\u5173\u7cfb \u5904\u7406\u597d\u80c6\u5b50\u8981\u5927\u3001\u6b65\u5b50\u8981\u7a33\u7684\u5173\u7cfb \u5904\u7406\u597d\u6539\u9769\u3001\u53d1\u5c55\u3001\u7a33\u5b9a\u7684\u5173\u7cfb","title":"11.2\u5168\u9762\u6df1\u5316\u6539\u9769"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#113","text":"\u515a\u7684\u5341\u516b\u5927\u660e\u786e\u63d0\u51fa\u4e86\u5168\u9762\u63a8\u8fdb\u4f9d\u6cd5\u6cbb\u56fd\u7684\u91cd\u8981\u76ee\u6807 \u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u6cd5\u6cbb\u9053\u8def \u515a\u7684\u9886\u5bfc \u4eba\u6c11\u7684\u4e3b\u4f53\u5730\u4f4d \u6cd5\u5f8b\u9762\u524d\u4eba\u4eba\u5e73\u7b49 \u4f9d\u6cd5\u6cbb\u56fd\u548c\u4ee5\u5fb7\u6cbb\u56fd\u76f8\u7ed3\u5408 \u575a\u6301\u4ece\u4e2d\u56fd\u5b9e\u9645\u51fa\u53d1 \u795e\u8bdd\u4f9d\u6cd5\u6cbb\u56fd\u65f6\u95f4\u7684\u91cd\u70b9\u4efb\u52a1 \u63a8\u8fdb\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u6cd5\u6cbb\u4f53\u7cfb\u7684\u5efa\u8bbe \u6df1\u5316\u4f9d\u6cd5\u6cbb\u56fd\u7684\u5b9e\u8df5","title":"11.3\u5168\u9762\u4f9d\u6cd5\u6cbb\u56fd"},{"location":"%E6%80%9D%E6%94%BF-%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E7%90%86%E8%AE%BA%E4%BD%93%E7%B3%BB%E6%A6%82%E8%AE%BA/%E6%AF%9B%E6%A6%82%E6%9C%9F%E6%9C%AB%E9%80%9F%E6%88%90.html#114","text":"\u65b0\u65f6\u4ee3\u515a\u7684\u5efa\u8bbe\u603b\u4f53\u8981\u6c42 \u6839\u672c\u65b9\u9488\uff1a\u575a\u6301\u515a\u8981\u7ba1\u515a\uff0c\u5168\u9762\u4ece\u4e25\u6cbb\u515a \u5efa\u8bbe\u76ee\u6807\uff1a\u628a\u515a\u5efa\u8bbe\u6210\u8d70\u5728\u65f6\u4ee3\u524d\u5217\uff0c\u4eba\u6c11\u62e5\u62a4\uff0c\u52c7\u4e8e\u81ea\u6211\u9769\u547d\u7684\u9a6c\u514b\u601d\u4e3b\u4e49\u6267\u653f\u515a \u628a\u515a\u7684\u653f\u6cbb\u5efa\u8bbe\u6446\u5728\u9996\u4f4d \u6839\u672c\u8981\u6c42\uff1a\u65d7\u5e1c\u9c9c\u660e\u8bb2\u653f\u6cbb \u653f\u6cbb\u5efa\u8bbe\u662f\u6839\u672c\u6027\u5efa\u8bbe\uff0c\u653f\u6cbb\u5c5e\u6027\u662f\u653f\u515a\u7b2c\u4e00\u4f4d\u7684\u5c5e\u6027 \u5168\u9762\u4ece\u4e25\u6cbb\u515a\u6c38\u8fdc\u5728\u8def\u4e0a","title":"11.4\u5168\u9762\u4ece\u4e25\u6cbb\u515a"},{"location":"%E6%80%9D%E6%94%BF-%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/index.html","text":"\u9a6c\u514b\u601d\u4e3b\u4e49\u57fa\u672c\u539f\u7406\u6982\u8bba \u5f20\u5f66\u8001\u5e08\uff0c2019-2020\u79cb\u51ac\u5b66\u671f \u5f20\u5f66\u8001\u5e08\u7684\u73ed\u6709\u4e2a\u975e\u5e38\u5947\u5999\u7684\u5e73\u65f6\u5206\u6ee1\u5206\u901a\u9053\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b8c\u6210\u4e0b\u9762\u4efb\u610f\u4e00\u9879\u4efb\u52a1\u6765\u5b9e\u73b0\u5e73\u65f6\u5206\u6ee1\u5206 \u591a\u5199\u4e00\u7bc73000\u5b57\u7684\u8bfe\u7a0b\u8bba\u6587 \u505a\u4e00\u6b21\u4e3b\u9898\u5c55\u793a \u505a\u4e00\u4e2a\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\u7684\u521b\u610f\u526a\u8f91\u89c6\u9891 \u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u4e1c\u897f\u4eca\u5e74\u8fd8\u6709\u6ca1\u6709\uff0c\u5982\u679c\u6709\u7684\u8bdd\u4e00\u5b9a\u8981\u505a\uff0c\u4e0d\u7136\u5f88\u6709\u53ef\u80fd\u4f1a\u88ab\u6b63\u6001\uff0c\u56e0\u4e3a\u6839\u636e\u6211\u7684\u89c2\u5bdf\u5f53\u65f6\u505a\u7684\u4eba\u5927\u6982\u6709\u4e00\u534a\u591a\uff0c\u5e76\u4e14\u6709\u7684\u4eba\u5b8c\u6210\u4e862-3\u9879\u4efb\u52a1 \u4eb2\u6d4b\u5b8c\u6210\u6ee1\u5206\u901a\u9053\u7684\u8bdd\u671f\u672b\u8003\u4f1a\u6bd4\u8f83\u8f7b\u677e\uff0c\u6bd4\u8f83\u5bb9\u6613\u5f97\u4e00\u4e2a\u8fd8\u884c\u7684\u5206\u6570\uff0c\u81f3\u5c11\u4e0d\u7528\u62c5\u5fc3\u62ff3.3 \u603b\u4e4b\u8fd9\u4e2a\u4e1c\u897f\u6709\u5229\u6709\u5f0a\uff0c\u770b\u4f60\u600e\u4e48\u5bf9\u5f85\u4e86\uff0c\u636e\u6211\u6240\u77e5\u522b\u7684\u73ed\u5e94\u8be5\u6ca1\u6709\u8fd9\u7c7b\u4e1c\u897f \u590d\u4e60\u53ef\u4ee5\u770b\u4e00\u773c\u6211\u968f\u4fbf\u6574\u7684\u7b14\u8bb0\uff0c\u4e0d\u8fc7\u6211\u4e0a\u8003\u573a\u7684\u65f6\u5019\u57fa\u672c\u90fd\u5fd8\u8bb0\u5149\u4e86","title":"Index"},{"location":"%E6%80%9D%E6%94%BF-%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/index.html#_1","text":"\u5f20\u5f66\u8001\u5e08\uff0c2019-2020\u79cb\u51ac\u5b66\u671f \u5f20\u5f66\u8001\u5e08\u7684\u73ed\u6709\u4e2a\u975e\u5e38\u5947\u5999\u7684\u5e73\u65f6\u5206\u6ee1\u5206\u901a\u9053\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b8c\u6210\u4e0b\u9762\u4efb\u610f\u4e00\u9879\u4efb\u52a1\u6765\u5b9e\u73b0\u5e73\u65f6\u5206\u6ee1\u5206 \u591a\u5199\u4e00\u7bc73000\u5b57\u7684\u8bfe\u7a0b\u8bba\u6587 \u505a\u4e00\u6b21\u4e3b\u9898\u5c55\u793a \u505a\u4e00\u4e2a\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\u7684\u521b\u610f\u526a\u8f91\u89c6\u9891 \u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u4e1c\u897f\u4eca\u5e74\u8fd8\u6709\u6ca1\u6709\uff0c\u5982\u679c\u6709\u7684\u8bdd\u4e00\u5b9a\u8981\u505a\uff0c\u4e0d\u7136\u5f88\u6709\u53ef\u80fd\u4f1a\u88ab\u6b63\u6001\uff0c\u56e0\u4e3a\u6839\u636e\u6211\u7684\u89c2\u5bdf\u5f53\u65f6\u505a\u7684\u4eba\u5927\u6982\u6709\u4e00\u534a\u591a\uff0c\u5e76\u4e14\u6709\u7684\u4eba\u5b8c\u6210\u4e862-3\u9879\u4efb\u52a1 \u4eb2\u6d4b\u5b8c\u6210\u6ee1\u5206\u901a\u9053\u7684\u8bdd\u671f\u672b\u8003\u4f1a\u6bd4\u8f83\u8f7b\u677e\uff0c\u6bd4\u8f83\u5bb9\u6613\u5f97\u4e00\u4e2a\u8fd8\u884c\u7684\u5206\u6570\uff0c\u81f3\u5c11\u4e0d\u7528\u62c5\u5fc3\u62ff3.3 \u603b\u4e4b\u8fd9\u4e2a\u4e1c\u897f\u6709\u5229\u6709\u5f0a\uff0c\u770b\u4f60\u600e\u4e48\u5bf9\u5f85\u4e86\uff0c\u636e\u6211\u6240\u77e5\u522b\u7684\u73ed\u5e94\u8be5\u6ca1\u6709\u8fd9\u7c7b\u4e1c\u897f \u590d\u4e60\u53ef\u4ee5\u770b\u4e00\u773c\u6211\u968f\u4fbf\u6574\u7684\u7b14\u8bb0\uff0c\u4e0d\u8fc7\u6211\u4e0a\u8003\u573a\u7684\u65f6\u5019\u57fa\u672c\u90fd\u5fd8\u8bb0\u5149\u4e86","title":"\u9a6c\u514b\u601d\u4e3b\u4e49\u57fa\u672c\u539f\u7406\u6982\u8bba"},{"location":"%E8%BD%AF%E5%B7%A5%E5%BF%85%E4%BF%AE-%E5%9B%BD%E9%99%85%E8%AF%81%E5%88%B8%E5%B8%82%E5%9C%BA%E5%AF%BC%E8%AE%BA/index.html","text":"\u56fd\u9645\u8bc1\u5238\u5e02\u573a\u5bfc\u8bba \u674e\u6210\u5143\u8001\u5e08\uff0c2019-2020\u590f\u5b66\u671f \u53c8\u662f\u8f6f\u5de5\u7684\u8c1c\u4e4b\u5fc5\u4fee\u8bfe\uff0c\u4e0d\u8fc7\u53ea\u67091\u5b66\u5206\uff0c\u57fa\u672c\u5c31\u662f\u8003\u8bd5\u5360100%\u4e86\uff0c\u671f\u672b\u8003\u7684\u9898\u76eePPT\u4e0a\u57fa\u672c\u90fd\u6709\u539f\u9898\u6216\u8005\u539f\u53e5\uff0c\u6ce8\u610f\u590d\u4e60 \u4eca\u5e74\u56e0\u4e3a\u75ab\u60c5\u539f\u56e0\u662f\u7ebf\u4e0a\u5f00\u5377\u8003\u8bd5\uff0c\u56e0\u6b64\u4fdd\u5b58\u4e86\u4e00\u5f20\u5386\u5e74\u5377 \u6ce8\u610f\u5982\u679c\u662f\u6b63\u5e38\u4e0a\u8bfe\u7684\u95ed\u5377\u8003\u8bd5\uff0c\u8fd8\u662f\u6709\u6bd4\u8f83\u5927\u7684\u96be\u5ea6\u7684\uff0c\u8981\u6ce8\u610f\u82b1\u70b9\u65f6\u95f4\u590d\u4e60 \u8bfe\u7a0b\u5185\u5bb9\u5c31\u5f53\u4e86\u89e3\u4e00\u4e0b\u80a1\u7968\u57fa\u91d1\u503a\u5238\u5916\u6c47\u7684\u57fa\u672c\u6982\u5ff5\u5427\uff0c~~\u867d\u7136\u6211\u57fa\u672c\u6ca1\u542c\u8bfe~~ \u4f30\u8ba1\u8003\u8bd5\u7684\u9898\u76ee\u5b8c\u5168\u6765\u81eaPPT\u4e0a\u6709\u7684\u4f8b\u9898\uff0c\u56e0\u6b64\u590d\u4e60\u7684\u65f6\u5019\u4ed4\u7ec6\u770b\u4e00\u904d\u8fd9\u4e9b\u9898\u76ee\uff0c\u975e\u5e38\u5bb9\u6613\u5f97\u9ad8\u5206\u7684","title":"Index"},{"location":"%E8%BD%AF%E5%B7%A5%E5%BF%85%E4%BF%AE-%E5%9B%BD%E9%99%85%E8%AF%81%E5%88%B8%E5%B8%82%E5%9C%BA%E5%AF%BC%E8%AE%BA/index.html#_1","text":"\u674e\u6210\u5143\u8001\u5e08\uff0c2019-2020\u590f\u5b66\u671f \u53c8\u662f\u8f6f\u5de5\u7684\u8c1c\u4e4b\u5fc5\u4fee\u8bfe\uff0c\u4e0d\u8fc7\u53ea\u67091\u5b66\u5206\uff0c\u57fa\u672c\u5c31\u662f\u8003\u8bd5\u5360100%\u4e86\uff0c\u671f\u672b\u8003\u7684\u9898\u76eePPT\u4e0a\u57fa\u672c\u90fd\u6709\u539f\u9898\u6216\u8005\u539f\u53e5\uff0c\u6ce8\u610f\u590d\u4e60 \u4eca\u5e74\u56e0\u4e3a\u75ab\u60c5\u539f\u56e0\u662f\u7ebf\u4e0a\u5f00\u5377\u8003\u8bd5\uff0c\u56e0\u6b64\u4fdd\u5b58\u4e86\u4e00\u5f20\u5386\u5e74\u5377 \u6ce8\u610f\u5982\u679c\u662f\u6b63\u5e38\u4e0a\u8bfe\u7684\u95ed\u5377\u8003\u8bd5\uff0c\u8fd8\u662f\u6709\u6bd4\u8f83\u5927\u7684\u96be\u5ea6\u7684\uff0c\u8981\u6ce8\u610f\u82b1\u70b9\u65f6\u95f4\u590d\u4e60 \u8bfe\u7a0b\u5185\u5bb9\u5c31\u5f53\u4e86\u89e3\u4e00\u4e0b\u80a1\u7968\u57fa\u91d1\u503a\u5238\u5916\u6c47\u7684\u57fa\u672c\u6982\u5ff5\u5427\uff0c~~\u867d\u7136\u6211\u57fa\u672c\u6ca1\u542c\u8bfe~~ \u4f30\u8ba1\u8003\u8bd5\u7684\u9898\u76ee\u5b8c\u5168\u6765\u81eaPPT\u4e0a\u6709\u7684\u4f8b\u9898\uff0c\u56e0\u6b64\u590d\u4e60\u7684\u65f6\u5019\u4ed4\u7ec6\u770b\u4e00\u904d\u8fd9\u4e9b\u9898\u76ee\uff0c\u975e\u5e38\u5bb9\u6613\u5f97\u9ad8\u5206\u7684","title":"\u56fd\u9645\u8bc1\u5238\u5e02\u573a\u5bfc\u8bba"},{"location":"%E8%BD%AF%E5%B7%A5%E9%80%89%E4%BF%AE-%E5%85%B1%E5%90%8C%E5%9F%BA%E9%87%91%E6%A6%82%E8%AE%BA/index.html","text":"\u5171\u540c\u57fa\u91d1\u6982\u8bba 2020-2021\u79cb\u5b66\u671f\uff0c\u9648\u9530\u8001\u5e08 \u7ed9\u5206\u8fd8\u884c\uff0c\u4f46\u4e5f\u4e0d\u7b97\u6ee1\u610f\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5e73\u65f6\u4e00\u8282\u8bfe\u90fd\u6ca1\u542c\u8fc7\uff0c\u5f88\u591a\u4e1c\u897f\u8003\u5230\u4e86\u90fd\u4e0d\u4f1a \u662f\u8f6f\u5de5\u7684\u9009\u4fee\u8bfe\uff0c\u70b9\u540d10+\u5c0f\u8bba\u658730+\u8003\u8bd560 \u6700\u540e\u6ca1\u70b9\u8fc7\u540d \u8bba\u6587\u4ea4\u4e86\u5c31\u6709\u6709\u5206\uff0c\u57fa\u672c\u5b8c\u5168\u770b\u8003\u8bd5\u7ed9\u5206\uff0c\u4e8b\u60c5\u7b97\u662f\u6bd4\u8f83\u5c11\u7684\uff0c\u5e94\u8be5\u4e5f\u4e0d\u4f1a\u6302\u4eba \u867d\u7136\u6210\u7ee9\u4e0d\u9ad8\u8fd8\u662f\u63a8\u8350\u51d1\u6a21\u5757\u5206 \u8003\u8bd5\u5168\u82f1\u6587\u670935\u4e2a\u9009\u62e9\u9898(2\u5206\u4e00\u9898)+4\u9053\u95ee\u7b54\u9898(10\u5206\u4e00\u9898\uff0c\u5176\u4e2d\u4e00\u9898\u662fbonus) \u8003\u8bd5\u4e4b\u524d\u4f1a\u5212\u91cd\u70b9\uff0c\u4f46\u597d\u50cf\u8003\u8bd5\u91cc\u51fa\u73b0\u4e86\u5f88\u591a\u91cd\u70b9\u91cc\u6ca1\u6709\u7684\u5185\u5bb9\uff0c\u4f46\u6240\u6709\u5185\u5bb9\u90fd\u6765\u81eaPPT lz\u8003\u524d\u4e4b\u524d\u9762\u5411\u91cd\u70b9\u590d\u4e60\uff0c\u597d\u591a\u4e0d\u77e5\u9053\uff0c\u6700\u540e\u6bd4\u8f83\u62c9\u8de8 \u540e\u976219\u7ea7\u5f00\u59cb\u8f6f\u5de5\u7684\u8fd9\u4e00\u6a21\u5757\u5e94\u8be5\u5c31\u6539\u62104\u5b66\u5206\u4e86\uff0c\u5efa\u8bae\u9009\u5b89\u5168\u7f16\u7a0b+\u5171\u540c\u57fa\u91d1\uff0c\u65e9\u70b9\u4fee\u5b8c\u65e9\u70b9\u8dd1","title":"Index"},{"location":"%E8%BD%AF%E5%B7%A5%E9%80%89%E4%BF%AE-%E5%85%B1%E5%90%8C%E5%9F%BA%E9%87%91%E6%A6%82%E8%AE%BA/index.html#_1","text":"2020-2021\u79cb\u5b66\u671f\uff0c\u9648\u9530\u8001\u5e08 \u7ed9\u5206\u8fd8\u884c\uff0c\u4f46\u4e5f\u4e0d\u7b97\u6ee1\u610f\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5e73\u65f6\u4e00\u8282\u8bfe\u90fd\u6ca1\u542c\u8fc7\uff0c\u5f88\u591a\u4e1c\u897f\u8003\u5230\u4e86\u90fd\u4e0d\u4f1a \u662f\u8f6f\u5de5\u7684\u9009\u4fee\u8bfe\uff0c\u70b9\u540d10+\u5c0f\u8bba\u658730+\u8003\u8bd560 \u6700\u540e\u6ca1\u70b9\u8fc7\u540d \u8bba\u6587\u4ea4\u4e86\u5c31\u6709\u6709\u5206\uff0c\u57fa\u672c\u5b8c\u5168\u770b\u8003\u8bd5\u7ed9\u5206\uff0c\u4e8b\u60c5\u7b97\u662f\u6bd4\u8f83\u5c11\u7684\uff0c\u5e94\u8be5\u4e5f\u4e0d\u4f1a\u6302\u4eba \u867d\u7136\u6210\u7ee9\u4e0d\u9ad8\u8fd8\u662f\u63a8\u8350\u51d1\u6a21\u5757\u5206 \u8003\u8bd5\u5168\u82f1\u6587\u670935\u4e2a\u9009\u62e9\u9898(2\u5206\u4e00\u9898)+4\u9053\u95ee\u7b54\u9898(10\u5206\u4e00\u9898\uff0c\u5176\u4e2d\u4e00\u9898\u662fbonus) \u8003\u8bd5\u4e4b\u524d\u4f1a\u5212\u91cd\u70b9\uff0c\u4f46\u597d\u50cf\u8003\u8bd5\u91cc\u51fa\u73b0\u4e86\u5f88\u591a\u91cd\u70b9\u91cc\u6ca1\u6709\u7684\u5185\u5bb9\uff0c\u4f46\u6240\u6709\u5185\u5bb9\u90fd\u6765\u81eaPPT lz\u8003\u524d\u4e4b\u524d\u9762\u5411\u91cd\u70b9\u590d\u4e60\uff0c\u597d\u591a\u4e0d\u77e5\u9053\uff0c\u6700\u540e\u6bd4\u8f83\u62c9\u8de8 \u540e\u976219\u7ea7\u5f00\u59cb\u8f6f\u5de5\u7684\u8fd9\u4e00\u6a21\u5757\u5e94\u8be5\u5c31\u6539\u62104\u5b66\u5206\u4e86\uff0c\u5efa\u8bae\u9009\u5b89\u5168\u7f16\u7a0b+\u5171\u540c\u57fa\u91d1\uff0c\u65e9\u70b9\u4fee\u5b8c\u65e9\u70b9\u8dd1","title":"\u5171\u540c\u57fa\u91d1\u6982\u8bba"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%5B%E9%80%9A%E6%A0%B8%5D%E5%85%89%E5%9F%BA%E7%A7%91%E6%8A%80%E4%B8%8E%E4%BA%BA%E7%B1%BB%E6%96%87%E6%98%8E/index.html","text":"\u5149\u57fa\u79d1\u57fa\u4e0e\u4eba\u7c7b\u6587\u660e (\u901a\u6838) \u4e24\u4e2a\u8001\u5e08\u8f6e\u7740\u4e0a\u8bfe\uff0c\u8001\u5e08\u90fd\u662f\u5149\u7535\u5b66\u9662\u7684\u5b66\u672f\u5927\u725b\uff0c\u5e94\u8be5\u8bf4\u4eba\u6bd4\u8f83\u548c\u853c\u53ef\u4eb2\uff0c\u6bcf\u5468\u8ba8\u8bba\u8bfe\u9700\u8981\u4ea4\u4e00\u6b21\u8ba8\u8bba\u62a5\u544a\uff0c\u4e5f\u9700\u8981\u4e0a\u53f0\u5c55\u793a\uff0c\u4e0d\u8fc7\u5f53\u65f6\u6709\u7684\u7ec4\u5c55\u793a\u662f\u76f4\u63a5\u62ff\u4e2a\u624b\u673a\u4e0a\u53f0\u5ff5\u767e\u5ea6\u91cc\u7684\u5185\u5bb9\uff0c\u8ba8\u8bba\u62a5\u544a\u770b\u8d77\u6765\u6bd4\u8f83\u7ade\uff0c\u4e4b\u524d\u4e0d\u61c2\u6bcf\u6b21\u8ba8\u8bba\u62a5\u544a\u5c31\u5199\u4e86\u4e94\u516d\u767e\u5b57\uff0c\u540e\u6765\u624d\u77e5\u9053\u522b\u4eba\u6bcf\u5468\u90fd\u4ea4\u4e24\u4e09\u5343\u5b57\u751a\u81f3\u66f4\u591a\u3002\u671f\u672b\u8003\u8bd5\u5185\u5bb9\u90fd\u6765\u81eaPPT\uff0c\u5e76\u4e14\u5f00\u5377\uff0c\u8bd5\u5377\u6700\u540e\u4f1a\u6709\u4e00\u7bc7\u5c0f\u4f5c\u6587\uff0c\u4f46\u6700\u540e\u7ed9\u5206\u6709\u4e00\u70b9\u8ff7\uff0c\u5f53\u65f6\u56e0\u4e3a\u6210\u7ee9\u4e0d\u6ee1\u8db3\u6b63\u6001\u5206\u5e03\uff0c\u8001\u5e08\u7ed9\u6240\u6709\u4eba\u6263\u4e86\u4e00\u5206\u5bfc\u81f4\u6211\u88ab\u5361\u7ee9\u4e86","title":"**\u5149\u57fa\u79d1\u57fa\u4e0e\u4eba\u7c7b\u6587\u660e**(\u901a\u6838)"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%5B%E9%80%9A%E6%A0%B8%5D%E5%85%89%E5%9F%BA%E7%A7%91%E6%8A%80%E4%B8%8E%E4%BA%BA%E7%B1%BB%E6%96%87%E6%98%8E/index.html#_1","text":"\u4e24\u4e2a\u8001\u5e08\u8f6e\u7740\u4e0a\u8bfe\uff0c\u8001\u5e08\u90fd\u662f\u5149\u7535\u5b66\u9662\u7684\u5b66\u672f\u5927\u725b\uff0c\u5e94\u8be5\u8bf4\u4eba\u6bd4\u8f83\u548c\u853c\u53ef\u4eb2\uff0c\u6bcf\u5468\u8ba8\u8bba\u8bfe\u9700\u8981\u4ea4\u4e00\u6b21\u8ba8\u8bba\u62a5\u544a\uff0c\u4e5f\u9700\u8981\u4e0a\u53f0\u5c55\u793a\uff0c\u4e0d\u8fc7\u5f53\u65f6\u6709\u7684\u7ec4\u5c55\u793a\u662f\u76f4\u63a5\u62ff\u4e2a\u624b\u673a\u4e0a\u53f0\u5ff5\u767e\u5ea6\u91cc\u7684\u5185\u5bb9\uff0c\u8ba8\u8bba\u62a5\u544a\u770b\u8d77\u6765\u6bd4\u8f83\u7ade\uff0c\u4e4b\u524d\u4e0d\u61c2\u6bcf\u6b21\u8ba8\u8bba\u62a5\u544a\u5c31\u5199\u4e86\u4e94\u516d\u767e\u5b57\uff0c\u540e\u6765\u624d\u77e5\u9053\u522b\u4eba\u6bcf\u5468\u90fd\u4ea4\u4e24\u4e09\u5343\u5b57\u751a\u81f3\u66f4\u591a\u3002\u671f\u672b\u8003\u8bd5\u5185\u5bb9\u90fd\u6765\u81eaPPT\uff0c\u5e76\u4e14\u5f00\u5377\uff0c\u8bd5\u5377\u6700\u540e\u4f1a\u6709\u4e00\u7bc7\u5c0f\u4f5c\u6587\uff0c\u4f46\u6700\u540e\u7ed9\u5206\u6709\u4e00\u70b9\u8ff7\uff0c\u5f53\u65f6\u56e0\u4e3a\u6210\u7ee9\u4e0d\u6ee1\u8db3\u6b63\u6001\u5206\u5e03\uff0c\u8001\u5e08\u7ed9\u6240\u6709\u4eba\u6263\u4e86\u4e00\u5206\u5bfc\u81f4\u6211\u88ab\u5361\u7ee9\u4e86","title":"\u5149\u57fa\u79d1\u57fa\u4e0e\u4eba\u7c7b\u6587\u660e(\u901a\u6838)"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E5%85%AC%E5%85%B1%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%AF%BC%E8%AE%BA/index.html","text":"\u516c\u5171\u7ecf\u6d4e\u5206\u6790\u5bfc\u8bba \u6211\u9009\u7684\u662fzbj\u8001\u5e08\u7684\u8bfe\uff0c\u4e8b\u60c5\u5f88\u5c11\uff0c\u53ea\u6709\u82e5\u5e72\u6b21\u70b9\u540d+\u4e00\u7bc7\u8bba\u6587\uff0c\u6240\u4ee5\u8bfe\u4e00\u5b9a\u8981\u53bb\uff0c\u8001\u5e08\u8bb2\u7684\u8fd8\u53ef\u4ee5\uff0c\u5c31\u662f\u8fd9\u4e9b\u77e5\u8bc6\u5bf9\u4e8e\u5916\u4e13\u4e1a\u7684\u4eba\u7528\u5904\u4e0d\u5927\uff0c\u8bba\u6587\u8001\u5e08\u9f13\u52b1\u548c\u81ea\u5df1\u7684 \u5b66\u79d1\u77e5\u8bc6\u76f8\u7ed3\u5408 \uff0c\u4f30\u8ba1\u8fd9\u4e48\u5199\u5bb9\u6613\u5f97\u9ad8\u5206\uff0c\u4e5f\u662f\u81f3\u5c113000\u5b57\u6ca1\u6709\u5b57\u6570\u4e0a\u9650\uff0c\u6700\u540e\u7ed9\u5206\u633a\u597d","title":"Index"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E5%85%AC%E5%85%B1%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%AF%BC%E8%AE%BA/index.html#_1","text":"\u6211\u9009\u7684\u662fzbj\u8001\u5e08\u7684\u8bfe\uff0c\u4e8b\u60c5\u5f88\u5c11\uff0c\u53ea\u6709\u82e5\u5e72\u6b21\u70b9\u540d+\u4e00\u7bc7\u8bba\u6587\uff0c\u6240\u4ee5\u8bfe\u4e00\u5b9a\u8981\u53bb\uff0c\u8001\u5e08\u8bb2\u7684\u8fd8\u53ef\u4ee5\uff0c\u5c31\u662f\u8fd9\u4e9b\u77e5\u8bc6\u5bf9\u4e8e\u5916\u4e13\u4e1a\u7684\u4eba\u7528\u5904\u4e0d\u5927\uff0c\u8bba\u6587\u8001\u5e08\u9f13\u52b1\u548c\u81ea\u5df1\u7684 \u5b66\u79d1\u77e5\u8bc6\u76f8\u7ed3\u5408 \uff0c\u4f30\u8ba1\u8fd9\u4e48\u5199\u5bb9\u6613\u5f97\u9ad8\u5206\uff0c\u4e5f\u662f\u81f3\u5c113000\u5b57\u6ca1\u6709\u5b57\u6570\u4e0a\u9650\uff0c\u6700\u540e\u7ed9\u5206\u633a\u597d","title":"\u516c\u5171\u7ecf\u6d4e\u5206\u6790\u5bfc\u8bba"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E5%88%9B%E6%96%B0%E5%88%9B%E4%B8%9A%E7%B1%BB-%E5%88%9B%E4%B8%9A%E5%90%AF%E7%A8%8B/index.html","text":"\u521b\u4e1a\u542f\u7a0b \u6211\u4eec\u5f53\u65f6\u597d\u50cf\u662f\u7b2c\u4e00\u6b21\u5f00\uff0c\u8fd9\u95e8\u8bfe\u7684\u524d\u8eab\u662f17\u7ea7\u7684\u521b\u4e1a\u57fa\u7840\uff0c\u7b2c\u4e00\u6b21\u5f00\u7684\u65f6\u5019\u6bd4\u8f83\u6c34\uff0c\u4e3b\u8981\u4ee5\u770b\u6155\u8bfe\u548c\u8bb2\u5ea7\u4e3a\u4e3b\uff0c\u4f5c\u4e1a\u6709\u6155\u8bfe\u7ec3\u4e60\u9898\uff0c\u8bb2\u5ea7\u611f\u60f3\u4e00\u7bc7\u548c\u521b\u4e1a\u91d1\u70b9\u5b50\u5341\u6761\uff0c\u7136\u540e\u8fd8\u6709\u95ed\u5377\u671f\u672b\u8003\u8bd5\uff0c\u5185\u5bb9\u4e3b\u8981\u6765\u81ea\u4e00\u672c\u4e66\uff0c\u5de5\u4f5c\u91cf\u4e2d\u7b49\uff0c\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u6c34\u7684\uff0c\u76f8\u6bd4\u4e8e\u804c\u89c4AB\u800c\u8a00\u6ca1\u6709\u5c0f\u7ec4\u8ba8\u8bba\u7b49\u73af\u8282\uff0c\u5efa\u8bae\u4e0d\u559c\u6b22\u5c0f\u7ec4\u8ba8\u8bba\u548c\u5c55\u793a\u7684\u540c\u5b66\u9009\u521b\u4e1a\u542f\u7a0b\u3002\u4e0d\u8fc7\u542c\u8fd9\u5b66\u671f\u5728\u4e0a\u7684\u540c\u5b66\u8bf4\uff0c\u5de5\u4f5c\u91cf\u52a0\u5927\u4e86\u4e0d\u5c11\uff0c\u5177\u4f53\u7684\u6211\u4e5f\u4e0d\u662f\u5f88\u4e86\u89e3\u3002\u6700\u540e\u53ef\u80fd\u662f\u8003\u8bd5\u8003\u5f97\u4e0d\u592a\u597d\uff0c\u7ed9\u5206\u7a0d\u5fae\u6709\u70b9\u8ff7","title":"Index"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E5%88%9B%E6%96%B0%E5%88%9B%E4%B8%9A%E7%B1%BB-%E5%88%9B%E4%B8%9A%E5%90%AF%E7%A8%8B/index.html#_1","text":"\u6211\u4eec\u5f53\u65f6\u597d\u50cf\u662f\u7b2c\u4e00\u6b21\u5f00\uff0c\u8fd9\u95e8\u8bfe\u7684\u524d\u8eab\u662f17\u7ea7\u7684\u521b\u4e1a\u57fa\u7840\uff0c\u7b2c\u4e00\u6b21\u5f00\u7684\u65f6\u5019\u6bd4\u8f83\u6c34\uff0c\u4e3b\u8981\u4ee5\u770b\u6155\u8bfe\u548c\u8bb2\u5ea7\u4e3a\u4e3b\uff0c\u4f5c\u4e1a\u6709\u6155\u8bfe\u7ec3\u4e60\u9898\uff0c\u8bb2\u5ea7\u611f\u60f3\u4e00\u7bc7\u548c\u521b\u4e1a\u91d1\u70b9\u5b50\u5341\u6761\uff0c\u7136\u540e\u8fd8\u6709\u95ed\u5377\u671f\u672b\u8003\u8bd5\uff0c\u5185\u5bb9\u4e3b\u8981\u6765\u81ea\u4e00\u672c\u4e66\uff0c\u5de5\u4f5c\u91cf\u4e2d\u7b49\uff0c\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u6c34\u7684\uff0c\u76f8\u6bd4\u4e8e\u804c\u89c4AB\u800c\u8a00\u6ca1\u6709\u5c0f\u7ec4\u8ba8\u8bba\u7b49\u73af\u8282\uff0c\u5efa\u8bae\u4e0d\u559c\u6b22\u5c0f\u7ec4\u8ba8\u8bba\u548c\u5c55\u793a\u7684\u540c\u5b66\u9009\u521b\u4e1a\u542f\u7a0b\u3002\u4e0d\u8fc7\u542c\u8fd9\u5b66\u671f\u5728\u4e0a\u7684\u540c\u5b66\u8bf4\uff0c\u5de5\u4f5c\u91cf\u52a0\u5927\u4e86\u4e0d\u5c11\uff0c\u5177\u4f53\u7684\u6211\u4e5f\u4e0d\u662f\u5f88\u4e86\u89e3\u3002\u6700\u540e\u53ef\u80fd\u662f\u8003\u8bd5\u8003\u5f97\u4e0d\u592a\u597d\uff0c\u7ed9\u5206\u7a0d\u5fae\u6709\u70b9\u8ff7","title":"\u521b\u4e1a\u542f\u7a0b"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E7%89%A9%E8%81%94%E7%BD%91%E4%B8%8E%E6%99%BA%E6%85%A7%E7%B3%BB%E7%BB%9F/index.html","text":"\u7269\u8054\u7f51\u4e0e\u667a\u6167\u7cfb\u7edf \u4e8b\u60c5\u591a\uff0c\u7ed9\u5206\u4e2d\u7b49\u6c34\u5e73 \u63a7\u5236\u5b66\u9662\u5f00\u7684\u8bfe\uff0c\u6709\u4e24\u4e2a\u8001\u5e08\u8f6e\u6d41\u4e0a\u8bfe\uff0c\u4e8b\u60c5\u6bd4\u8f83\u591a\uff0c\u6709\u82e5\u5e72\u6b21\u5c0f\u4f5c\u4e1a\uff0c\u4e00\u6b21\u5c0f\u7ec4\u5c55\u793a\u548c\u201c\u8bfe\u7a0b\u8bbe\u8ba1\u201d(\u5176\u5b9e\u8fd8\u662f\u62a5\u544a\u5f62\u5f0f)\uff0c\u76f8\u5bf9\u4e8e\u8fd9\u4e48\u591a\u4e8b\u60c5\u800c\u8a00\u7ed9\u5206\u6bd4\u8f83\u4e00\u822c","title":"Index"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E7%89%A9%E8%81%94%E7%BD%91%E4%B8%8E%E6%99%BA%E6%85%A7%E7%B3%BB%E7%BB%9F/index.html#_1","text":"\u4e8b\u60c5\u591a\uff0c\u7ed9\u5206\u4e2d\u7b49\u6c34\u5e73 \u63a7\u5236\u5b66\u9662\u5f00\u7684\u8bfe\uff0c\u6709\u4e24\u4e2a\u8001\u5e08\u8f6e\u6d41\u4e0a\u8bfe\uff0c\u4e8b\u60c5\u6bd4\u8f83\u591a\uff0c\u6709\u82e5\u5e72\u6b21\u5c0f\u4f5c\u4e1a\uff0c\u4e00\u6b21\u5c0f\u7ec4\u5c55\u793a\u548c\u201c\u8bfe\u7a0b\u8bbe\u8ba1\u201d(\u5176\u5b9e\u8fd8\u662f\u62a5\u544a\u5f62\u5f0f)\uff0c\u76f8\u5bf9\u4e8e\u8fd9\u4e48\u591a\u4e8b\u60c5\u800c\u8a00\u7ed9\u5206\u6bd4\u8f83\u4e00\u822c","title":"\u7269\u8054\u7f51\u4e0e\u667a\u6167\u7cfb\u7edf"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E7%8E%B0%E4%BB%A3%E6%88%98%E4%BA%89%E4%B8%8E%E5%9B%BD%E9%98%B2%E6%8A%80%E6%9C%AF/index.html","text":"\u73b0\u4ee3\u6218\u4e89\u4e0e\u56fd\u9632\u6280\u672f \u5415\u5f3a\u8001\u5e08\u7684\u8bfe\uff0cworkload\u4e3b\u8981\u662f\u51e0\u6b21\u5c0f\u7ec4\u8ba8\u8bba+\u4e00\u7bc7\u671f\u672b\u8bba\u6587\uff0c\u867d\u7136\u5415\u5f3a\u4eba\u5f88\u597d\uff0c\u4f46\u597d\u50cf\u6211\u4e0a\u8bfe\u4e0d\u592a\u542c\uff0c\u5c0f\u7ec4\u8ba8\u8bba\u7684\u7ed3\u679c\u5f88\u591a\u90fd\u662f\u73b0\u573a\u641c\u7684\uff0c\u5415\u5f3a\u4f1a\u53d1\u4e00\u4e2a\u8bba\u6587\u7684\u6a21\u677f\uff0c\u4e4b\u540e\u7684\u8bba\u6587\u4e5f\u53ef\u4ee5\u7559\u7740\u4f7f\u7528\uff0c\u7ed9\u5206\u8fd8\u884c\uff0c\u8bba\u6587\u81f3\u5c113000\u5b57\uff0c\u4e0a\u4e0d\u5c01\u9876","title":"\u73b0\u4ee3\u6218\u4e89\u4e0e\u56fd\u9632\u6280\u672f"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E7%8E%B0%E4%BB%A3%E6%88%98%E4%BA%89%E4%B8%8E%E5%9B%BD%E9%98%B2%E6%8A%80%E6%9C%AF/index.html#_1","text":"\u5415\u5f3a\u8001\u5e08\u7684\u8bfe\uff0cworkload\u4e3b\u8981\u662f\u51e0\u6b21\u5c0f\u7ec4\u8ba8\u8bba+\u4e00\u7bc7\u671f\u672b\u8bba\u6587\uff0c\u867d\u7136\u5415\u5f3a\u4eba\u5f88\u597d\uff0c\u4f46\u597d\u50cf\u6211\u4e0a\u8bfe\u4e0d\u592a\u542c\uff0c\u5c0f\u7ec4\u8ba8\u8bba\u7684\u7ed3\u679c\u5f88\u591a\u90fd\u662f\u73b0\u573a\u641c\u7684\uff0c\u5415\u5f3a\u4f1a\u53d1\u4e00\u4e2a\u8bba\u6587\u7684\u6a21\u677f\uff0c\u4e4b\u540e\u7684\u8bba\u6587\u4e5f\u53ef\u4ee5\u7559\u7740\u4f7f\u7528\uff0c\u7ed9\u5206\u8fd8\u884c\uff0c\u8bba\u6587\u81f3\u5c113000\u5b57\uff0c\u4e0a\u4e0d\u5c01\u9876","title":"\u73b0\u4ee3\u6218\u4e89\u4e0e\u56fd\u9632\u6280\u672f"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E7%AE%80%E5%8F%B2/index.html","text":"\u897f\u65b9\u97f3\u4e50\u7b80\u53f2 \u9648\u5217\u8001\u5e08\u7684\u8bfe\uff0c \u8001\u5e08\u4eba\u5f88\u6f02\u4eae\u4e5f\u5f88\u6709\u6c14\u8d28 \uff0c\u4f1a\u6709\u4e24\u6b21 \u968f\u5802\u7684\u542c\u94a2\u7434\u66f2\u5199\u66f2\u540d\u7684\u6d4b\u8bd5 \u536040%\uff0c\u4f46\u94a2\u7434\u66f2\u8303\u56f4\u4f1a\u63d0\u524d\u544a\u77e5\uff0c\u4e2a\u4eba\u6000\u7591\u8fd9\u4e00\u90e8\u5206\u624d\u662f\u5927\u5934\uff0c \u5982\u679c\u4e0d\u51c6\u5907\u53ef\u80fd\u8981\u9762\u4e34\u88ab\u6b63\u6001\u7684\u98ce\u9669 \uff0c\u60f3\u8981\u9ad8\u5206\u5e94\u8be5\u9700\u8981\u597d\u597d\u51c6\u5907\u4e00\u4e0b\uff0c\u8bba\u6587\u53ea\u89812000\u5b57\u5de6\u53f3\uff08\u9650\u5b9a\u4e86\u4e24\u9875A4\u7eb8\uff09","title":"\u897f\u65b9\u97f3\u4e50\u7b80\u53f2"},{"location":"%E9%80%9A%E8%AF%86%E9%80%89%E4%BF%AE-%E8%A5%BF%E6%96%B9%E9%9F%B3%E4%B9%90%E7%AE%80%E5%8F%B2/index.html#_1","text":"\u9648\u5217\u8001\u5e08\u7684\u8bfe\uff0c \u8001\u5e08\u4eba\u5f88\u6f02\u4eae\u4e5f\u5f88\u6709\u6c14\u8d28 \uff0c\u4f1a\u6709\u4e24\u6b21 \u968f\u5802\u7684\u542c\u94a2\u7434\u66f2\u5199\u66f2\u540d\u7684\u6d4b\u8bd5 \u536040%\uff0c\u4f46\u94a2\u7434\u66f2\u8303\u56f4\u4f1a\u63d0\u524d\u544a\u77e5\uff0c\u4e2a\u4eba\u6000\u7591\u8fd9\u4e00\u90e8\u5206\u624d\u662f\u5927\u5934\uff0c \u5982\u679c\u4e0d\u51c6\u5907\u53ef\u80fd\u8981\u9762\u4e34\u88ab\u6b63\u6001\u7684\u98ce\u9669 \uff0c\u60f3\u8981\u9ad8\u5206\u5e94\u8be5\u9700\u8981\u597d\u597d\u51c6\u5907\u4e00\u4e0b\uff0c\u8bba\u6587\u53ea\u89812000\u5b57\u5de6\u53f3\uff08\u9650\u5b9a\u4e86\u4e24\u9875A4\u7eb8\uff09","title":"\u897f\u65b9\u97f3\u4e50\u7b80\u53f2"}]}